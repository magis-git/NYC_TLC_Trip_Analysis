<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' inline='true' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NYC_Trip_Data_Clean' name='excel-direct.0kb7rbf1kttry31dpyhg50w1jnur'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Kurumi/bootcamp/NYC_Trail_Trip_Analysist/data/clean_data/NYC_Trip_Data_Clean.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kb7rbf1kttry31dpyhg50w1jnur' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' name='lpep_pickup_datetime' ordinal='1' />
            <column datatype='datetime' name='lpep_dropoff_datetime' ordinal='2' />
            <column datatype='string' name='RatecodeID' ordinal='3' />
            <column datatype='integer' name='PULocationID' ordinal='4' />
            <column datatype='integer' name='DOLocationID' ordinal='5' />
            <column datatype='string' name='passenger_count' ordinal='6' />
            <column datatype='real' name='trip_distance' ordinal='7' />
            <column datatype='real' name='fare_amount' ordinal='8' />
            <column datatype='real' name='tip_amount' ordinal='9' />
            <column datatype='string' name='payment_type' ordinal='10' />
            <column datatype='string' name='trip_type' ordinal='11' />
            <column datatype='string' name='PUBorough' ordinal='12' />
            <column datatype='string' name='PUZone' ordinal='13' />
            <column datatype='string' name='DOBorough' ordinal='14' />
            <column datatype='string' name='DOZone' ordinal='15' />
            <column datatype='string' name='time_zone' ordinal='16' />
            <column datatype='string' name='day_type' ordinal='17' />
            <column datatype='string' name='distance_category' ordinal='18' />
            <column datatype='real' name='duration' ordinal='19' />
            <column datatype='string' name='duration_category' ordinal='20' />
            <column datatype='real' name='speed' ordinal='21' />
            <column datatype='string' name='speed_category' ordinal='22' />
            <column datatype='string' name='fare_category' ordinal='23' />
            <column datatype='string' name='tip_category' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kb7rbf1kttry31dpyhg50w1jnur' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' name='lpep_pickup_datetime' ordinal='1' />
            <column datatype='datetime' name='lpep_dropoff_datetime' ordinal='2' />
            <column datatype='string' name='RatecodeID' ordinal='3' />
            <column datatype='integer' name='PULocationID' ordinal='4' />
            <column datatype='integer' name='DOLocationID' ordinal='5' />
            <column datatype='string' name='passenger_count' ordinal='6' />
            <column datatype='real' name='trip_distance' ordinal='7' />
            <column datatype='real' name='fare_amount' ordinal='8' />
            <column datatype='real' name='tip_amount' ordinal='9' />
            <column datatype='string' name='payment_type' ordinal='10' />
            <column datatype='string' name='trip_type' ordinal='11' />
            <column datatype='string' name='PUBorough' ordinal='12' />
            <column datatype='string' name='PUZone' ordinal='13' />
            <column datatype='string' name='DOBorough' ordinal='14' />
            <column datatype='string' name='DOZone' ordinal='15' />
            <column datatype='string' name='time_zone' ordinal='16' />
            <column datatype='string' name='day_type' ordinal='17' />
            <column datatype='string' name='distance_category' ordinal='18' />
            <column datatype='real' name='duration' ordinal='19' />
            <column datatype='string' name='duration_category' ordinal='20' />
            <column datatype='real' name='speed' ordinal='21' />
            <column datatype='string' name='speed_category' ordinal='22' />
            <column datatype='string' name='fare_category' ordinal='23' />
            <column datatype='string' name='tip_category' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y10001:no:A1:Y10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lpep_pickup_datetime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[lpep_pickup_datetime]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>lpep_pickup_datetime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lpep_dropoff_datetime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[lpep_dropoff_datetime]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>lpep_dropoff_datetime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatecodeID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatecodeID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>RatecodeID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PULocationID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PULocationID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PULocationID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOLocationID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOLocationID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DOLocationID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>passenger_count</remote-name>
            <remote-type>130</remote-type>
            <local-name>[passenger_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>passenger_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_distance]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>trip_distance</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fare_amount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>fare_amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip_amount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tip_amount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>payment_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[payment_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>payment_type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[trip_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>trip_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PUBorough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PUBorough]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PUBorough</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PUZone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PUZone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PUZone</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOBorough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DOBorough]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DOBorough</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOZone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DOZone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DOZone</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time_zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time_zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>time_zone</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>day_type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[distance_category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>distance_category</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[duration_category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>duration_category</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[speed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>speed</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>speed_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[speed_category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>speed_category</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>fare_category</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tip_category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tip_category</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='count_tip_borough' datatype='integer' name='[Calculation_2215208076859199488]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [DOBorough] :COUNT([tip_amount])}' />
      </column>
      <column caption='borough_more_100' datatype='boolean' name='[Calculation_2215208076859568129]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_2215208076859199488] &gt; 100' />
      </column>
      <column caption='count_borough_route' datatype='integer' name='[Calculation_349310455659053061]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_7986008048627429384])' />
      </column>
      <column caption='rank_borough_route' datatype='boolean' name='[Calculation_349310455659233286]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_349310455659053061], &apos;desc&apos;) &lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='count_zone_route' datatype='integer' name='[Calculation_349310455660998663]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Calculation_7986008048629805067])' />
      </column>
      <column caption='rank_zone_route' datatype='boolean' name='[Calculation_349310455661096968]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_349310455660998663], &apos;desc&apos;) &lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='count_borough' datatype='integer' name='[Calculation_349310455661703178]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([DOBorough])' />
      </column>
      <column caption='rank_borough' datatype='boolean' name='[Calculation_349310455661813771]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_349310455661703178], &apos;desc&apos;) &lt;=5'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='count_zone' datatype='integer' name='[Calculation_349310455665676303]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([DOZone])' />
      </column>
      <column caption='rank_zone' datatype='boolean' name='[Calculation_349310455665770512]' role='measure' type='nominal'>
        <calculation class='tableau' formula='RANK([Calculation_349310455665676303], &apos;desc&apos;) &lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='count_by_day' datatype='integer' name='[Calculation_7986008048603348993]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='({ FIXED year([lpep_pickup_datetime]), QUARTER([lpep_pickup_datetime]), month([lpep_pickup_datetime]), DAY([lpep_pickup_datetime])&#13;&#10;&#13;&#10;: count(day([lpep_pickup_datetime]))})' />
      </column>
      <column caption='avg_fare_borough' datatype='real' name='[Calculation_7986008048626868231]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='({ FIXED [PUBorough], [DOBorough]: AVG([fare_amount])})' />
      </column>
      <column caption='borough_route' datatype='string' name='[Calculation_7986008048627429384]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[PUBorough] + &quot; - &quot; + [DOBorough]' />
      </column>
      <column caption='top_10' datatype='boolean' name='[Calculation_7986008048628592649]' role='measure' type='nominal'>
        <calculation class='tableau' formula='index()&lt;=10'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='avg_fare_zone' datatype='real' name='[Calculation_7986008048629678090]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='({ FIXED [PUZone], [DOZone]: AVG([fare_amount])})' />
      </column>
      <column caption='zone_route' datatype='string' name='[Calculation_7986008048629805067]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[PUZone] + &quot; - &quot; + [DOZone]' />
      </column>
      <column caption='do_borough_zone' datatype='string' name='[Calculation_7986008048657494028]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[DOBorough] + &quot; - &quot; + [DOZone]' />
      </column>
      <column caption='pu_borough_zone' datatype='string' name='[Calculation_7986008048658251789]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[PUBorough] + &quot; - &quot; + [PUZone]' />
      </column>
      <column caption='tip_amount_exist' datatype='boolean' name='[Calculation_7986008048662089743]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[tip_amount] &gt; 0' />
      </column>
      <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
      <column caption='DO Location ID' datatype='integer' name='[DOLocationID]' role='dimension' type='ordinal' />
      <column caption='DO Zone' datatype='string' name='[DOZone]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='PU Borough' datatype='string' name='[PUBorough]' role='dimension' type='nominal' />
      <column caption='PU Location ID' datatype='integer' name='[PULocationID]' role='dimension' type='ordinal' />
      <column aggregation='CountD' caption='PU Zone' datatype='string' name='[PUZone]' role='dimension' type='nominal' />
      <column caption='Ratecode ID' datatype='string' name='[RatecodeID]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_ADE6ECF77F2444168E07C803792869CE]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Day Type' datatype='string' name='[day_type]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Distance Category' datatype='string' name='[distance_category]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='real' name='[duration]' role='measure' type='quantitative' />
      <column caption='Duration Category' datatype='string' name='[duration_category]' role='dimension' type='nominal' />
      <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
      <column caption='Fare Category' datatype='string' name='[fare_category]' role='dimension' type='nominal' />
      <column caption='Lpep Dropoff Datetime' datatype='datetime' name='[lpep_dropoff_datetime]' role='dimension' type='ordinal' />
      <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
      <column caption='Passenger Count' datatype='string' name='[passenger_count]' role='dimension' type='nominal' />
      <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
      <column caption='Speed' datatype='real' name='[speed]' role='measure' type='quantitative' />
      <column caption='Speed Category' datatype='string' name='[speed_category]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Time Zone' datatype='string' name='[time_zone]' role='dimension' type='nominal' />
      <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
      <column caption='Tip Category' datatype='string' name='[tip_category]' role='dimension' type='nominal' />
      <column caption='Trip Distance' datatype='real' name='[trip_distance]' role='measure' type='quantitative' />
      <column caption='Trip Type' datatype='string' name='[trip_type]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_7986008048627429384]' derivation='None' name='[none:Calculation_7986008048627429384:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_7986008048629805067]' derivation='None' name='[none:Calculation_7986008048629805067:nk]' pivot='key' type='nominal' />
      <column-instance column='[DOBorough]' derivation='None' name='[none:DOBorough:nk]' pivot='key' type='nominal' />
      <column-instance column='[DOZone]' derivation='None' name='[none:DOZone:nk]' pivot='key' type='nominal' />
      <column-instance column='[PUBorough]' derivation='None' name='[none:PUBorough:nk]' pivot='key' type='nominal' />
      <column-instance column='[RatecodeID]' derivation='None' name='[none:RatecodeID:nk]' pivot='key' type='nominal' />
      <column-instance column='[day_type]' derivation='None' name='[none:day_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[distance_category]' derivation='None' name='[none:distance_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[duration_category]' derivation='None' name='[none:duration_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:nk]' pivot='key' type='nominal' />
      <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[time_zone]' derivation='None' name='[none:time_zone:nk]' pivot='key' type='nominal' />
      <column-instance column='[trip_type]' derivation='None' name='[none:trip_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[lpep_pickup_datetime]' derivation='Weekday' name='[wd:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/agiss/AppData/Local/Temp/TableauTemp/#TableauTemp_1kqj3wf062ld5813guar117ysjip.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/31/2024 03:15:05 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60828</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lpep_pickup_datetime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[lpep_pickup_datetime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lpep_pickup_datetime</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>60828</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lpep_dropoff_datetime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[lpep_dropoff_datetime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lpep_dropoff_datetime</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>57750</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RatecodeID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[RatecodeID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RatecodeID</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PULocationID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PULocationID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PULocationID</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOLocationID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DOLocationID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOLocationID</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>476</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>passenger_count</remote-name>
              <remote-type>129</remote-type>
              <local-name>[passenger_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>passenger_count</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_distance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_distance</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1832</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_amount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[fare_amount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_amount</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>937</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tip_amount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tip_amount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tip_amount</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1609</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>payment_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[payment_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>payment_type</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_type</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PUBorough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PUBorough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PUBorough</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PUZone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PUZone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PUZone</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOBorough</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DOBorough]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOBorough</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOZone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DOZone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOZone</remote-alias>
              <ordinal>15</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>476</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time_zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[time_zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time_zone</remote-alias>
              <ordinal>16</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day_type</remote-alias>
              <ordinal>17</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>distance_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[distance_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>distance_category</remote-alias>
              <ordinal>18</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration</remote-alias>
              <ordinal>19</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4721</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[duration_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration_category</remote-alias>
              <ordinal>20</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>speed</remote-name>
              <remote-type>5</remote-type>
              <local-name>[speed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>speed</remote-alias>
              <ordinal>21</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4217</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>speed_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[speed_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>speed_category</remote-alias>
              <ordinal>22</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_category</remote-alias>
              <ordinal>23</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tip_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tip_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tip_category</remote-alias>
              <ordinal>24</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADE6ECF77F2444168E07C803792869CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:day_type:nk]' type='palette'>
            <map to='#a2ceaa'>
              <bucket>&quot;Weekend&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Weekdays&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:time_zone:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Late Night&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Evening&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Morning&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Afternoon&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:lpep_pickup_datetime:ok]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>1</bucket>
            </map>
            <map to='#638b66'>
              <bucket>4</bucket>
            </map>
            <map to='#849db1'>
              <bucket>2</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>3</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>5</bucket>
            </map>
            <map to='#f47942'>
              <bucket>6</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PUBorough:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:distance_category:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;&gt;10 miles&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;7-10 miles&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;&lt;2 miles&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;3-6 miles&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:passenger_count:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;4.0&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;&gt;4&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;1.0&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;3.0&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;2.0&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:payment_type:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;No charge&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Cash&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Credit card&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dispute&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatecodeID:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;Newark Airport&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Negotiated fare&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Standard rate&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;JFK Airport&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:duration_category:nk]' type='palette'>
            <map to='#638b66'>
              <bucket>&quot;&gt;30 minutes&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;&lt;5 minutes&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;5-15 minutes&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;15-30 minutes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:trip_type:nk]' type='palette'>
            <map to='#a2ceaa'>
              <bucket>&quot;Dispatch&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Street-hail&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:DOZone:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Baisley Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fresh Meadows&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hudson Sq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roosevelt Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Borough Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ridgewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Battery Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bronx Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Flushing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fordham South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lenox Hill West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Midtown Center&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Flatiron&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bay Ridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canarsie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crown Heights North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mount Hope&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bath Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Country Club&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Tremont&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Garment District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hunts Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ocean Parkway South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Port Richmond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seaport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Westerleigh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bronxdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;College Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hollis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lincoln Square East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Midtown East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pelham Bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Albans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Yorkville East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomingdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;City Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eastchester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Financial District South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oakland Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Springfield Gardens South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Upper West Side South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambria Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flatlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ocean Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Starrett City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yorkville West&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Dyker Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bensonhurst East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Far Rockaway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marble Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Corona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Randalls Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Williamsburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Upper East Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Newark Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Street&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Park/Highland Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Homecrest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Midtown North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockaway Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint George/New Brighton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Sunset Park East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown Heights South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gramercy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queens Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Concourse&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Greenwich Village South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bellerose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cypress Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica Estates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manhattan Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queensboro Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bensonhurst West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Financial District North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Park/Floyd Bennett Field&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Upper West Side North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Chelsea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grymes Hill/Clifton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mariners Harbor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;World Trade Center&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Pelham Bay Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crotona Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glen Oaks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lincoln Square West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Longwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Whitestone&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Union Sq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Auburndale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coney Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Howard Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Midtown South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pelham Parkway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Michaels Cemetery/Woodside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunset Park West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Village&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Highbridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laurelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melrose South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steinway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights North&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;JFK Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Douglaston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erasmus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Green-Wood Cemetery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattanville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Astoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Ozone Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper East Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Windsor Terrace&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Breezy Point/Fort Tilden/Riis Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crotona Park East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Williamsburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willets Point&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alphabet City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Co-Op City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highbridge Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lenox Hill East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7986008048629805067:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Astoria - Bay Ridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Astoria - East Williamsburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Astoria - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Astoria - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Astoria - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Astoria - Upper West Side South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baisley Park - Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford - Bedford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belmont - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomingdale - Central Harlem North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomingdale - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloomingdale - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boerum Hill - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boerum Hill - East Harlem North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boerum Hill - Kips Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boerum Hill - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boerum Hill - West Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Briarwood/Jamaica Hills - Flushing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brighton Beach - Kensington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Heights - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Heights - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Heights - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Heights - Midtown North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Heights - Sunset Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Navy Yard - Clinton East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brownsville - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick North - Financial District North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick North - Ozone Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick South - Bedford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick South - Kips Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick South - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll Gardens - Dyker Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carroll Gardens - Sunset Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem - Central Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem - Flatiron&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem North - Crotona Park East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem North - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem North - Melrose South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem North - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Harlem North - West Concourse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park - Central Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park - Greenpoint&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park - Midtown East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park - South Williamsburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Claremont/Bathgate - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton Hill - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton Hill - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cobble Hill - Astoria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cobble Hill - East Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cobble Hill - Midtown South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cobble Hill - West Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coney Island - Bath Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Coney Island - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corona - North Corona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crown Heights North - Bedford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crown Heights North - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crown Heights North - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Crown Heights South - Bushwick North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Astoria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Chinatown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Financial District South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Kips Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Morningside Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Sunset Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUMBO/Vinegar Hill - Alphabet City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUMBO/Vinegar Hill - Cobble Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUMBO/Vinegar Hill - Gowanus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUMBO/Vinegar Hill - Midtown North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUMBO/Vinegar Hill - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Concourse/Concourse Village - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Concourse/Concourse Village - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Flatbush/Farragut - East Williamsburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Flatbush/Remsen Village - Sunset Park East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - East Tremont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - Highbridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - Pelham Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem North - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - Bushwick South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - Fort Greene&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - Kips Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - Midtown East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - Randalls Island&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Harlem South - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East New York/Pennsylvania Avenue - JFK Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Williamsburg - Astoria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Williamsburg - Erasmus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Williamsburg - Midtown South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Williamsburg - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst - Brownsville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst - Financial District North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst - Kew Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst - Sunset Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst/Maspeth - Auburndale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst/Maspeth - Forest Hills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst/Maspeth - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst/Maspeth - Woodhaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Far Rockaway - Midtown South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flatbush/Ditmas Park - Midtown East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing - Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing - North Corona&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing - Woodside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forest Hills - Baisley Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forest Hills - Cypress Hills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forest Hills - Greenpoint&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forest Hills - Lower East Side&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forest Hills - Richmond Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forest Hills - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Greene - Brighton Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Greene - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Greene - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Greene - Midwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Greene - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glen Oaks - Glen Oaks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gravesend - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenpoint - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenpoint - Kips Bay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenpoint - Prospect Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenpoint - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hamilton Heights - East Harlem South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hamilton Heights - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hamilton Heights - SoHo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hamilton Heights - West Concourse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Highbridge Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hillcrest/Pomonok - Rosedale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inwood - Bloomingdale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inwood - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Inwood Hill Park - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Heights - Clinton East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Heights - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Heights - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Heights - Prospect Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Heights - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica - Bushwick North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica - Old Astoria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica - Sunset Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JFK Airport - Baisley Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kew Gardens - College Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kew Gardens - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kew Gardens - Midtown North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kew Gardens - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kingsbridge Heights - Mount Hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Island City/Hunters Point - Jackson Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Island City/Queens Plaza - Bloomingdale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Long Island City/Queens Plaza - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Longwood - East Tremont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manhattanville - Battery Park City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manhattanville - Highbridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manhattanville - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manhattanville - Yorkville East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maspeth - Central Harlem North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melrose South - Belmont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melrose South - Midtown North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Middle Village - Woodside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Heights - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Heights - Flatiron&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Heights - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Heights - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Heights - Sunnyside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Heights - Yorkville West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mott Haven/Port Morris - Bloomingdale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mott Haven/Port Morris - Morningside Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mount Hope - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mount Hope - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Corona - Flushing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norwood - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ocean Hill - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Old Astoria - Howard Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Old Astoria - South Ozone Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ozone Park - Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Slope - Cobble Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Slope - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Slope - Prospect Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Slope - Woodhaven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pelham Parkway - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Heights - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Heights - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect-Lefferts Gardens - Borough Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect-Lefferts Gardens - Lower East Side&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queensbridge/Ravenswood - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queensbridge/Ravenswood - Murray Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Red Hook - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Red Hook - Yorkville West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rego Park - Financial District North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rego Park - Madison&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rego Park - Sunnyside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richmond Hill - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ridgewood - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schuylerville/Edgewater Park - Mount Hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sheepshead Bay - Midwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soundview/Bruckner - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soundview/Castle Hill - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Ozone Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Williamsburg - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Washington Heights North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steinway - Elmhurst&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steinway - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steinway - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stuyvesant Heights - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stuyvesant Heights - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunnyside - Flushing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunnyside - Midtown East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunset Park East - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sunset Park West - Lower East Side&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;University Heights/Morris Heights - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Upper East Side North - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Upper East Side North - Upper East Side South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Van Nest/Morris Park - Bronxdale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights North - East Harlem South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights North - Morningside Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights North - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights South - Central Harlem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights South - Flatiron&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights South - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights South - Mount Hope&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights South - Sunnyside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington Heights South - Whitestone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Concourse - Greenpoint&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Concourse - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsbridge/Olinville - Central Harlem North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (North Side) - Clinton Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (North Side) - Greenpoint&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (North Side) - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (North Side) - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (South Side) - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (South Side) - Jackson Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Williamsburg (South Side) - Seaport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Windsor Terrace - Sunset Park East&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodside - Bayside&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodside - East Chelsea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodside - Hollis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodside - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodside - West Concourse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yorkville West - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yorkville West - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allerton/Pelham Gardens - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria - Crown Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria - Garment District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Astoria - Yorkville East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bay Ridge - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford - East Chelsea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford - Prospect Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Park - Washington Heights South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bensonhurst West - Chinatown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bloomingdale - Garment District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bloomingdale - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boerum Hill - Astoria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boerum Hill - Crown Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boerum Hill - Gravesend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boerum Hill - Midtown South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boerum Hill - Sunset Park West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Borough Park - Flatlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Briarwood/Jamaica Hills - Steinway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bronxdale - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brooklyn Heights - Clinton East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brooklyn Heights - Financial District South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brooklyn Heights - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brooklyn Heights - Rego Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brooklyn Heights - West Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brownsville - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick North - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick North - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick North - Union Sq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick South - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bushwick South - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll Gardens - Boerum Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll Gardens - Morningside Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem - Battery Park City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem - East Harlem South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem - Hunts Point&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem - Melrose South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem - Ridgewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem North - Central Harlem North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem North - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem North - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem North - Parkchester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Harlem North - Upper East Side North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park - East Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park - Upper East Side South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Claremont/Bathgate - Flatiron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton Hill - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clinton Hill - Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Co-Op City - Belmont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cobble Hill - Clinton East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cobble Hill - Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cobble Hill - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia Street - Crown Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coney Island - Crown Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Corona - Jackson Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crotona Park East - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crown Heights North - Corona&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crown Heights North - Jackson Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crown Heights North - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crown Heights South - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Brownsville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Greenpoint&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Ridgewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - West Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUMBO/Vinegar Hill - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUMBO/Vinegar Hill - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUMBO/Vinegar Hill - SoHo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DUMBO/Vinegar Hill - World Trade Center&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Concourse/Concourse Village - Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Elmhurst - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Flatbush/Remsen Village - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Bay Ridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Coney Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Forest Hills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem North - Washington Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Bellerose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - College Point&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Financial District South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Hunts Point&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Park Slope&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Harlem South - Washington Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East New York - East Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Tremont - Longwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Williamsburg - Clinton Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Williamsburg - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Williamsburg - South Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst - Baisley Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst - East Flushing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst - Midtown South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst - Seaport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst/Maspeth - East Elmhurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst/Maspeth - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmhurst/Maspeth - Sunnyside&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erasmus - Ozone Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flatbush/Ditmas Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flatlands - Madison&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flushing - Elmhurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flushing - Lower East Side&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Flushing - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fordham South - Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Hills - Canarsie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Hills - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Hills - Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Hills - Ocean Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forest Hills - Sunset Park West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene - Alphabet City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene - Columbia Street&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene - Fort Greene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene - Lower East Side&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene - Seaport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gowanus - Park Slope&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenpoint - Central Harlem North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenpoint - Glendale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenpoint - Middle Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenpoint - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton Heights - Central Harlem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton Heights - Jackson Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton Heights - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hamilton Heights - Upper East Side North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Highbridge - Melrose South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillcrest/Pomonok - Flushing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hunts Point - East Tremont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inwood - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inwood - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson Heights - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson Heights - East Harlem South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson Heights - Kew Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson Heights - Midtown South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson Heights - Sunnyside&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica - Baisley Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica - Middle Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica - Saint Albans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica - Yorkville East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kew Gardens - Astoria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kew Gardens - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kew Gardens - Kew Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kew Gardens Hills - Starrett City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Island City/Hunters Point - Chinatown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Island City/Hunters Point - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Island City/Queens Plaza - Gramercy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Island City/Queens Plaza - Steinway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattan Beach - Manhattan Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattanville - East Harlem South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattanville - Manhattanville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattanville - Upper East Side South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marine Park/Mill Basin - Homecrest&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maspeth - Midtown North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melrose South - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melrose South - Washington Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Heights - Bloomingdale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Heights - East Harlem South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Heights - Hunts Point&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Heights - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Heights - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morningside Heights - Washington Heights North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morrisania/Melrose - Manhattanville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mott Haven/Port Morris - Highbridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mott Haven/Port Morris - Upper West Side South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mount Hope - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Corona - Bay Ridge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Corona - Woodside&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ocean Hill - Brownsville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Old Astoria - East Elmhurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Old Astoria - Midtown East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Old Astoria - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Slope - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Slope - Financial District North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Slope - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Slope - Union Sq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parkchester - Yorkville West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pelham Parkway - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Park - Prospect Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect-Lefferts Gardens - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queens Village - Queens Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queensbridge/Ravenswood - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queensbridge/Ravenswood - Upper East Side South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Red Hook - Prospect Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rego Park - Cypress Hills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rego Park - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rego Park - Red Hook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Richmond Hill - East Flushing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ridgewood - Jackson Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rosedale - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sheepshead Bay - Flatlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Soundview/Bruckner - Elmhurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Soundview/Castle Hill - East Harlem South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Ozone Park - Brownsville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Williamsburg - East Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steinway - Central Harlem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steinway - Kips Bay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steinway - Ridgewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stuyvesant Heights - Boerum Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stuyvesant Heights - Midtown East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunnyside - Crown Heights South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunnyside - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunnyside - Sunnyside&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sunset Park West - Chinatown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University Heights/Morris Heights - Melrose South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upper East Side North - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Upper East Side North - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Van Cortlandt Village - Fordham South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights North - Central Harlem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights North - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights North - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South - Bedford Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South - East Harlem North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South - Inwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South - Midtown Center&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South - Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Concourse - Central Harlem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Concourse - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Westchester Village/Unionport - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (North Side) - Boerum Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (North Side) - East Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (North Side) - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (North Side) - Seaport&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (North Side) - Yorkville West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (South Side) - East Williamsburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (South Side) - Midtown South&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Williamsburg (South Side) - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodlawn/Wakefield - Bedford Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodside - Clinton Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodside - Flushing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodside - Lower East Side&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodside - Steinway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yorkville West - Central Harlem&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yorkville West - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Canarsie - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;East Harlem North - Central Harlem&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allerton/Pelham Gardens - West Concourse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria - East Flushing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria - Prospect Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria - Union Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Auburndale - Kew Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bayside - College Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bedford - Financial District North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bedford - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belmont - East Tremont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloomfield/Emerson Hill - Sunset Park West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloomingdale - Highbridge Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloomingdale - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boerum Hill - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boerum Hill - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boerum Hill - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boerum Hill - Park Slope&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boerum Hill - Union Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Briarwood/Jamaica Hills - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brighton Beach - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Heights - Alphabet City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Heights - Columbia Street&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Heights - Garment District&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Heights - Madison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Heights - Steinway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn Heights - World Trade Center&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brownsville - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick North - East Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick North - Midtown Center&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick North - Yorkville East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick South - Gramercy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushwick South - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll Gardens - Clinton Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll Gardens - Red Hook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem - Bronx Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem - Eastchester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem - JFK Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem - Midtown South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem - West Concourse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem North - Clinton East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem North - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem North - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem North - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Harlem North - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park - Forest Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central Park - Washington Heights South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Claremont/Bathgate - Longwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton Hill - Clinton Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton Hill - Ocean Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Co-Op City - Norwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cobble Hill - Crown Heights North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cobble Hill - Lower East Side&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cobble Hill - Upper East Side North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbia Street - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coney Island - JFK Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corona - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crotona Park East - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crown Heights North - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crown Heights North - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crown Heights North - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cypress Hills - East Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - East Williamsburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Inwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Midtown East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Woodhaven&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DUMBO/Vinegar Hill - Chinatown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DUMBO/Vinegar Hill - Flatiron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DUMBO/Vinegar Hill - Marine Park/Floyd Bennett Field&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DUMBO/Vinegar Hill - Sunnyside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Concourse/Concourse Village - Belmont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Concourse/Concourse Village - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Flatbush/Farragut - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Flatbush/Remsen Village - Park Slope&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - Belmont&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - Gramercy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - Norwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - Sunnyside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem North - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - Borough Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - Crown Heights North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - JFK Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - Sunnyside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Harlem South - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East New York - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Tremont - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Williamsburg - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Williamsburg - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Williamsburg - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst - East Williamsburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst - Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst - Old Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst - Steinway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst - Yorkville East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst/Maspeth - Elmhurst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst/Maspeth - Manhattanville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elmhurst/Maspeth - Union Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erasmus - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flatbush/Ditmas Park - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flushing - Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flushing - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flushing - Morningside Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flushing - Whitestone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fordham South - Washington Heights North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forest Hills - Cobble Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forest Hills - Garment District&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forest Hills - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forest Hills - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forest Hills - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Greene - Bay Ridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Greene - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Greene - Greenpoint&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Greene - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Greene - Sunset Park East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fort Greene - Yorkville East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gowanus - Washington Heights South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenpoint - Crown Heights North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenpoint - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenpoint - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenpoint - Upper West Side North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamilton Heights - Clinton West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamilton Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamilton Heights - Old Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamilton Heights - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Highbridge - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hillcrest/Pomonok - Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hunts Point - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inwood - Midtown East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Inwood Hill Park - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights - Bushwick North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights - North Corona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights - Union Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica - Bayside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica - Far Rockaway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica - Homecrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica - Murray Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica - Springfield Gardens South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica Estates - Kew Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kew Gardens - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kew Gardens - Flushing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kew Gardens - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kew Gardens - Springfield Gardens South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kingsbridge Heights - Inwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long Island City/Hunters Point - Elmhurst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long Island City/Hunters Point - Upper East Side South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long Island City/Queens Plaza - Kips Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long Island City/Queens Plaza - Union Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan Valley - Kips Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattanville - Gramercy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattanville - Morningside Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattanville - Washington Heights South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maspeth - Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maspeth - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melrose South - Longwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melrose South - Yorkville West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Heights - Central Harlem North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Heights - East Williamsburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Heights - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Heights - Midtown North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Heights - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Heights - West Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morrisania/Melrose - Upper West Side North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mott Haven/Port Morris - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mott Haven/Port Morris - Woodside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mount Hope - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Corona - East Elmhurst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norwood - Highbridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ocean Hill - Flatlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Old Astoria - Forest Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Old Astoria - Old Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Old Astoria - Yorkville West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Slope - Central Harlem North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Slope - Glendale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Slope - Midwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Slope - West Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pelham Bay - Washington Heights South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect Heights - Bedford&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect Heights - Park Slope&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect Park - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect-Lefferts Gardens - Homecrest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queensboro Hill - Flushing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queensbridge/Ravenswood - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Red Hook - Bloomingdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Red Hook - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rego Park - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rego Park - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rego Park - Seaport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richmond Hill - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ridgewood - Midwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint George/New Brighton - Port Richmond&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sheepshead Bay - Madison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Soundview/Bruckner - Pelham Bay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Soundview/Castle Hill - Mount Hope&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Ozone Park - Elmhurst&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Williamsburg - Madison&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steinway - East Harlem North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steinway - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steinway - Steinway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stuyvesant Heights - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stuyvesant Heights - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunnyside - East Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunnyside - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunnyside - Upper East Side South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunset Park West - Kensington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University Heights/Morris Heights - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Upper East Side North - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Upper East Side North - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Van Cortlandt Village - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights North - Clinton East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights North - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights North - Upper West Side North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights South - Bronxdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights South - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights South - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights South - Midwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights South - Springfield Gardens South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Heights South - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Concourse - East Harlem North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Concourse - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willets Point - Bayside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (North Side) - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (North Side) - Flushing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (North Side) - Lower East Side&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (North Side) - Sunnyside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (South Side) - Boerum Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (South Side) - Gramercy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Williamsburg (South Side) - Park Slope&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Windsor Terrace - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodside - Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodside - Cypress Hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodside - Glendale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodside - Midtown East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodside - Union Sq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yorkville West - East Harlem North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yorkville West - Upper East Side North&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;East Harlem North - East Harlem South&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;East Harlem North - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Sheepshead Bay - Upper West Side North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria - Bushwick South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria - Financial District North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria - Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria - Midtown North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baisley Park - Randalls Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford - Brownsville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bedford Park - Belmont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belmont - Washington Heights South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bloomingdale - Crown Heights North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bloomingdale - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bloomingdale - Upper East Side South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum Hill - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum Hill - East Williamsburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum Hill - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum Hill - Seaport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum Hill - Woodside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Briarwood/Jamaica Hills - JFK Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brighton Beach - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooklyn Heights - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooklyn Heights - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooklyn Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooklyn Heights - Ocean Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooklyn Heights - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brooklyn Navy Yard - SoHo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bushwick North - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bushwick North - Gramercy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bushwick North - Prospect Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bushwick South - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bushwick South - Ocean Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canarsie - Brownsville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll Gardens - Fort Greene&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carroll Gardens - Union Sq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem - Clinton West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem - Garment District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem - Ocean Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem - Yorkville East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem North - East Elmhurst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem North - JFK Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem North - Midtown South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem North - Sunnyside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Harlem North - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park - Inwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park - Yorkville West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Claremont/Bathgate - Washington Heights North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton Hill - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton Hill - Sunset Park West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cobble Hill - Bloomingdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cobble Hill - Flatiron&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cobble Hill - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;College Point - College Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coney Island - Boerum Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coney Island - Sunset Park West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corona - Sunnyside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crown Heights North - Brighton Beach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crown Heights North - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crown Heights North - Prospect Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crown Heights South - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Columbia Street&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Flushing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Park Slope&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DUMBO/Vinegar Hill - Bay Ridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DUMBO/Vinegar Hill - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DUMBO/Vinegar Hill - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DUMBO/Vinegar Hill - Ocean Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DUMBO/Vinegar Hill - Union Sq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Concourse/Concourse Village - Eastchester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Concourse/Concourse Village - West Concourse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Flatbush/Farragut - Sunset Park East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Flushing - Elmhurst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem North - Elmhurst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem North - Inwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem North - Melrose South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem North - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem North - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - Central Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - East Harlem South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - Greenpoint&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - Saint Albans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Harlem South - Yorkville West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Tremont - Co-Op City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Williamsburg - Bloomingdale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Williamsburg - Forest Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Williamsburg - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Williamsburg - Yorkville East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst - Clinton East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst - Forest Park/Highland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst - Rego Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst/Maspeth - Bushwick North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst/Maspeth - Hollis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst/Maspeth - Pelham Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Erasmus - Bushwick North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flatbush/Ditmas Park - Boerum Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flatbush/Ditmas Park - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flushing - College Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flushing - Kew Gardens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flushing - Queens Village&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Flushing Meadows-Corona Park - Forest Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Hills - Bedford Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Hills - East Flushing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Hills - Hollis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Hills - Midtown East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Hills - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Hills - Willets Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Greene - Bushwick North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Greene - East Tremont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Greene - JFK Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Greene - Ocean Parkway South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Greene - Upper East Side South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glendale - Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenpoint - Alphabet City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenpoint - East Harlem South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenpoint - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenpoint - Seaport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich Village South - Midtown East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamilton Heights - Gramercy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamilton Heights - Marble Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamilton Heights - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamilton Heights - Yorkville East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Highbridge Park - Murray Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hollis - Saint Albans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inwood - Clinton East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inwood - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Heights - Astoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Heights - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Heights - Gramercy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Heights - Lower East Side&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Heights - Richmond Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Heights - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica - Clinton East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JFK Airport - JFK Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kew Gardens - Cypress Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kew Gardens - Greenpoint&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kew Gardens - North Corona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kew Gardens - Woodside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LaGuardia Airport - Astoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Long Island City/Hunters Point - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Long Island City/Queens Plaza - Clinton West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Long Island City/Queens Plaza - Old Astoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Longwood - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattanville - Central Harlem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattanville - Kips Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manhattanville - Steinway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marble Hill - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maspeth - Glendale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melrose South - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melrose South - Norwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Midwood - Flatlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morningside Heights - Columbia Street&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morningside Heights - Garment District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morningside Heights - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morningside Heights - Old Astoria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morningside Heights - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morrisania/Melrose - East Chelsea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mott Haven/Port Morris - Chinatown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mott Haven/Port Morris - Norwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mount Hope - Highbridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murray Hill-Queens - East Elmhurst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Corona - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norwood - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Astoria - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Astoria - Kips Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Old Astoria - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ozone Park - Richmond Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Slope - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Slope - Kips Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Slope - Ridgewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parkchester - East Harlem South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pelham Parkway - Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect Heights - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect Park - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect-Lefferts Gardens - Crown Heights North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect-Lefferts Gardens - Prospect Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queensbridge/Ravenswood - East Elmhurst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queensbridge/Ravenswood - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Red Hook - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rego Park - Bedford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rego Park - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rego Park - North Corona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rego Park - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Richmond Hill - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston - Inwood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheepshead Bay - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheepshead Bay - South Ozone Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Soundview/Bruckner - West Concourse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Jamaica - Central Harlem North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Ozone Park - South Ozone Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Springfield Gardens South - Forest Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stapleton - Grymes Hill/Clifton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steinway - Garment District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steinway - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steinway - Washington Heights South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stuyvesant Heights - Flatlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunnyside - Bayside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunnyside - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunnyside - Newark Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunset Park East - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunset Park West - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper East Side North - Central Harlem North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper East Side North - Midtown Center&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper East Side North - Washington Heights South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Nest/Morris Park - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights North - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights North - Murray Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights North - West Concourse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights South - Clinton East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights South - Glendale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights South - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights South - Pelham Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights South - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Heights South - Woodside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Concourse - Manhattanville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Farms/Bronx River - Washington Heights South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsbridge/Olinville - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (North Side) - Crown Heights North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (North Side) - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (North Side) - Ocean Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (North Side) - Upper West Side South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (South Side) - Clinton Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (South Side) - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (South Side) - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodhaven - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodside - Borough Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodside - East Harlem South&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodside - JFK Airport&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodside - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Woodside - Yorkville East&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yorkville West - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#7e756d'>
              <bucket>&quot;Central Park - Newark Airport&quot;</bucket>
            </map>
            <map to='#7e756d'>
              <bucket>&quot;East Harlem South - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;East Harlem North - Central Harlem North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria - Bedford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria - Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria - Hudson Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria - Middle Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria - Rego Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Astoria - Washington Heights North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baisley Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bedford - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bedford - JFK Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bedford - Woodside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belmont - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloomingdale - Central Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloomingdale - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloomingdale - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boerum Hill - Brownsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boerum Hill - East Harlem South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boerum Hill - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boerum Hill - Red Hook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boerum Hill - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Briarwood/Jamaica Hills - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brighton Beach - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brooklyn Heights - Boerum Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brooklyn Heights - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brooklyn Heights - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brooklyn Heights - Midtown South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brooklyn Heights - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brooklyn Navy Yard - Fort Greene&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick North - Astoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick North - Flatiron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick North - Park Slope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick South - Boerum Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick South - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick South - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll Gardens - East Chelsea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carroll Gardens - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem - Chinatown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem - Mount Hope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem North - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem North - Hunts Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem North - Midtown Center&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem North - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Harlem North - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park - Chinatown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park - Midtown North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park - Woodside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Claremont/Bathgate - Norwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton Hill - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton Hill - Red Hook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cobble Hill - Battery Park City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cobble Hill - Financial District North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cobble Hill - Murray Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cobble Hill - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coney Island - Bay Ridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coney Island - South Ozone Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corona - Ozone Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crown Heights North - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crown Heights North - East Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crown Heights North - Ocean Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crown Heights South - Bushwick South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Battery Park City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Clinton East&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Murray Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Astoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Columbia Street&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Gramercy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Midtown South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DUMBO/Vinegar Hill - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Concourse/Concourse Village - East Harlem North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Concourse/Concourse Village - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Flatbush/Farragut - Flatlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Flushing - Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - Brownsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - East Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - Highbridge Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - Manhattanville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem North - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - East Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - Garment District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - Midtown North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - Ridgewood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Harlem South - Woodside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East New York/Pennsylvania Avenue - Park Slope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Williamsburg - Bay Ridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Williamsburg - Financial District North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Williamsburg - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Williamsburg - West Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst - Bushwick North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst - Flushing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst - Queens Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst/Maspeth - Baisley Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst/Maspeth - Fort Greene&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst/Maspeth - North Corona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elmhurst/Maspeth - Woodside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flatbush/Ditmas Park - Bedford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flatbush/Ditmas Park - Park Slope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flushing - Bayside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flushing - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flushing - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flushing Meadows-Corona Park - Auburndale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forest Hills - Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forest Hills - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forest Hills - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forest Hills - Maspeth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forest Hills - Ridgewood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forest Hills - Washington Heights South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Greene - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Greene - East Harlem North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Greene - Homecrest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Greene - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fort Greene - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glendale - Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gravesend - Park Slope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenpoint - East Chelsea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenpoint - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenpoint - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenpoint - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton Heights - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton Heights - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton Heights - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hamilton Heights - West Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Highbridge Park - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hillcrest/Pomonok - Springfield Gardens South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Inwood - Central Harlem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Inwood - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Inwood Hill Park - Upper West Side North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Heights - College Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Heights - Forest Hills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Heights - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Heights - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackson Heights - Washington Heights South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica - Bushwick South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica - Forest Hills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica - JFK Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica - Ozone Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JFK Airport - Bushwick South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens - Corona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens - Glen Oaks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens - Upper East Side South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kingsbridge Heights - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Long Island City/Hunters Point - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Long Island City/Queens Plaza - Central Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Long Island City/Queens Plaza - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Longwood - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manhattanville - Bedford Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manhattanville - Inwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manhattanville - Richmond Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manhattanville - Yorkville West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maspeth - East Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melrose South - Bloomingdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melrose South - Morningside Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Midtown Center - Midtown Center&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Heights - Clinton East&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Heights - Flushing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Heights - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Heights - Murray Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morningside Heights - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morrisania/Melrose - Central Harlem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mott Haven/Port Morris - Central Harlem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mott Haven/Port Morris - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mount Hope - East Harlem North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mount Hope - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Corona - Jackson Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norwood - Mount Hope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ocean Parkway South - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Old Astoria - Hudson Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Old Astoria - Steinway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ozone Park - Jackson Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Slope - Crown Heights North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Slope - Homecrest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Slope - Prospect Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Park Slope - Yorkville West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pelham Parkway - Co-Op City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect Heights - Cobble Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect Heights - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect-Lefferts Gardens - Brownsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prospect-Lefferts Gardens - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Queensbridge/Ravenswood - Central Harlem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Queensbridge/Ravenswood - Newark Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Red Hook - Cobble Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rego Park - Astoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rego Park - Flushing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rego Park - Manhattanville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rego Park - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richmond Hill - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ridgewood - Upper West Side South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schuylerville/Edgewater Park - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sheepshead Bay - Park Slope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soundview/Bruckner - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soundview/Castle Hill - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Ozone Park - Kew Gardens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Williamsburg - Union Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Washington Heights South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steinway - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steinway - Middle Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steinway - Upper East Side South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stuyvesant Heights - East Harlem North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stuyvesant Heights - Union Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside - Forest Hills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside - Midtown North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunset Park East - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunset Park West - Park Slope&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University Heights/Morris Heights - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Upper East Side North - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Upper East Side North - Upper West Side North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Van Nest/Morris Park - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights North - East Village&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights North - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights North - Washington Heights North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights South - Central Harlem North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights South - Flushing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights South - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights South - Murray Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights South - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington Heights South - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Concourse - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Farms/Bronx River - Hunts Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsbridge/Olinville - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (North Side) - Clinton West&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (North Side) - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (North Side) - Midtown Center&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (North Side) - Union Sq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (South Side) - Central Harlem&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (South Side) - JFK Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Williamsburg (South Side) - Sunnyside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Windsor Terrace - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodside - Bedford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodside - East Elmhurst&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodside - Jackson Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodside - Old Astoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodside - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yorkville West - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yorkville West - World Trade Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria - Astoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria - East Harlem North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria - Lower East Side&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria - Upper East Side North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Auburndale - Maspeth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bayside - Flushing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bedford - Fort Greene&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bedford - Sunset Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belmont - Highbridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloomingdale - Battery Park City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloomingdale - JFK Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloomingdale - Randalls Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boerum Hill - Bloomingdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boerum Hill - East Chelsea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boerum Hill - Homecrest&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boerum Hill - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boerum Hill - Upper East Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Briarwood/Jamaica Hills - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brighton Beach - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights - Battery Park City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights - Coney Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights - Gowanus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights - Yorkville East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville - Ocean Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bushwick North - East Williamsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bushwick North - Midtown North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bushwick South - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bushwick South - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bushwick South - Union Sq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carroll Gardens - Crown Heights North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carroll Gardens - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem - Bronxdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem - Erasmus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem - Kensington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem - Midwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem - Steinway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem - West Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem North - Clinton West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem North - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem North - Manhattanville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem North - Randalls Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Harlem North - Washington Heights North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park - Canarsie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park - Fort Greene&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park - Manhattanville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Claremont/Bathgate - Manhattanville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton Hill - Crown Heights North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton Hill - Park Slope&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Co-Op City - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cobble Hill - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cobble Hill - Midtown Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cobble Hill - Upper East Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia Street - Seaport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Coney Island - Kensington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corona - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crotona Park East - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crown Heights North - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crown Heights North - Lower East Side&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crown Heights South - Boerum Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cypress Hills - Glen Oaks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Central Harlem&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Midtown North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - World Trade Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Clinton East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Flatlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Sunset Park East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Concourse/Concourse Village - Bloomingdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Concourse/Concourse Village - Mount Hope&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Flatbush/Farragut - Canarsie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Flatbush/Remsen Village - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - Bloomingdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - East Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - Old Astoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - Sunset Park East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem North - West Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Fordham South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Kensington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Melrose South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Prospect Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - Sunset Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Harlem South - West Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East New York/Pennsylvania Avenue - Bushwick North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Tremont - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Williamsburg - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Williamsburg - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Williamsburg - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst - Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst - Ozone Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst - Yorkville West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst/Maspeth - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst/Maspeth - Maspeth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elmhurst/Maspeth - Upper East Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erasmus - World Trade Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flatbush/Ditmas Park - Madison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flushing - Auburndale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flushing - Forest Hills&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flushing - Murray Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flushing - Willets Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fordham South - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest Hills - College Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest Hills - Glen Oaks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest Hills - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest Hills - Queens Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forest Hills - Union Sq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Greene - Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Greene - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Greene - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Greene - Midtown Center&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fort Greene - Sunset Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fresh Meadows - Flushing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gowanus - Yorkville West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint - Crown Heights South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint - Hunts Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint - North Corona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenpoint - Upper West Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hamilton Heights - East Chelsea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hamilton Heights - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hamilton Heights - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hamilton Heights - Washington Heights North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Highbridge - Upper East Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hillcrest/Pomonok - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hunts Point - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Inwood - Morningside Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Inwood Hill Park - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson Heights - Bushwick South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson Heights - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson Heights - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson Heights - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson Heights - Upper East Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica - Bellerose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica - Flatiron&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica - Howard Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica - Steinway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica Estates - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kew Gardens - Canarsie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kew Gardens - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kew Gardens - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kew Gardens - Steinway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kingsbridge Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Long Island City/Hunters Point - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Long Island City/Hunters Point - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Long Island City/Queens Plaza - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Long Island City/Queens Plaza - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manhattan Valley - Upper West Side North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manhattanville - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manhattanville - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manhattanville - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maspeth - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maspeth - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Melrose South - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle Village - Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morningside Heights - Central Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morningside Heights - Elmhurst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morningside Heights - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morningside Heights - Midtown South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morningside Heights - Steinway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morningside Heights - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morrisania/Melrose - West Concourse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mott Haven/Port Morris - Longwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mount Hope - Central Harlem&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mount Hope - Washington Heights North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Corona - East Harlem South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norwood - Inwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ocean Hill - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Old Astoria - Greenpoint&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Old Astoria - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ozone Park - Erasmus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Slope - Chinatown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Slope - Gowanus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Slope - Murray Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Slope - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pelham Parkway - Bay Ridge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prospect Heights - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prospect Heights - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prospect-Lefferts Gardens - Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prospect-Lefferts Gardens - JFK Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queensboro Hill - Forest Hills&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queensbridge/Ravenswood - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Hook - Boerum Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Red Hook - Sunset Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rego Park - East Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rego Park - Laurelton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rego Park - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richmond Hill - JFK Airport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ridgewood - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint George/New Brighton - Saint George/New Brighton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sheepshead Bay - Manhattan Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Soundview/Bruckner - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Soundview/Castle Hill - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Ozone Park - Flushing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Williamsburg - Park Slope&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steinway - East Harlem South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steinway - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steinway - Sunnyside&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stuyvesant Heights - Clinton Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stuyvesant Heights - Red Hook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyside - East Williamsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyside - Maspeth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyside - Upper West Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunset Park West - Kips Bay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University Heights/Morris Heights - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Upper East Side North - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Upper East Side North - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Van Cortlandt Village - Washington Heights South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights North - East Chelsea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights North - Manhattanville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights North - Upper West Side South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights South - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights South - Financial District North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights South - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights South - Morningside Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington Heights South - West Concourse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Concourse - East Harlem South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Concourse - Washington Heights North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willets Point - Flushing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (North Side) - Central Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (North Side) - Garment District&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (North Side) - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (North Side) - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (South Side) - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (South Side) - Greenpoint&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Williamsburg (South Side) - Prospect Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Windsor Terrace - Midwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodside - Astoria Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodside - Douglaston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodside - Gramercy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodside - Murray Hill&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodside - Upper East Side North&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yorkville West - East Harlem South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yorkville West - Upper West Side North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astoria - College Point&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astoria - Forest Hills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astoria - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astoria - North Corona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astoria - Sunset Park East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Astoria - Woodhaven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bay Ridge - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedford - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedford - Ocean Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedford Park - Old Astoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bensonhurst East - Sunset Park East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomingdale - Flatiron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomingdale - Midtown South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomingdale - Yorkville West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boerum Hill - Cobble Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boerum Hill - Gowanus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boerum Hill - Midtown Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boerum Hill - Sunnyside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Borough Park - Bushwick South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Briarwood/Jamaica Hills - South Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bronxdale - Central Harlem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Heights - Central Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Heights - Erasmus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Heights - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Heights - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brooklyn Heights - Washington Heights North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brownsville - East New York&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bushwick North - Crown Heights North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bushwick North - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bushwick North - Sunnyside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bushwick South - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bushwick South - Red Hook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canarsie - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll Gardens - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem - Alphabet City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem - Highbridge Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem - Manhattanville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem - Prospect Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem - Upper West Side South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem North - Bloomingdale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem North - Financial District North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem North - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem North - Norwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem North - Union Sq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park - Bay Ridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park - East Harlem South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park - Park Slope&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claremont/Bathgate - East Tremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Hill - Boerum Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Hill - Homecrest&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton Hill - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cobble Hill - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cobble Hill - JFK Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cobble Hill - Sunset Park East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia Street - Boerum Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coney Island - Clinton West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corona - Flushing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crotona Park East - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crown Heights North - Clinton Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crown Heights North - Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crown Heights North - Sunset Park East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crown Heights South - Park Slope&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Dyker Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Gramercy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Madison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Red Hook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Upper West Side South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DUMBO/Vinegar Hill - Bushwick North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Harlem South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DUMBO/Vinegar Hill - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DUMBO/Vinegar Hill - Red Hook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DUMBO/Vinegar Hill - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Concourse/Concourse Village - Inwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Elmhurst - Jackson Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Flatbush/Remsen Village - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem North - Alphabet City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem North - Clinton West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem North - Flushing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem North - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem North - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem North - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Bedford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Co-Op City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Elmhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Lower East Side&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Norwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Harlem South - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East New York - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Tremont - Highbridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Williamsburg - Chinatown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Williamsburg - JFK Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;East Williamsburg - Seaport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst - Astoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst - East Chelsea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst - Greenpoint&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst - Midtown East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst - Saint Albans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst - Whitestone&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst/Maspeth - Corona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst/Maspeth - Kew Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst/Maspeth - South Ozone Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erasmus - Manhattan Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flatbush/Ditmas Park - East Harlem South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flatlands - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flushing - East Harlem North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flushing - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flushing - South Ozone Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fordham South - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest Hills - Bushwick South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest Hills - Flatiron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest Hills - Kew Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest Hills - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forest Hills - Yorkville East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Greene - Clinton Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Greene - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Greene - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Greene - Red Hook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Greene - West Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gowanus - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenpoint - Bushwick North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenpoint - Flatiron&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenpoint - Manhattanville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenpoint - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton Heights - Borough Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton Heights - Highbridge Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton Heights - Midtown South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton Heights - Union Sq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Highbridge - Belmont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hillcrest/Pomonok - East Elmhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hunts Point - Bronx Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Inwood - Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Inwood - West Concourse&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson Heights - Bedford Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson Heights - East Flushing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson Heights - Midtown Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson Heights - South Williamsburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica - Astoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica - Cypress Hills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica - Greenpoint&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica - Woodside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kensington - Ridgewood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kew Gardens - East Williamsburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kew Gardens - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kew Gardens - Rosedale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kew Gardens Hills - Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Long Island City/Hunters Point - Astoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Long Island City/Hunters Point - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Long Island City/Queens Plaza - Financial District South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Long Island City/Queens Plaza - Saint Albans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manhattan Beach - Flatlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manhattanville - East Chelsea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manhattanville - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manhattanville - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marine Park/Mill Basin - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maspeth - Maspeth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Melrose South - Flushing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Melrose South - Upper West Side North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Heights - Battery Park City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Heights - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Heights - Highbridge Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Heights - Manhattanville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Heights - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morningside Heights - Upper West Side South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morrisania/Melrose - Highbridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mott Haven/Port Morris - East Harlem South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mott Haven/Port Morris - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mount Hope - Mount Hope&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray Hill-Queens - North Corona&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Corona - Sunnyside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ocean Hill - Bedford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Astoria - Dyker Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Astoria - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Astoria - Washington Heights South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Slope - Boerum Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Slope - East Williamsburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Slope - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Park Slope - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parkchester - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pelham Parkway - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect Heights - Greenpoint&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect Park - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect-Lefferts Gardens - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queens Village - JFK Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queensbridge/Ravenswood - Jackson Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queensbridge/Ravenswood - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Red Hook - Park Slope&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rego Park - Coney Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rego Park - Jackson Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rego Park - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richmond Hill - Astoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ridgewood - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rosedale - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sheepshead Bay - Coney Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Soundview/Bruckner - Co-Op City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Soundview/Castle Hill - Co-Op City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Jamaica - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Williamsburg - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Springfield Gardens South - Rosedale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steinway - Bedford Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steinway - JFK Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steinway - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Steinway - Yorkville West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Stuyvesant Heights - Lower East Side&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyside - Clinton East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyside - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunnyside - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunset Park West - Borough Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University Heights/Morris Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Upper East Side North - East Harlem South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Upper East Side North - Murray Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Upper West Side South - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights North - Bronx Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights North - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights North - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights South - Bayside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights South - East Elmhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights South - Howard Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights South - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights South - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Heights South - Upper West Side North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Concourse - Bronx Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Concourse - Ridgewood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Westchester Village/Unionport - Kew Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (North Side) - Astoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (North Side) - East Harlem South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (North Side) - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (North Side) - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (North Side) - Woodside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (South Side) - East Chelsea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (South Side) - Midtown Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williamsburg (South Side) - Washington Heights North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodhaven - Woodhaven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodside - Central Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodside - Financial District North&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodside - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodside - Saint Michaels Cemetery/Woodside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yorkville East - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yorkville West - Randalls Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allerton/Pelham Gardens - Co-Op City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astoria - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astoria - Glendale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astoria - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astoria - Old Astoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astoria - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astoria - Yorkville West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bay Ridge - Homecrest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford - East New York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bellerose - Woodside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bensonhurst West - Gravesend&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomingdale - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomingdale - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boerum Hill - Baisley Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boerum Hill - Crown Heights South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boerum Hill - Green-Wood Cemetery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boerum Hill - Murray Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boerum Hill - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Borough Park - Homecrest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Briarwood/Jamaica Hills - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bronxdale - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Heights - Clinton Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Heights - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Heights - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Heights - Seaport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Heights - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brownsville - Flushing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick North - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick North - Maspeth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick North - West Village&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick South - Erasmus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bushwick South - SoHo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll Gardens - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll Gardens - Park Slope&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem - Bedford Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem - East Tremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem - Inwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem - Midtown Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem - Washington Heights North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem North - Central Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem North - Flatiron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem North - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem North - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Harlem North - Upper East Side South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park - Bloomingdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park - Financial District North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central Park - Upper West Side North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Claremont/Bathgate - Gramercy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Hill - Bushwick North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Hill - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Co-Op City - Central Harlem North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cobble Hill - Clinton Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cobble Hill - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cobble Hill - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia Street - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coney Island - East New York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corona - Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crotona Park East - East Harlem North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crown Heights North - Crown Heights North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crown Heights North - JFK Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crown Heights North - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crown Heights South - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Bushwick North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Maspeth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Seaport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Central Harlem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Financial District North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Steinway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Yorkville West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Concourse/Concourse Village - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Elmhurst - Richmond Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Flatbush/Remsen Village - Lower East Side&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Bedford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Crotona Park East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Fort Greene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Mount Hope&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Steinway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem North - Washington Heights South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Belmont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Columbia Street&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Inwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Manhattanville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Parkchester&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Steinway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem South - Washington Heights South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East New York - Erasmus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Tremont - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Williamsburg - Crown Heights North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Williamsburg - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Williamsburg - Steinway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst - Bayside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst - East Harlem South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst - Murray Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst - South Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst/Maspeth - East Flushing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst/Maspeth - Laurelton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Elmhurst/Maspeth - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erasmus - Prospect Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flatbush/Ditmas Park - Kips Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flatlands - Midtown Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flushing - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flushing - Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flushing - Sunnyside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fordham South - Longwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forest Hills - Chinatown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forest Hills - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forest Hills - Old Astoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Forest Hills - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene - Astoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene - Coney Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene - Garment District&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene - Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene - SoHo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Greene - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gowanus - Ridgewood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenpoint - Central Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenpoint - Gramercy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenpoint - Midtown Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenpoint - Union Sq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Heights - Central Harlem North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Heights - Mount Hope&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hamilton Heights - Upper East Side South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Highbridge - Morningside Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hillcrest/Pomonok - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hunts Point - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inwood - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inwood Hill Park - Clinton West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson Heights - Bloomingdale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson Heights - East New York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson Heights - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson Heights - Morningside Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson Heights - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica - Battery Park City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica - East Williamsburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica - Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica - Midtown Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica - South Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jamaica - Yorkville West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kew Gardens - Baisley Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kew Gardens - Far Rockaway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kew Gardens - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kew Gardens - South Jamaica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kew Gardens Hills - Sunnyside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City/Hunters Point - Clinton West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City/Hunters Point - Steinway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City/Queens Plaza - Greenpoint&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City/Queens Plaza - Sunnyside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manhattan Beach - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manhattanville - East Village&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manhattanville - Melrose South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manhattanville - Upper West Side North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marine Park/Mill Basin - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maspeth - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Melrose South - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Melrose South - Washington Heights South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Heights - Bushwick North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Heights - East New York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Heights - Inwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Heights - Melrose South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Heights - Washington Heights South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morrisania/Melrose - Melrose South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mott Haven/Port Morris - JFK Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mott Haven/Port Morris - Washington Heights South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mount Hope - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Corona - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norwood - Belmont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ocean Hill - Bushwick South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Old Astoria - East Harlem South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Old Astoria - Midtown South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Old Astoria - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Slope - Brownsville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Slope - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Slope - Midtown Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Slope - Upper East Side North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pelham Bay - Eastchester&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pelham Parkway - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Park - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect-Lefferts Gardens - Flatiron&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queens Village - Rosedale&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queensbridge/Ravenswood - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queensbridge/Ravenswood - Whitestone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Red Hook - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rego Park - Douglaston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rego Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rego Park - Rego Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond Hill - Elmhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ridgewood - JFK Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Albans - Forest Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sheepshead Bay - Forest Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soundview/Bruckner - Kips Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soundview/Castle Hill - East Tremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Ozone Park - Cypress Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Williamsburg - Elmhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Inwood&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steinway - Clinton West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steinway - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steinway - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuyvesant Heights - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuyvesant Heights - Murray Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunnyside - East Elmhurst&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunnyside - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunnyside - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunset Park West - Cobble Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University Heights/Morris Heights - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper East Side North - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper East Side North - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Van Cortlandt Village - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights North - Central Harlem North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights North - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights North - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights South - Belmont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights South - East Harlem South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights South - Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights South - Midtown East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights South - SoHo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Heights South - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Concourse - Central Harlem North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Concourse - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Westerleigh - Westerleigh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (North Side) - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (North Side) - Financial District North&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (North Side) - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (North Side) - SoHo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (South Side) - Alphabet City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (South Side) - Erasmus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (South Side) - Murray Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Williamsburg (South Side) - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodlawn/Wakefield - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodside - College Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodside - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodside - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Woodside - Sunnyside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yorkville West - Clinton East&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yorkville West - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Central Harlem North - Crown Heights North&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;East Harlem North - Central Park&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Kew Gardens - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astoria - Clinton Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astoria - Flushing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astoria - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astoria - Murray Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astoria - Steinway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Astoria - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bath Beach - JFK Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bedford - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bedford - Murray Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bedford Park - Melrose South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bensonhurst East - Homecrest&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bloomingdale - East Harlem South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bloomingdale - Midtown East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bloomingdale - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boerum Hill - Clinton Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boerum Hill - Fort Greene&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boerum Hill - Lower East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boerum Hill - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Borough Park - Boerum Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Briarwood/Jamaica Hills - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brighton Beach - Starrett City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooklyn Heights - Canarsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooklyn Heights - East Williamsburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooklyn Heights - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooklyn Heights - Prospect Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooklyn Heights - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brownsville - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick North - Clinton Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick North - Kips Bay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick North - Steinway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick South - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bushwick South - Prospect Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll Gardens - East Harlem South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll Gardens - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll Gardens - West Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem - Lower East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem North - Battery Park City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem North - East Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem North - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem North - Mount Hope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Harlem North - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park - Astoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park - Old Astoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Claremont/Bathgate - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Claremont/Bathgate - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton Hill - Greenpoint&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton Hill - West Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cobble Hill - Bushwick South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cobble Hill - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cobble Hill - Red Hook&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;College Point - North Corona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coney Island - Canarsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corona - Elmhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crotona Park - Yorkville East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crown Heights North - Canarsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crown Heights North - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crown Heights North - South Williamsburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crown Heights South - Midwood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Breezy Point/Fort Tilden/Riis Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Garment District&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUMBO/Vinegar Hill - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUMBO/Vinegar Hill - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUMBO/Vinegar Hill - Prospect Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DUMBO/Vinegar Hill - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Concourse/Concourse Village - Highbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Elmhurst - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Flatbush/Remsen Village - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Flushing - South Ozone Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem North - Clinton East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem North - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem North - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem North - Midtown South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem North - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem North - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - Bay Ridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - Clinton Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - East Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - Highbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - SoHo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Harlem South - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East New York - Canarsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Tremont - East Tremont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Williamsburg - Central Harlem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Williamsburg - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Williamsburg - Richmond Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eastchester - Norwood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst - Cypress Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst - Glendale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst - Maspeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst/Maspeth - Clinton East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst/Maspeth - JFK Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elmhurst/Maspeth - Rego Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Erasmus - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatbush/Ditmas Park - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatbush/Ditmas Park - World Trade Center&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flushing - East Elmhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flushing - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flushing - Ridgewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flushing Meadows-Corona Park - Steinway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Hills - Brownsville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Hills - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Hills - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Hills - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Hills - Steinway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forest Hills - Woodside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Greene - Chinatown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Greene - Financial District North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Greene - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Greene - Prospect Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Greene - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gowanus - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenpoint - Boerum Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenpoint - Financial District North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenpoint - Lower East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenpoint - Sunnyside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton Heights - Belmont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton Heights - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton Heights - Midtown East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hamilton Heights - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hammels/Arverne - Rockaway Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hillcrest/Pomonok - Bloomingdale&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Homecrest - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inwood - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inwood - Washington Heights North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson Heights - Bayside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson Heights - East Elmhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson Heights - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson Heights - Melrose South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson Heights - South Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson Heights - Yorkville East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica - Corona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica - Gowanus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica - Ridgewood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kensington - Flatiron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kew Gardens - East Harlem South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kew Gardens - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kew Gardens - Richmond Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kew Gardens Hills - Forest Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LaGuardia Airport - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Long Island City/Hunters Point - Park Slope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Long Island City/Queens Plaza - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Long Island City/Queens Plaza - Rego Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manhattan Beach - Brighton Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manhattanville - Clinton West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manhattanville - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manhattanville - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marine Park/Floyd Bennett Field - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maspeth - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Melrose South - East Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Melrose South - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Heights - Astoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Heights - Dyker Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Heights - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Heights - Lower East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Heights - Randalls Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Heights - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morrisania/Melrose - East Tremont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mott Haven/Port Morris - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mott Haven/Port Morris - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Hope - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murray Hill-Queens - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Corona - Richmond Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norwood - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Old Astoria - Corona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Old Astoria - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Old Astoria - Upper East Side North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Slope - Bay Ridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Slope - East New York&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Slope - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Slope - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parkchester - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pelham Parkway - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prospect Heights - Fort Greene&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prospect Park - Fort Greene&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prospect-Lefferts Gardens - East Harlem North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queens Village - Hollis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queensbridge/Ravenswood - Gramercy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queensbridge/Ravenswood - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Red Hook - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rego Park - Central Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rego Park - Greenpoint&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rego Park - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rego Park - Woodhaven&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ridgewood - Bushwick North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rockaway Park - Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheepshead Bay - Brownsville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheepshead Bay - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Soundview/Castle Hill - Belmont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Jamaica - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Williamsburg - Bedford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Springfield Gardens South - Kew Gardens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway - Astoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway - Ocean Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway - Woodside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stuyvesant Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunnyside - Central Harlem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunnyside - JFK Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunnyside - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sunset Park West - Bay Ridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Heights/Morris Heights - Fordham South&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Upper East Side North - Clinton West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Upper East Side North - Morningside Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Upper East Side North - Yorkville West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Van Nest/Morris Park - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights North - JFK Airport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights North - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights South - Astoria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights South - East Chelsea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights South - Highbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights South - Manhattanville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights South - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Heights South - Upper East Side North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Chelsea/Hudson Yards - Murray Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;West Concourse - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westchester Village/Unionport - Crotona Park East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsbridge/Olinville - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (North Side) - East Chelsea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (North Side) - Kips Bay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (North Side) - Prospect Heights&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (North Side) - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (South Side) - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (South Side) - Lower East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Williamsburg (South Side) - Upper East Side North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodhaven - Richmond Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodside - Central Harlem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodside - Elmhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodside - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodside - Richmond Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yorkville East - Fort Greene&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yorkville West - Midtown North&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;East Harlem North - Yorkville West&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Jamaica - Newark Airport&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Springfield Gardens South - Newark Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria - Astoria Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria - East Harlem South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria - Queens Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baisley Park - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bayside - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford - Gowanus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford - Union Sq&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belmont - Inwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bloomingdale - Bloomingdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bloomingdale - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bloomingdale - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boerum Hill - Boerum Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boerum Hill - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boerum Hill - JFK Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boerum Hill - Prospect Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boerum Hill - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Briarwood/Jamaica Hills - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brighton Beach - Coney Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights - Bay Ridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights - Gramercy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights - Midtown Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights - Sunnyside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brooklyn Heights - Yorkville West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brownsville - Park Slope&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick North - Elmhurst&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick North - Murray Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick South - Astoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick South - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick South - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carroll Gardens - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carroll Gardens - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem - Central Harlem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem - Financial District North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem - Kew Gardens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem - Morningside Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem North - Co-Op City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem North - Highbridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem North - Marble Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem North - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Harlem North - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park - Central Harlem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park - Garment District&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park - SoHo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park - West Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Claremont/Bathgate - Melrose South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton Hill - Crown Heights South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton Hill - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Co-Op City - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cobble Hill - Dyker Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cobble Hill - Midtown East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cobble Hill - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia Street - West Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coney Island - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corona - Midtown East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crown Heights North - Battery Park City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crown Heights North - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crown Heights North - Marine Park/Floyd Bennett Field&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crown Heights South - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cypress Hills - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Central Harlem North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Erasmus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - JFK Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Midtown South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Sunnyside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Yorkville East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Clinton Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Fort Greene&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Midtown Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Sunset Park West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Concourse/Concourse Village - Central Harlem&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Concourse/Concourse Village - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Flatbush/Farragut - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Flatbush/Remsen Village - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - Bronx Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - East Harlem North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - Longwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - Park Slope&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem North - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Bronxdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Forest Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Middle Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Prospect Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Harlem South - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East New York/Pennsylvania Avenue - East New York&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Tremont - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Williamsburg - East Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Williamsburg - Lower East Side&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Williamsburg - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst - Bronxdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst - JFK Airport&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst - Sunnyside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst/Maspeth - Alphabet City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst/Maspeth - Flushing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst/Maspeth - Middle Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elmhurst/Maspeth - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Far Rockaway - Brighton Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flatbush/Ditmas Park - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushing - Baisley Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushing - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushing - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flushing - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Hills - Astoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Hills - Corona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Hills - Glendale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Hills - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Hills - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest Hills - Upper East Side North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Greene - Boerum Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Greene - East Chelsea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Greene - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Greene - Midtown East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fort Greene - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fresh Meadows - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gravesend - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenpoint - Cypress Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenpoint - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenpoint - Old Astoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenpoint - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton Heights - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton Heights - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton Heights - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton Heights - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Highbridge Park - East Harlem South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hillcrest/Pomonok - North Corona&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inwood - Bedford Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inwood - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Inwood Hill Park - Melrose South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Heights - Canarsie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Heights - Flatiron&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Heights - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Heights - Old Astoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jackson Heights - Upper West Side North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica - Flatlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica - Jackson Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica - Rosedale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica Estates - South Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kew Gardens - Central Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kew Gardens - Forest Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kew Gardens - Maspeth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kew Gardens - Sunnyside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kingsbridge Heights - Manhattanville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Island City/Hunters Point - Gramercy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Island City/Hunters Point - Woodside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Island City/Queens Plaza - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Long Island City/Queens Plaza - Woodside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manhattan Valley - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manhattanville - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manhattanville - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manhattanville - West Concourse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maspeth - Bushwick South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melrose South - Astoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melrose South - Manhattanville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle Village - Forest Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morningside Heights - Chinatown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morningside Heights - Financial District North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morningside Heights - Kips Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morningside Heights - Morningside Heights&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morningside Heights - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morningside Heights - World Trade Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morrisania/Melrose - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mott Haven/Port Morris - Manhattanville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mount Hope - Central Harlem North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mount Hope - West Concourse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Corona - Elmhurst&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norwood - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ocean Hill - Sunset Park West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Astoria - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Astoria - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ozone Park - Forest Hills&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Slope - Clinton Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Slope - Greenpoint&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Slope - Ocean Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Slope - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pelham Parkway - Bedford Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Heights - Boerum Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Heights - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect-Lefferts Gardens - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect-Lefferts Gardens - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queensboro Hill - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queensbridge/Ravenswood - Midtown Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Hook - Borough Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Red Hook - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rego Park - Elmhurst&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rego Park - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rego Park - South Ozone Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond Hill - Kew Gardens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ridgewood - Steinway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint George/New Brighton - Stapleton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sheepshead Bay - Marine Park/Floyd Bennett Field&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Soundview/Bruckner - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Soundview/Castle Hill - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Ozone Park - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Williamsburg - Richmond Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Norwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steinway - East Williamsburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steinway - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steinway - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stuyvesant Heights - Crown Heights North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stuyvesant Heights - Ridgewood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunnyside - Elmhurst&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunnyside - Middle Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunnyside - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunset Park West - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University Heights/Morris Heights - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper East Side North - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Upper East Side North - Union Sq&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Van Cortlandt Village - West Concourse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights North - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights North - Melrose South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights North - Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights South - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights South - Financial District South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights South - Kips Bay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights South - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights South - Steinway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights South - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Concourse - East Tremont&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Concourse - Washington Heights South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willets Point - Whitestone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (North Side) - Chinatown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (North Side) - Gowanus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (North Side) - Manhattanville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (North Side) - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (South Side) - Bushwick North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (South Side) - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Williamsburg (South Side) - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Windsor Terrace - Park Slope&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodside - Bay Ridge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodside - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodside - Greenpoint&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodside - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodside - Upper East Side South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yorkville West - Garment District&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yorkville West - Upper West Side South&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Flushing - Newark Airport&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Forest Hills - Forest Hills&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - JFK Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Astoria - Central Harlem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Astoria - Financial District South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Astoria - JFK Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Astoria - Midtown South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Astoria - Saint Albans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Astoria - West Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baisley Park - Saint Albans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford - Bushwick South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford Park - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belmont - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bloomingdale - East Chelsea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bloomingdale - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bloomingdale - Upper West Side North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boerum Hill - Central Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boerum Hill - Erasmus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boerum Hill - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boerum Hill - SoHo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boerum Hill - Yorkville East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Briarwood/Jamaica Hills - Kew Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brighton Beach - Ocean Parkway South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brooklyn Heights - Brownsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brooklyn Heights - East Harlem South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brooklyn Heights - Kensington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brooklyn Heights - Park Slope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brooklyn Heights - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brooklyn Navy Yard - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick North - Bushwick North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick North - Greenpoint&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick North - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick South - Clinton East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick South - Old Astoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canarsie - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll Gardens - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carroll Gardens - Upper East Side South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem - Co-Op City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem - Gramercy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem - Old Astoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem - Union Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem - Yorkville West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem North - East Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem North - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem North - Morningside Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem North - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Harlem North - Yorkville East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park - Murray Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Claremont/Bathgate - Belmont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Claremont/Bathgate - Washington Heights South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton Hill - Flatlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton Hill - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cobble Hill - Boerum Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cobble Hill - Fort Greene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cobble Hill - Prospect Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Point - Flushing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coney Island - Brighton Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coney Island - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corona - Upper West Side North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown Heights North - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown Heights North - Fort Greene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown Heights North - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crown Heights South - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Crown Heights North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DUMBO/Vinegar Hill - Bedford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DUMBO/Vinegar Hill - Dyker Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DUMBO/Vinegar Hill - Hudson Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DUMBO/Vinegar Hill - Park Slope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DUMBO/Vinegar Hill - Upper East Side North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Concourse/Concourse Village - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Concourse/Concourse Village - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Flatbush/Remsen Village - Brownsville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Flushing - Jackson Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem North - Chinatown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem North - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem North - Jackson Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem North - Midtown Center&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem North - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - Alphabet City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - Chinatown&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - East New York&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Harlem South - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East New York - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Tremont - Crotona Park East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Williamsburg - Boerum Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Williamsburg - Fort Greene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Williamsburg - Prospect Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Williamsburg - Yorkville West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst - College Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst - Fort Greene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst - Richmond Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst - Upper East Side North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst/Maspeth - Bushwick South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst/Maspeth - Homecrest&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Elmhurst/Maspeth - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Erasmus - Crown Heights North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flatbush/Ditmas Park - Borough Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flatbush/Ditmas Park - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flushing - Corona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flushing - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flushing - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flushing Meadows-Corona Park - Glendale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Hills - Bellerose&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Hills - East Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Hills - Howard Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Hills - Midtown North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Hills - South Jamaica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forest Hills - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Greene - Bushwick South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Greene - East Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Greene - Kensington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Greene - Park Slope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Greene - Upper West Side South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glendale - North Corona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenpoint - Astoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenpoint - East Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenpoint - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greenpoint - SoHo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton Heights - Astoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton Heights - Greenpoint&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton Heights - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton Heights - Sunnyside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hamilton Heights - Yorkville West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Highbridge Park - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Homecrest - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inwood - East Chelsea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Inwood - Upper West Side South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Heights - Auburndale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Heights - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Heights - Greenpoint&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Heights - Manhattanville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Heights - Ridgewood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson Heights - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica - Clinton Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica - Garment District&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica - Laurelton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamaica - Upper East Side North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kensington - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kew Gardens - Douglaston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kew Gardens - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kew Gardens - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kew Gardens Hills - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LaGuardia Airport - Bushwick North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Long Island City/Hunters Point - Lower East Side&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Long Island City/Queens Plaza - East Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Long Island City/Queens Plaza - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Longwood - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manhattanville - Central Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manhattanville - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manhattanville - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marble Hill - Midtown North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maspeth - Gowanus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Melrose South - East Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Melrose South - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midwood - Kips Bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Heights - Corona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Heights - Gramercy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Heights - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Heights - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morningside Heights - Union Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morrisania/Melrose - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mott Haven/Port Morris - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mott Haven/Port Morris - SoHo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mount Hope - Inwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Murray Hill-Queens - Flushing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Corona - Maspeth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norwood - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Old Astoria - Bushwick South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Old Astoria - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Old Astoria - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ozone Park - South Ozone Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Slope - Dyker Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Slope - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Slope - Seaport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Parkchester - East Tremont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pelham Parkway - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect Heights - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect Park - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect-Lefferts Gardens - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prospect-Lefferts Gardens - Starrett City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queensbridge/Ravenswood - East Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queensbridge/Ravenswood - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Red Hook - Elmhurst&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rego Park - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rego Park - Garment District&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rego Park - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rego Park - Union Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ridgewood - Astoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston - Morningside Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheepshead Bay - Borough Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheepshead Bay - Sunset Park West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Soundview/Bruckner - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Jamaica - Corona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Ozone Park - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Springfield Gardens South - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Starrett City - Garment District&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steinway - Gowanus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steinway - Murray Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steinway - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stuyvesant Heights - Fort Greene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunnyside - Bedford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunnyside - Inwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunnyside - North Corona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunset Park East - East Harlem North&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunset Park West - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper East Side North - Central Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper East Side North - Midtown East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper East Side North - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Van Nest/Morris Park - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights North - Highbridge Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights North - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights North - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights South - Clinton West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights South - Gramercy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights South - Longwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights South - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights South - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Heights South - Yorkville East&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Concourse - Melrose South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Farms/Bronx River - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsbridge/Olinville - Mount Hope&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (North Side) - Crown Heights South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (North Side) - Hudson Sq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (North Side) - Old Astoria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (North Side) - Washington Heights South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (South Side) - Cobble Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (South Side) - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsburg (South Side) - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodhaven - Flushing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodside - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodside - East New York&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodside - Kew Gardens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodside - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woodside - Yorkville West&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yorkville West - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Central Park - Coney Island&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;East Harlem North - Morningside Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Astoria - Central Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Astoria - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Astoria - Kew Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Astoria - Morningside Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Astoria - Seaport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Astoria - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baisley Park - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford - Chinatown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford - Lower East Side&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford Park - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bensonhurst East - Bay Ridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bloomingdale - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bloomingdale - Manhattanville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bloomingdale - Upper West Side South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum Hill - Chinatown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum Hill - Financial District North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum Hill - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum Hill - South Williamsburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boerum Hill - Yorkville West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Briarwood/Jamaica Hills - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brighton Beach - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooklyn Heights - Bushwick North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooklyn Heights - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooklyn Heights - Kips Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooklyn Heights - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brooklyn Heights - Union Sq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville - Coney Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick North - Bushwick South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick North - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick North - Ridgewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick South - Clinton Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick South - Park Slope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canarsie - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll Gardens - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll Gardens - Upper West Side North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem - Crotona Park East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem - Park Slope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem North - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem North - East Harlem South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem North - Kips Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem North - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem North - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Harlem North - Yorkville West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park - Kips Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claremont/Bathgate - Central Harlem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claremont/Bathgate - West Concourse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton Hill - Fort Greene&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton Hill - Upper West Side North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cobble Hill - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cobble Hill - Gowanus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cobble Hill - Prospect Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;College Point - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coney Island - Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corona - Bellerose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corona - Woodside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crown Heights North - Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crown Heights North - Garment District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crown Heights North - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crown Heights South - JFK Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Crown Heights South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Forest Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Prospect Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Union Sq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUMBO/Vinegar Hill - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Chelsea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUMBO/Vinegar Hill - JFK Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUMBO/Vinegar Hill - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DUMBO/Vinegar Hill - Upper East Side South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Concourse/Concourse Village - Flatiron&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Concourse/Concourse Village - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Flatbush/Remsen Village - Canarsie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Flushing - North Corona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem North - City Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem North - Financial District North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem North - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem North - Midtown East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem North - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Astoria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Mount Hope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Seaport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Harlem South - Upper East Side South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East New York - Bushwick North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Tremont - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Williamsburg - Bushwick North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Williamsburg - Gramercy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Williamsburg - Prospect Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eastchester - Belmont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst - Corona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst - Ridgewood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst - Upper East Side South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst/Maspeth - Central Harlem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst/Maspeth - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elmhurst/Maspeth - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Erasmus - Crown Heights South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flatbush/Ditmas Park - Clinton Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flatbush/Ditmas Park - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing - Douglaston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing - Kips Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing - Rego Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing Meadows-Corona Park - JFK Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Hills - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Hills - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Hills - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Hills - Midtown South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Hills - South Ozone Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forest Hills - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Greene - Canarsie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Greene - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Greene - Kips Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Greene - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Greene - Washington Heights North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Glendale - South Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenpoint - Battery Park City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenpoint - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenpoint - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenpoint - Steinway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamilton Heights - Battery Park City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamilton Heights - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamilton Heights - Melrose South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hamilton Heights - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hammels/Arverne - Far Rockaway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Highbridge Park - Washington Heights North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Homecrest - Midwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Inwood - Eastchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Inwood - Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jackson Heights - Baisley Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jackson Heights - East Chelsea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jackson Heights - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jackson Heights - Maspeth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jackson Heights - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jackson Heights - Woodhaven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica - Cobble Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica - Glen Oaks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica - Rego Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kensington - Borough Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kew Gardens - East Elmhurst&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kew Gardens - Hollis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kew Gardens - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kew Gardens Hills - Corona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaGuardia Airport - East Harlem South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Island City/Hunters Point - Murray Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Island City/Queens Plaza - East Harlem South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Long Island City/Queens Plaza - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manhattanville - Central Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manhattanville - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manhattanville - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marble Hill - Washington Heights South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maspeth - Greenpoint&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Melrose South - East Harlem South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Melrose South - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Midwood - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Heights - Crotona Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Heights - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Heights - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Heights - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Heights - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morrisania/Melrose - East Harlem North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mott Haven/Port Morris - Crotona Park East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mott Haven/Port Morris - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mount Hope - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murray Hill-Queens - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Corona - North Corona&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norwood - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Old Astoria - Central Harlem North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Old Astoria - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Old Astoria - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Slope - Astoria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Slope - East Chelsea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Slope - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Slope - SoHo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parkchester - Elmhurst&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pelham Parkway - Longwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect Heights - East Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect Park - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect-Lefferts Gardens - Dyker Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prospect-Lefferts Gardens - Upper West Side North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queensbridge/Ravenswood - Elmhurst&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queensbridge/Ravenswood - Steinway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Red Hook - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rego Park - Bushwick North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rego Park - Glendale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rego Park - Old Astoria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rego Park - Upper East Side South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ridgewood - Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sheepshead Bay - Brighton Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Soundview/Bruckner - Norwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Soundview/Bruckner - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Jamaica - Far Rockaway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Ozone Park - Woodside&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Springfield Gardens South - Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Starrett City - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steinway - Greenpoint&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steinway - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steinway - West Concourse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stuyvesant Heights - Gowanus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunnyside - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunnyside - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunnyside - Old Astoria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sunset Park East - Flatlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sutton Place/Turtle Bay North - JFK Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper East Side North - Chinatown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper East Side North - Midtown North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper East Side North - West Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Van Nest/Morris Park - West Concourse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights North - Hunts Point&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights North - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights North - Yorkville East&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights South - Co-Op City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights South - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights South - Lower East Side&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights South - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights South - Union Sq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Heights South - Yorkville West&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Concourse - Morningside Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westchester Village/Unionport - Central Harlem North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsbridge/Olinville - Norwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (North Side) - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (North Side) - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (North Side) - Park Slope&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (North Side) - West Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (South Side) - Crown Heights North&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (South Side) - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg (South Side) - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodhaven - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodside - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodside - East Village&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodside - Kips Bay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodside - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World Trade Center - JFK Airport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yorkville West - Midtown Center&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria - Clinton West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria - Laurelton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria - Sunnyside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Astoria - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bay Ridge - Bay Ridge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford - Crown Heights South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford - Norwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford Park - Mount Hope&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bensonhurst East - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloomingdale - Financial District North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloomingdale - Midtown North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloomingdale - Yorkville East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boerum Hill - Clinton West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boerum Hill - Garment District&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boerum Hill - Maspeth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boerum Hill - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Borough Park - Borough Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Briarwood/Jamaica Hills - Saint Albans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bronx Park - West Concourse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooklyn Heights - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooklyn Heights - Elmhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooklyn Heights - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooklyn Heights - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brooklyn Heights - Upper West Side South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brownsville - East Harlem South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick North - Clinton West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick North - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick North - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick South - Crown Heights South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bushwick South - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canarsie - Murray Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll Gardens - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll Gardens - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem - East Chelsea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem - Highbridge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem - Upper West Side North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem North - Belmont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem North - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem North - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem North - Murray Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Harlem North - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park - Battery Park City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park - East Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park - Ozone Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park - Union Sq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Claremont/Bathgate - Crotona Park East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton Hill - Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton Hill - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton Hill - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cobble Hill - Canarsie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cobble Hill - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cobble Hill - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;College Point - Saint Albans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coney Island - Clinton East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corona - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crotona Park East - Bedford Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crown Heights North - Central Harlem&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crown Heights North - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crown Heights North - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crown Heights South - Ocean Parkway South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Brighton Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Gowanus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Lower East Side&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Upper West Side North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Brownsville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO/Vinegar Hill - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO/Vinegar Hill - West Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Concourse/Concourse Village - Hunts Point&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Elmhurst - Flushing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Flatbush/Remsen Village - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Clinton Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Flatiron&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Kips Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Midwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem North - Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - Clinton West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - Highbridge Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - Longwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - North Corona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Harlem South - Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East New York - Cypress Hills&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Tremont - Eastchester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Williamsburg - Central Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Williamsburg - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Williamsburg - Ridgewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastchester - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst - Douglaston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst - Gramercy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst - Middle Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst - Rosedale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst/Maspeth - Clinton Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst/Maspeth - Kensington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elmhurst/Maspeth - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Erasmus - JFK Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flatbush/Ditmas Park - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flatlands - Canarsie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing - East Flushing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fordham South - Bedford Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest Hills - Bushwick North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest Hills - Far Rockaway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest Hills - JFK Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest Hills - North Corona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest Hills - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forest Hills - World Trade Center&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Greene - Clinton East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Greene - Financial District South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Greene - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Greene - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Greene - West Concourse&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gowanus - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenpoint - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenpoint - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenpoint - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenpoint - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamilton Heights - Bloomingdale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamilton Heights - Highbridge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamilton Heights - Midtown North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamilton Heights - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Highbridge - Bedford Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hillcrest/Pomonok - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Howard Beach - Saint Albans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inwood - Inwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inwood - Washington Heights South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Heights - Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Heights - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Heights - Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Heights - Middle Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Heights - South Ozone Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson Heights - Yorkville West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica - Crown Heights North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica - Gramercy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica - Rockaway Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica - Woodhaven&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kensington - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kew Gardens - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kew Gardens - Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kew Gardens - Ridgewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kew Gardens Hills - Glendale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laurelton - JFK Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long Island City/Hunters Point - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long Island City/Queens Plaza - Erasmus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long Island City/Queens Plaza - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattan Beach - Coney Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattanville - Crotona Park East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattanville - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manhattanville - Union Sq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marine Park/Mill Basin - Brownsville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maspeth - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Melrose South - Eastchester&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Melrose South - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Heights - Battery Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Heights - East Chelsea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Heights - Highbridge&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Heights - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Heights - Ridgewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Heights - Upper West Side North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morrisania/Melrose - Fordham South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mott Haven/Port Morris - East Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mott Haven/Port Morris - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mount Hope - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murray Hill-Queens - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Corona - Steinway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oakland Gardens - Jackson Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Old Astoria - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Old Astoria - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Old Astoria - Washington Heights North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Slope - Bedford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Slope - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Slope - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Slope - Sunset Park West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parkchester - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pelham Parkway - Rosedale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prospect Heights - Gowanus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prospect Park - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prospect-Lefferts Gardens - East New York&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queens Village - Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queensbridge/Ravenswood - Greenpoint&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queensbridge/Ravenswood - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Red Hook - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rego Park - College Point&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rego Park - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rego Park - Queens Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rego Park - Woodside&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ridgewood - East Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roosevelt Island - Astoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheepshead Bay - Canarsie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Soundview/Bruckner - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Soundview/Castle Hill - Central Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Jamaica - Midwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Williamsburg - Borough Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steinway - Astoria Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steinway - Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steinway - Old Astoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Steinway - Yorkville East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stuyvesant Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunnyside - Central Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunnyside - Kew Gardens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunnyside - Rego Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sunset Park West - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University Heights/Morris Heights - Inwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Upper East Side North - East Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Upper East Side North - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Upper West Side South - JFK Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights North - Belmont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights North - Kips Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights North - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights South - Battery Park City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights South - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights South - Highbridge Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights South - Marble Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights South - Ridgewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Heights South - Upper East Side South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Concourse - Belmont&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Concourse - Pelham Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westchester Village/Unionport - East Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (North Side) - Alphabet City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (North Side) - East Flushing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (North Side) - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (North Side) - Prospect Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (North Side) - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (South Side) - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (South Side) - Middle Village&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsburg (South Side) - Upper West Side South&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodhaven - Whitestone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodside - Central Harlem North&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodside - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodside - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodside - Ridgewood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yorkville East - Midtown East&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yorkville West - Murray Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria - Corona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria - Fort Greene&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria - Norwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Astoria - Woodside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bay Ridge - Borough Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford - Park Slope&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford Park - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bensonhurst East - Woodside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bloomingdale - Flushing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bloomingdale - Morningside Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill - Alphabet City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill - Columbia Street&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill - Gramercy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill - Midtown East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill - Sunset Park East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Borough Park - Crown Heights South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Briarwood/Jamaica Hills - South Ozone Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bronxdale - Eastchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooklyn Heights - Chinatown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooklyn Heights - Financial District North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooklyn Heights - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooklyn Heights - Red Hook&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooklyn Heights - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brownsville - East New York/Pennsylvania Avenue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick North - Crown Heights South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick North - Lower East Side&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick North - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick South - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bushwick South - Ridgewood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll Gardens - Battery Park City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll Gardens - Midtown East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem - Astoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem - East Harlem North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem - Hudson Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem - Randalls Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem North - Central Harlem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem North - Financial District South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem North - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem North - Old Astoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Harlem North - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park - Bedford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park - Parkchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Park - Upper East Side North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Claremont/Bathgate - Eastchester&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton Hill - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton Hill - JFK Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton Hill - Yorkville West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cobble Hill - Chinatown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cobble Hill - Kensington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cobble Hill - Sunset Park West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbia Street - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coney Island - Coney Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Corona - Forest Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crotona Park East - Clinton West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crown Heights North - Coney Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crown Heights North - Homecrest&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crown Heights North - Sunset Park West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crown Heights South - Prospect Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - East Chelsea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Gravesend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Richmond Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Bushwick South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Seaport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DUMBO/Vinegar Hill - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Concourse/Concourse Village - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Elmhurst - Kew Gardens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Flatbush/Remsen Village - JFK Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - Astoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - College Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - Fordham South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - South Ozone Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem North - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Bedford Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Cobble Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Financial District North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Hudson Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Madison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Old Astoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - South Williamsburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Harlem South - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East New York - East New York&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Tremont - Hunts Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Williamsburg - Clinton East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Williamsburg - Kips Bay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Williamsburg - SoHo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst - Auburndale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst - East Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst - Midtown North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst - Saint Michaels Cemetery/Woodside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst - Willets Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst/Maspeth - Crown Heights North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst/Maspeth - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst/Maspeth - Steinway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erasmus - Midtown East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flatbush/Ditmas Park - Flatlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flatlands - Flatlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flushing - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flushing - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Flushing - Steinway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fordham South - JFK Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills - Cambria Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills - Flushing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills - Sunnyside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills - Yorkville West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Greene - Cobble Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Greene - Flatlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Greene - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Greene - Ridgewood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Greene - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gowanus - Fort Greene&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenpoint - Bushwick South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenpoint - Garment District&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenpoint - Maspeth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenpoint - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton Heights - Cambria Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton Heights - Inwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton Heights - Morningside Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton Heights - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highbridge - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hillcrest/Pomonok - Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hunts Point - Central Harlem North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Inwood - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Inwood - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson Heights - Bellerose&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson Heights - East Harlem North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson Heights - Kensington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson Heights - Midtown North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson Heights - Steinway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica - Auburndale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica - Douglaston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica - Maspeth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica - World Trade Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kensington - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kew Gardens - Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kew Gardens - JFK Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kew Gardens - Saint Albans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kew Gardens Hills - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Island City/Hunters Point - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Island City/Hunters Point - Rego Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Island City/Queens Plaza - Garment District&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Long Island City/Queens Plaza - SoHo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattan Beach - Homecrest&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattanville - East Harlem North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattanville - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manhattanville - Upper East Side North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marine Park/Mill Basin - Gravesend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maspeth - Midtown Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melrose South - Fordham South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melrose South - Upper West Side South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Heights - Bedford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Heights - East Harlem North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Heights - Hudson Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Heights - Maspeth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Heights - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morningside Heights - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morrisania/Melrose - Longwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mott Haven/Port Morris - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mott Haven/Port Morris - Upper East Side North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mount Hope - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Corona - Astoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Corona - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ocean Hill - Boerum Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Astoria - East Chelsea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Astoria - Maspeth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Old Astoria - West Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Slope - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Slope - Erasmus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Slope - Lower East Side&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Park Slope - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Parkchester - West Concourse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pelham Parkway - Washington Heights South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect Heights - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect Park - Midtown Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect-Lefferts Gardens - East Williamsburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queens Village - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queensbridge/Ravenswood - JFK Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queensbridge/Ravenswood - Union Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Hook - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rego Park - Corona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rego Park - Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rego Park - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richmond Hill - Baisley Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ridgewood - Greenpoint&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rosedale - Saint Albans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sheepshead Bay - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soundview/Bruckner - East Tremont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soundview/Castle Hill - College Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Ozone Park - Bayside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Williamsburg - Corona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Central Harlem&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steinway - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steinway - Kew Gardens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steinway - Rego Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuyvesant Heights - Battery Park City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stuyvesant Heights - Middle Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sunnyside - Corona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sunnyside - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sunnyside - Steinway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sunset Park West - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University Heights/Morris Heights - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Upper East Side North - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Upper East Side North - Pelham Bay Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Cortlandt Village - Bedford Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights North - Brownsville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights North - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights North - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights South - Bedford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights South - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights South - Hudson Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights South - Melrose South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights South - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights South - Upper West Side South&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Concourse - Bronxdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Concourse - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Westchester Village/Unionport - Norwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (North Side) - Bedford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (North Side) - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (North Side) - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (North Side) - Ridgewood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (North Side) - World Trade Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (South Side) - East Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (South Side) - Midtown North&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Williamsburg (South Side) - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodhaven - Woodside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodside - Clinton East&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodside - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodside - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodside - South Ozone Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yorkville West - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yorkville West - Sunnyside&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;East Harlem South - East Harlem North&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;East Harlem South - Newark Airport&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;East Harlem South - Upper East Side North&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Morningside Heights - Newark Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria - Belmont&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria - Inwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria - Midtown Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria - Richmond Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria - Washington Heights South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baisley Park - Midwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedford - Boerum Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedford - Kensington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedford Park - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belmont - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bloomingdale - Clinton East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bloomingdale - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bloomingdale - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum Hill - Bushwick North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum Hill - East New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum Hill - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum Hill - Ridgewood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum Hill - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Briarwood/Jamaica Hills - Forest Hills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brighton Beach - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Heights - Borough Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Heights - Dyker Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Heights - Hudson Sq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Heights - Murray Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Heights - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Navy Yard - Lower East Side&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick North - Bedford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick North - Fort Greene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick North - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick South - Bushwick North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bushwick South - Lower East Side&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambria Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carroll Gardens - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem - Fordham South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem - Murray Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem North - East Chelsea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem North - Inwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem North - Midtown East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem North - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Harlem North - West Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park - Clinton East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park - Midtown South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park - Steinway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park - World Trade Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Claremont/Bathgate - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton Hill - East Williamsburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton Hill - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cobble Hill - Bay Ridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cobble Hill - Financial District South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cobble Hill - Ocean Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cobble Hill - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coney Island - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coney Island - Sunnyside&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corona - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crown Heights North - Boerum Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crown Heights North - East Williamsburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crown Heights North - Park Slope&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crown Heights South - Chinatown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Bay Ridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Clinton Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Flatiron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Laurelton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Newark Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DUMBO/Vinegar Hill - Battery Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DUMBO/Vinegar Hill - Crown Heights North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DUMBO/Vinegar Hill - Greenpoint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DUMBO/Vinegar Hill - Morningside Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DUMBO/Vinegar Hill - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Concourse/Concourse Village - East Harlem South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Concourse/Concourse Village - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Flatbush/Farragut - Ozone Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Flushing - East Elmhurst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North - East Williamsburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North - Hudson Sq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North - Marble Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - Central Harlem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - Gowanus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - Midtown South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem South - World Trade Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East New York/Pennsylvania Avenue - Randalls Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Williamsburg - Bayside&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Williamsburg - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Williamsburg - Murray Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Williamsburg - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst - Bushwick South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst/Maspeth - Bloomingdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst/Maspeth - Glendale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmhurst/Maspeth - Old Astoria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erasmus - Bedford&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flatbush/Ditmas Park - Bensonhurst East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flatbush/Ditmas Park - Prospect Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flushing - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flushing - Jackson Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flushing - Old Astoria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flushing Meadows-Corona Park - East Elmhurst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest Hills - Bayside&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest Hills - East Chelsea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest Hills - Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest Hills - Middle Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest Hills - Saint Albans&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Forest Hills - West Village&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fort Greene - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fort Greene - East Harlem South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fort Greene - Hudson Sq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fort Greene - Murray Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fort Greene - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glendale - Glendale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gravesend - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenpoint - East Elmhurst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenpoint - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenpoint - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenpoint - Yorkville East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Heights - Fort Greene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Heights - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Heights - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Heights - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Highbridge Park - Manhattanville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hollis - Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inwood - Central Harlem North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inwood - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inwood Hill Park - Upper West Side South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson Heights - Corona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson Heights - Fort Greene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson Heights - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson Heights - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson Heights - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica - Cambria Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica - Forest Park/Highland Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica - Kew Gardens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JFK Airport - East New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens - Crown Heights North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens - Glendale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens - Murray Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens - Whitestone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kingsbridge Heights - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Long Island City/Hunters Point - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Long Island City/Queens Plaza - Clinton East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Long Island City/Queens Plaza - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Longwood - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattanville - Belmont&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattanville - JFK Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manhattanville - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marble Hill - Central Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maspeth - East Williamsburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Melrose South - Central Harlem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Melrose South - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Midwood - Borough Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights - Clinton Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights - Fordham South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights - SoHo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morrisania/Melrose - Country Club&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mott Haven/Port Morris - Central Harlem North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mott Haven/Port Morris - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mount Hope - East Tremont&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mount Hope - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Corona - JFK Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norwood - Old Astoria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Old Astoria - Astoria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Old Astoria - Jackson Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Old Astoria - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ozone Park - Ozone Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Slope - Crown Heights South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Slope - JFK Airport&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Park Slope - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parkchester - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pelham Parkway - Country Club&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect Heights - Crown Heights North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect Park - Clinton Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect-Lefferts Gardens - Canarsie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect-Lefferts Gardens - Ocean Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queensbridge/Ravenswood - Clinton East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queensbridge/Ravenswood - Old Astoria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red Hook - Crown Heights North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rego Park - Auburndale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rego Park - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rego Park - Maspeth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rego Park - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond Hill - Rego Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ridgewood - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Schuylerville/Edgewater Park - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sheepshead Bay - Rockaway Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Soundview/Bruckner - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Soundview/Castle Hill - West Concourse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Ozone Park - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Springfield Gardens North - Cypress Hills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - West Concourse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steinway - Flushing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steinway - Midtown North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steinway - Upper West Side North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuyvesant Heights - East New York&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuyvesant Heights - Yorkville East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunnyside - Glendale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunnyside - Morningside Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset Park East - Boerum Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset Park West - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper East Side North - Bloomingdale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper East Side North - Lower East Side&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper East Side North - Upper West Side South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Van Nest/Morris Park - East Tremont&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights North - Elmhurst&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights North - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights North - Washington Heights South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights South - Central Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights South - Fordham South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights South - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights South - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights South - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington Heights South - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Concourse - Highbridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Farms/Bronx River - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsbridge/Olinville - Midtown Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (North Side) - Cobble Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (North Side) - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (North Side) - Midtown North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (North Side) - Upper East Side North&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (South Side) - Chinatown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (South Side) - Kips Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsburg (South Side) - Sunset Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodhaven - East Williamsburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodside - Bellerose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodside - East Flushing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodside - Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodside - Ozone Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodside - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yorkville West - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yorkville West - Yorkville East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria - Battery Park City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria - East Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria - Hammels/Arverne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria - Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria - Upper West Side North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baisley Park - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayside - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bedford - Gramercy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bedford - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belmont - Melrose South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bloomingdale - Central Harlem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bloomingdale - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bloomingdale - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boerum Hill - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boerum Hill - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boerum Hill - Kensington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boerum Hill - Prospect Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boerum Hill - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Briarwood/Jamaica Hills - Elmhurst&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brighton Beach - Gravesend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Heights - Bedford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Heights - Crown Heights South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Heights - Greenpoint&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Heights - Midtown East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Heights - Sunset Park East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Navy Yard - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brownsville - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bushwick North - Erasmus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bushwick North - Ocean Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bushwick South - Bay Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bushwick South - JFK Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bushwick South - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carroll Gardens - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carroll Gardens - Sunset Park East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem - Central Harlem North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem - Kips Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem - Sunnyside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem North - Crotona Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem North - Highbridge Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem North - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem North - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Harlem North - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park - Central Harlem North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park - Gramercy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park - Midtown Center&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park - South Ozone Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Claremont/Bathgate - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton Hill - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton Hill - Prospect Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Co-Op City - Woodlawn/Wakefield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cobble Hill - East Chelsea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cobble Hill - Midtown North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cobble Hill - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbia Street - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coney Island - Red Hook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corona - Murray Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown Heights North - Bay Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown Heights North - East New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown Heights North - Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Crown Heights South - Brooklyn Navy Yard&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Alphabet City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Central Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Financial District North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Kensington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Midwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Sunset Park East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Yorkville West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DUMBO/Vinegar Hill - Clinton West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DUMBO/Vinegar Hill - Garment District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DUMBO/Vinegar Hill - Midtown East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DUMBO/Vinegar Hill - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Concourse/Concourse Village - Central Harlem North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Concourse/Concourse Village - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Flatbush/Farragut - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Flatbush/Remsen Village - Sunnyside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem North - Bronxdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem North - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem North - Lower East Side&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem North - Parkchester&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem North - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem North - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - East Chelsea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Forest Park/Highland Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Midtown Center&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Harlem South - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East New York/Pennsylvania Avenue - Greenpoint&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Tremont - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Williamsburg - East Williamsburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Williamsburg - Melrose South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Williamsburg - Upper East Side North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst - Far Rockaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst - Kensington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst - Sunset Park East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst/Maspeth - Astoria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst/Maspeth - Flushing Meadows-Corona Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst/Maspeth - Midtown Center&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elmhurst/Maspeth - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Far Rockaway - Far Rockaway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flatbush/Ditmas Park - Midtown Center&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flushing - Bay Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flushing - Gramercy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flushing - Saint Albans&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flushing - Woodhaven&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Hills - Auburndale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Hills - Crown Heights North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Hills - Gramercy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Hills - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Hills - Rego Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Forest Hills - Upper East Side South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Greene - Borough Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Greene - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Greene - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Greene - Midtown South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fort Greene - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fresh Meadows - Rego Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gravesend - Coney Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenpoint - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenpoint - Kensington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenpoint - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenpoint - West Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton Heights - East Harlem North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton Heights - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton Heights - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton Heights - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Highbridge Park - Inwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hillcrest/Pomonok - Park Slope&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inwood - Belmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inwood - Mount Hope&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Inwood Hill Park - Morningside Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Heights - Central Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Heights - Flushing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Heights - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Heights - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Heights - Upper West Side South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica - Brighton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica - Flushing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica - Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica - Oakland Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica - Sunnyside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica Estates - Woodside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kew Gardens - Clinton East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kew Gardens - Forest Park/Highland Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kew Gardens - Middle Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kew Gardens - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kingsbridge Heights - Melrose South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island City/Hunters Point - Greenpoint&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island City/Queens Plaza - Astoria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Island City/Queens Plaza - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Longwood - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manhattanville - Astoria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manhattanville - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manhattanville - Norwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manhattanville - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maspeth - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melrose South - Bedford Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melrose South - Melrose South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Middle Village - Richmond Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Heights - City Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Heights - Financial District South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Heights - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Heights - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Heights - Yorkville East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mott Haven/Port Morris - Bedford Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mott Haven/Port Morris - Melrose South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mount Hope - East Chelsea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mount Hope - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Corona - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norwood - Melrose South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ocean Hill - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Astoria - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Astoria - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ozone Park - Glendale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Slope - Clinton West&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Slope - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Slope - Park Slope&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Slope - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pelham Parkway - Bronxdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect Heights - Bushwick North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect Heights - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect-Lefferts Gardens - Boerum Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect-Lefferts Gardens - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Queensbridge/Ravenswood - Astoria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Queensbridge/Ravenswood - Midtown North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Red Hook - Bushwick South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Red Hook - Yorkville East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rego Park - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rego Park - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rego Park - Steinway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond Hill - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ridgewood - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Michaels Cemetery/Woodside - Steinway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sheepshead Bay - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soundview/Bruckner - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soundview/Castle Hill - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Ozone Park - Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Williamsburg - South Williamsburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steinway - Eastchester&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steinway - Madison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steinway - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stuyvesant Heights - Crown Heights South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stuyvesant Heights - Starrett City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunnyside - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunnyside - Midtown Center&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunnyside - Woodside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunset Park West - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University Heights/Morris Heights - West Concourse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Upper East Side North - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Upper East Side North - Upper East Side North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Van Nest/Morris Park - Belmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights North - East Harlem North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights North - Midtown South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights North - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights South - Brownsville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights South - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights South - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights South - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights South - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Washington Heights South - West Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Concourse - Eastchester&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Concourse - West Concourse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsbridge/Olinville - Belmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (North Side) - Clinton East&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (North Side) - Gramercy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (North Side) - Maspeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (North Side) - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (South Side) - Bushwick South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (South Side) - Hudson Sq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Williamsburg (South Side) - Ridgewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Windsor Terrace - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodside - Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodside - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodside - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodside - North Corona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodside - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yorkville West - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yorkville West - Washington Heights South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allerton/Pelham Gardens - East Harlem North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astoria - East Chelsea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astoria - Gramercy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astoria - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astoria - Park Slope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astoria - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Auburndale - Flushing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bay Ridge - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford - East Williamsburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belmont - Bedford Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bensonhurst West - Midwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bloomingdale - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bloomingdale - Mount Hope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boerum Hill - Bay Ridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boerum Hill - Cypress Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boerum Hill - Greenpoint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boerum Hill - Ocean Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boerum Hill - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borough Park - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briarwood/Jamaica Hills - Woodside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronxdale - Parkchester&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Heights - Clinton West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Heights - Flatiron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Heights - Longwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Heights - SoHo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn Heights - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brownsville - Fort Greene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick North - East Chelsea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick North - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick North - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick South - Financial District South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bushwick South - Stapleton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll Gardens - Bushwick South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll Gardens - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem - Belmont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem - East Village&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem - Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem - Midtown East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem - Washington Heights South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem North - Chinatown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem North - Garment District&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem North - Longwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem North - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Harlem North - Upper West Side North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park - Borough Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park - Financial District South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park - Richmond Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central Park - Upper West Side South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Claremont/Bathgate - Inwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton Hill - Chinatown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clinton Hill - Lower East Side&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Co-Op City - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cobble Hill - Cobble Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cobble Hill - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cobble Hill - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia Street - East Chelsea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coney Island - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corona - JFK Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crotona Park East - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crown Heights North - Crown Heights South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crown Heights North - Kensington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crown Heights North - Upper East Side South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crown Heights South - Sunnyside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Bushwick South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - East New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - SoHo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUMBO/Vinegar Hill - Central Harlem North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUMBO/Vinegar Hill - Financial District South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUMBO/Vinegar Hill - Lower East Side&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUMBO/Vinegar Hill - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dyker Heights - Park Slope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Concourse/Concourse Village - Melrose South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Elmhurst - Ridgewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Flatbush/Remsen Village - Madison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - Bedford Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - Garment District&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - Murray Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem North - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Bloomingdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Coney Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Flatiron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Marble Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Pelham Bay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Harlem South - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East New York - Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Tremont - Mount Hope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Williamsburg - Crown Heights South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Williamsburg - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Williamsburg - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst - Bedford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst - East New York&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst - Homecrest&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst - South Ozone Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst - Woodhaven&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst/Maspeth - East Harlem North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst/Maspeth - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elmhurst/Maspeth - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erasmus - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flatbush/Ditmas Park - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flatlands - Midtown East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flushing - Erasmus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flushing - Maspeth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flushing - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fordham South - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forest Hills - Clinton East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forest Hills - Forest Park/Highland Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forest Hills - Laurelton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forest Hills - Ozone Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forest Hills - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene - Bath Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene - Crown Heights North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene - Gowanus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene - South Williamsburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Greene - Woodside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gowanus - Sunset Park West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenpoint - Clinton East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenpoint - Greenpoint&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenpoint - Midtown North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenpoint - Upper East Side North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton Heights - Central Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton Heights - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton Heights - Murray Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton Heights - Upper West Side North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Highbridge - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hillcrest/Pomonok - Forest Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hunts Point - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inwood - Manhattanville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inwood Hill Park - Financial District North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Heights - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Heights - East Williamsburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Heights - Kips Bay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Heights - Murray Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jackson Heights - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica - Bay Ridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica - Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica - Midtown East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica - South Ozone Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica Estates - Cambria Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kew Gardens - Bayside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kew Gardens - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kew Gardens - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kew Gardens - South Ozone Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kingsbridge Heights - Belmont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Island City/Hunters Point - Corona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Island City/Hunters Point - Sunnyside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Island City/Queens Plaza - Jackson Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Island City/Queens Plaza - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manhattan Beach - Rockaway Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manhattanville - Fordham South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manhattanville - Midtown Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manhattanville - Upper West Side South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marine Park/Mill Basin - Ocean Parkway South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maspeth - Ridgewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melrose South - Highbridge&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Melrose South - West Concourse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Heights - Bushwick South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Heights - East Tremont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Heights - Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Heights - Midtown Center&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Heights - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morningside Heights - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morrisania/Melrose - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mott Haven/Port Morris - Kips Bay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mott Haven/Port Morris - West Concourse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mount Hope - Upper West Side North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Corona - Bushwick South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norwood - Bronxdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ocean Hill - Clinton East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Old Astoria - Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Old Astoria - Murray Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Old Astoria - Woodhaven&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Slope - Bushwick South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Slope - Flatiron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Slope - Midtown East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Slope - Upper East Side South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pelham Bay - Hunts Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pelham Parkway - Yorkville East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prospect Heights - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prospect Park - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prospect-Lefferts Gardens - Fort Greene&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queens Village - South Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queensbridge/Ravenswood - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queensbridge/Ravenswood - Woodside&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Hook - Red Hook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rego Park - East Elmhurst&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rego Park - Kew Gardens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rego Park - Richmond Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Richmond Hill - Forest Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ridgewood - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Albans - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sheepshead Bay - Gravesend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Soundview/Castle Hill - JFK Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Ozone Park - East Chelsea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Williamsburg - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steinway - Corona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steinway - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steinway - South Ozone Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stuyvesant Heights - Brownsville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stuyvesant Heights - Ocean Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sunnyside - East Flushing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sunnyside - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sunnyside - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sunset Park West - Crown Heights North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University Heights/Morris Heights - Norwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upper East Side North - JFK Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upper East Side North - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Van Cortlandt Village - Mount Hope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights North - Central Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights North - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights North - Upper East Side North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights South - Bloomingdale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights South - East Tremont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights South - Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights South - Midtown North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights South - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Heights South - Washington Heights North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Concourse - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Concourse - Upper East Side South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whitestone - JFK Airport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (North Side) - Bushwick North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (North Side) - Financial District South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (North Side) - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (North Side) - Steinway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (South Side) - Astoria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (South Side) - Forest Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (South Side) - Ocean Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Williamsburg (South Side) - Yorkville West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodlawn/Wakefield - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodside - Corona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodside - Forest Hills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodside - Maspeth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Woodside - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yorkville West - Crotona Park East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yorkville West - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;East Harlem North - Upper East Side North&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Washington Heights South - Newark Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Astoria - Clinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Astoria - Flatiron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Astoria - Kips Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Astoria - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Astoria - South Ozone Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Astoria - Whitestone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bath Beach - Bay Ridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford - Clinton Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford - Midtown South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford Park - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bensonhurst East - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bloomingdale - East Harlem North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bloomingdale - Midtown Center&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bloomingdale - Washington Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boerum Hill - Clinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boerum Hill - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boerum Hill - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boerum Hill - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Borough Park - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Briarwood/Jamaica Hills - Old Astoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brighton Beach - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooklyn Heights - Bushwick South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooklyn Heights - East Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooklyn Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooklyn Heights - Prospect Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooklyn Heights - Upper East Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brownsville - Crown Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick North - Central Harlem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick North - Kew Gardens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick North - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick South - Coney Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bushwick South - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canarsie - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll Gardens - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll Gardens - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem - Crown Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem - Longwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem - Parkchester&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem - Upper East Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem North - Alphabet City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem North - East Tremont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem North - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem North - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Harlem North - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park - Alphabet City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park - East Chelsea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park - Ocean Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Claremont/Bathgate - Central Harlem North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Claremont/Bathgate - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton Hill - Gowanus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton Hill - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cobble Hill - Bushwick North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cobble Hill - Gramercy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cobble Hill - Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;College Point - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coney Island - Bushwick South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Corona - Corona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Country Club - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crown Heights North - Bushwick South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crown Heights North - Gowanus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crown Heights North - South Ozone Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crown Heights South - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Borough Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Cypress Hills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Fort Greene&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Prospect Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Upper East Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUMBO/Vinegar Hill - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUMBO/Vinegar Hill - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUMBO/Vinegar Hill - Kips Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUMBO/Vinegar Hill - Prospect Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DUMBO/Vinegar Hill - Upper West Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Concourse/Concourse Village - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Elmhurst - Corona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Flatbush/Remsen Village - Crown Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Flushing - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem North - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem North - Financial District South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem North - JFK Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem North - Midtown North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem North - Seaport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - Battery Park City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - Clinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - East Tremont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - Murray Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Harlem South - Upper West Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East New York - Bushwick South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Tremont - East Harlem North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Williamsburg - Bushwick South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Williamsburg - Greenpoint&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Williamsburg - Red Hook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eastchester - Murray Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst - Crown Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst - Glen Oaks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst - Longwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst - Rockaway Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst - Washington Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst/Maspeth - Chinatown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst/Maspeth - Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Elmhurst/Maspeth - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Erasmus - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flatbush/Ditmas Park - Coney Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flatbush/Ditmas Park - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flushing - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flushing - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flushing - Richmond Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flushing Meadows-Corona Park - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forest Hills - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forest Hills - Elmhurst&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forest Hills - Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forest Hills - Murray Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forest Hills - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forest Hills - Woodhaven&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Greene - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Greene - Erasmus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Greene - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Greene - Prospect Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Greene - Washington Heights South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gowanus - Bedford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenpoint - Bedford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenpoint - Erasmus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenpoint - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenpoint - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hamilton Heights - Bedford Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hamilton Heights - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hamilton Heights - Midtown Center&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hamilton Heights - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hammels/Arverne - Greenpoint&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hillcrest/Pomonok - Auburndale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Homecrest - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Inwood - Financial District North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Inwood - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson Heights - Bay Ridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson Heights - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson Heights - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson Heights - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson Heights - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson Heights - Woodside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica - College Point&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica - Glendale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica - Richmond Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica - West Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kensington - Dyker Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kew Gardens - East Flushing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kew Gardens - Howard Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kew Gardens - Rego Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kew Gardens Hills - Flushing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LaGuardia Airport - Forest Hills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Island City/Hunters Point - Old Astoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Island City/Queens Plaza - East Williamsburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Island City/Queens Plaza - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan Beach - Bay Ridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattanville - Clinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattanville - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattanville - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marine Park/Floyd Bennett Field - Flatlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maspeth - Jackson Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Melrose South - East Tremont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Melrose South - Soundview/Bruckner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morningside Heights - Alphabet City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morningside Heights - Crotona Park East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morningside Heights - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morningside Heights - Longwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morningside Heights - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morningside Heights - Upper East Side North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morrisania/Melrose - East Harlem South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mott Haven/Port Morris - Crown Heights North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mott Haven/Port Morris - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Hope - Melrose South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murray Hill-Queens - JFK Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Corona - Old Astoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norwood - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Astoria - Clinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Astoria - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Astoria - Union Sq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Slope - Battery Park City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Slope - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Slope - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Slope - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Parkchester - Norwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pelham Parkway - Norwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Heights - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect Park - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prospect-Lefferts Gardens - East Flatbush/Remsen Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queens Village - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queensbridge/Ravenswood - Flushing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queensbridge/Ravenswood - Sunnyside&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Red Hook - Flatiron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rego Park - Central Harlem North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rego Park - Gramercy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rego Park - Ozone Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rego Park - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ridgewood - Boerum Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston - Washington Heights South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sheepshead Bay - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sheepshead Bay - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Soundview/Bruckner - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Jamaica - Glendale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Williamsburg - Astoria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Springfield Gardens South - JFK Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Starrett City - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steinway - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steinway - North Corona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steinway - Whitestone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stuyvesant Heights - Greenpoint&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunnyside - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunnyside - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunnyside - Queensboro Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunset Park East - Park Slope&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University Heights/Morris Heights - Bedford Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper East Side North - Clinton East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper East Side North - Midtown South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper East Side North - Yorkville East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Van Nest/Morris Park - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights North - Inwood&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights North - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights South - Allerton/Pelham Gardens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights South - Crotona Park East&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights South - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights South - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights South - Prospect Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Heights South - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Brighton - Westerleigh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Concourse - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westchester Village/Unionport - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsbridge/Olinville - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (North Side) - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (North Side) - JFK Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (North Side) - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (North Side) - Williamsburg (North Side)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (South Side) - Crown Heights South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (South Side) - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Williamsburg (South Side) - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodhaven - Rego Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodside - Bushwick South&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodside - East Williamsburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodside - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodside - Rego Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yorkville East - East Village&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yorkville West - Midtown East&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;East Harlem North - Upper West Side North&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Forest Hills - Newark Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astoria - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astoria - Erasmus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astoria - Jackson Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astoria - Midtown East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astoria - Ridgewood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Astoria - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baisley Park - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bedford - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bedford - Kips Bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bedford Park - Bedford Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belmont - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bloomingdale - Clinton West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bloomingdale - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bloomingdale - Upper East Side North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum Hill - Bushwick South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum Hill - East Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum Hill - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum Hill - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum Hill - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Briarwood/Jamaica Hills - Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brighton Beach - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Heights - Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Heights - East Chelsea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Heights - Inwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Heights - Newark Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Heights - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Navy Yard - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick North - Boerum Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick North - Garment District&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick North - Prospect Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick South - Bushwick South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bushwick South - Midwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambria Heights - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll Gardens - East Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll Gardens - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem - Clinton East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem - Fort Greene&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem - Woodside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem North - Inwood Hill Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem North - Midtown North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem North - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Harlem North - Westchester Village/Unionport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park - Clinton West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park - Morningside Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park - Stuy Town/Peter Cooper Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park - Yorkville East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Claremont/Bathgate - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton Hill - Financial District North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton Hill - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cobble Hill - Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cobble Hill - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cobble Hill - Park Slope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cobble Hill - World Trade Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coney Island - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coney Island - Sunset Park East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corona - Richmond Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown Heights North - Borough Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown Heights North - Erasmus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown Heights North - Prospect Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown Heights South - Crown Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Cobble Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Flatlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Ocean Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DUMBO/Vinegar Hill - Battery Park City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DUMBO/Vinegar Hill - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DUMBO/Vinegar Hill - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DUMBO/Vinegar Hill - Murray Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DUMBO/Vinegar Hill - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Concourse/Concourse Village - East Tremont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Concourse/Concourse Village - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Flatbush/Farragut - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Flushing - East Flushing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem North - Eastchester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem North - Hunts Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem North - Meatpacking/West Village West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem North - Randalls Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem North - Union Sq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem North - Yorkville East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Central Harlem North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Gramercy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Morningside Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Roosevelt Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Union Sq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South - Yorkville East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Tremont - Central Harlem North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Williamsburg - Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Williamsburg - Flatiron&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Williamsburg - Park Slope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Williamsburg - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst - Cambria Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst - Forest Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst - Queensbridge/Ravenswood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst/Maspeth - Briarwood/Jamaica Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst/Maspeth - Greenpoint&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmhurst/Maspeth - Park Slope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Erasmus - Brownsville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flatbush/Ditmas Park - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flatbush/Ditmas Park - Richmond Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flushing - Clinton West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flushing - JFK Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flushing - Prospect Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Flushing Meadows-Corona Park - Flushing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills - Bedford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills - East Elmhurst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills - Midtown Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills - Whitestone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Greene - Brownsville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Greene - East New York&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Greene - Jackson Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Greene - Ocean Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Greene - Union Sq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale - Greenpoint&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gravesend - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint - Ridgewood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint - Yorkville West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton Heights - Garment District&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton Heights - Manhattanville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton Heights - South Ozone Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamilton Heights - World Trade Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Highbridge Park - Midtown East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hollis - Queens Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Inwood - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Inwood - Union Sq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Inwood Hill Park - Washington Heights South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Heights - Crown Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Heights - Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Heights - Longwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Heights - Rego Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jackson Heights - Whitestone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica - Central Harlem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica - Fort Greene&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica - Queens Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JFK Airport - Forest Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kew Gardens - Crown Heights South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kew Gardens - Gramercy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kew Gardens - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kew Gardens - Woodhaven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingsbridge Heights - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Long Island City/Hunters Point - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Long Island City/Queens Plaza - Clinton Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Long Island City/Queens Plaza - North Corona&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Longwood - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manhattanville - Bloomingdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manhattanville - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manhattanville - Spuyten Duyvil/Kingsbridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marble Hill - Inwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maspeth - Elmhurst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Melrose South - Central Harlem North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Melrose South - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Midwood - DUMBO/Vinegar Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Heights - Clinton West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Heights - Fort Greene&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Heights - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Heights - Norwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Heights - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morrisania/Melrose - Crotona Park East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mott Haven/Port Morris - Central Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mott Haven/Port Morris - Mount Hope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Hope - Fort Greene&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Hope - Yorkville West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Corona - Kew Gardens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norwood - Pelham Bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Old Astoria - Borough Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Old Astoria - JFK Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Old Astoria - Sunnyside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ozone Park - Rego Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Slope - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Slope - Kensington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Slope - Red Hook&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parkchester - Astoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pelham Parkway - Elmhurst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect Heights - Crown Heights South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect Park - Crown Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect-Lefferts Gardens - Clinton Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect-Lefferts Gardens - Park Slope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queensbridge/Ravenswood - Corona&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queensbridge/Ravenswood - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Red Hook - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rego Park - Bayside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rego Park - Forest Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rego Park - Middle Village&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rego Park - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond Hill - Richmond Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston - Hudson Sq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sheepshead Bay - Bay Ridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sheepshead Bay - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Soundview/Bruckner - Washington Heights South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Jamaica - Bensonhurst West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Ozone Park - Rego Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Springfield Gardens North - Sunnyside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steinway - Forest Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steinway - Midtown South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steinway - Upper West Side South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stuyvesant Heights - East Williamsburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunnyside - Astoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunnyside - Gramercy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunnyside - Murray Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunset Park East - Columbia Street&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sunset Park West - Sunset Park West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper East Side North - Central Harlem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper East Side North - Manhattan Valley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper East Side North - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Nest/Morris Park - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights North - Greenpoint&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights North - Mount Hope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights North - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights South - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights South - Garment District&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights South - Lincoln Square West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights South - Old Astoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights South - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Washington Heights South - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Concourse - Inwood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Farms/Bronx River - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsbridge/Olinville - Morrisania/Melrose&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (North Side) - Columbia Street&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (North Side) - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (North Side) - Murray Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (North Side) - Upper West Side North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (South Side) - Clinton East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (South Side) - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (South Side) - Sutton Place/Turtle Bay North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodhaven - Elmhurst&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodside - Bloomingdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodside - East Harlem North&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodside - Jamaica Estates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodside - Parkchester&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Woodside - Woodside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yorkville West - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yorkville West - Yorkville West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Allerton/Pelham Gardens - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astoria - East Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astoria - Greenpoint&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astoria - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astoria - Penn Station/Madison Sq West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Astoria - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburndale - Hillcrest/Pomonok&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bay Ridge - Woodside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedford - Erasmus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedford - South Williamsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belmont - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bensonhurst West - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bloomingdale - Hamilton Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bloomingdale - Murray Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boerum Hill - Bedford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boerum Hill - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boerum Hill - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boerum Hill - Ozone Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boerum Hill - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Breezy Point/Fort Tilden/Riis Beach - Marine Park/Floyd Bennett Field&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brighton Beach - Bay Ridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bronxdale - Van Nest/Morris Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Heights - Cobble Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Heights - Fort Greene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Heights - Lower East Side&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Heights - South Williamsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Heights - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brownsville - Gramercy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick North - East Harlem North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick North - Middle Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick North - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick South - Forest Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick South - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll Gardens - Chinatown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll Gardens - Prospect Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem - Bloomingdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem - East Williamsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem - Jackson Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem - Midtown North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem - SoHo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem - West Chelsea/Hudson Yards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem North - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem North - Greenwich Village North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem North - Lower East Side&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem North - Prospect Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem North - Upper West Side South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park - Bronx Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park - Flatiron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park - Lower East Side&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park - Riverdale/North Riverdale/Fieldston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Park - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Claremont/Bathgate - Kingsbridge Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton Hill - Clinton East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clinton Hill - Midtown East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Co-Op City - Murray Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cobble Hill - Columbia Street&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cobble Hill - Lincoln Square East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cobble Hill - Union Sq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbia Street - Erasmus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Coney Island - Gravesend&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corona - Kew Gardens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crotona Park East - Parkchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crown Heights North - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crown Heights North - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crown Heights North - Williamsburg (South Side)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cypress Hills - East New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Canarsie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - East Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Howard Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Midtown Center&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - South Williamsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Downtown Brooklyn/MetroTech - Windsor Terrace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Central Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Flatbush/Ditmas Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Manhattan Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DUMBO/Vinegar Hill - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Concourse/Concourse Village - Bedford Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Concourse/Concourse Village - Midtown Center&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Elmhurst - Steinway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Flatbush/Remsen Village - Ocean Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - Bellerose&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - East Chelsea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - Gowanus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - North Corona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem North - West Concourse&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Boerum Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Crotona Park East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Flushing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Jackson Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Maspeth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Harlem South - West Concourse&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East New York - JFK Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Tremont - Pelham Parkway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Williamsburg - East Chelsea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Williamsburg - Little Italy/NoLiTa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Williamsburg - Sunset Park West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst - Bellerose&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst - East Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst - Jackson Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst - North Corona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst - Springfield Gardens South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst - Woodside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst/Maspeth - East New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst/Maspeth - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst/Maspeth - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Erasmus - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flatbush/Ditmas Park - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flatlands - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing - Flushing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing - Middle Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fordham South - University Heights/Morris Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forest Hills - Clinton Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forest Hills - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forest Hills - Lenox Hill East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forest Hills - Park Slope&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Forest Hills - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Greene - Battery Park City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Greene - Crown Heights South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Greene - Gramercy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Greene - Marine Park/Mill Basin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Greene - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fort Greene - World Trade Center&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gowanus - Upper East Side North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenpoint - Clinton Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenpoint - Greenwich Village South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenpoint - Midtown South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenpoint - Upper East Side South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton Heights - Clinton East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton Heights - Kips Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton Heights - North Corona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamilton Heights - Upper West Side South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highbridge - Mount Hope&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hillcrest/Pomonok - Glendale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hunts Point - Mount Hope&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inwood - Marble Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inwood Hill Park - Inwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson Heights - Bronxdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson Heights - Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson Heights - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson Heights - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson Heights - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica - Bay Terrace/Fort Totten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica - Hollis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica - Midtown South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica Estates - Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kew Gardens - Bellerose&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kew Gardens - Flatlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kew Gardens - Laurelton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kew Gardens - Springfield Gardens North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kingsbridge Heights - Financial District South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Long Island City/Hunters Point - East Harlem South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Long Island City/Hunters Point - UN/Turtle Bay South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Long Island City/Queens Plaza - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Long Island City/Queens Plaza - TriBeCa/Civic Center&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manhattan Beach - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manhattanville - Garment District&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manhattanville - Midtown North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manhattanville - Washington Heights North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marine Park/Mill Basin - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maspeth - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Melrose South - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Melrose South - Williamsbridge/Olinville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Heights - Central Harlem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Heights - East Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Heights - JFK Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Heights - Midtown East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Heights - Soundview/Castle Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morningside Heights - West Concourse&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morrisania/Melrose - Mott Haven/Port Morris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mott Haven/Port Morris - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mott Haven/Port Morris - West Farms/Bronx River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mount Hope - Van Cortlandt Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Corona - Corona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norwood - East Harlem North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ocean Hill - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Old Astoria - Elmhurst/Maspeth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Old Astoria - Murray Hill-Queens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Old Astoria - Woodside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Slope - Carroll Gardens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Slope - Fort Greene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Slope - Midtown North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Slope - Upper West Side South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pelham Bay - Norwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prospect Heights - Battery Park City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prospect Heights - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prospect Park - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prospect-Lefferts Gardens - Gravesend&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Queensboro Hill - Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Queensbridge/Ravenswood - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Randalls Island - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Red Hook - Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rego Park - East Flatbush/Farragut&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rego Park - Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rego Park - Ridgewood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richmond Hill - Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ridgewood - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint George/New Brighton - Mariners Harbor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sheepshead Bay - Homecrest&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Soundview/Bruckner - Parkchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Soundview/Castle Hill - LaGuardia Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Ozone Park - East Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Williamsburg - Jackson Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steinway - East Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steinway - Lenox Hill West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steinway - South Williamsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stuyvesant Heights - Bushwick North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stuyvesant Heights - Prospect Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sunnyside - East Harlem South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sunnyside - Long Island City/Hunters Point&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sunnyside - Upper East Side North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sunset Park West - Financial District North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University Heights/Morris Heights - Seaport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper East Side North - Kips Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Upper East Side North - Times Sq/Theatre District&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Van Cortlandt Village - Norwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights North - Claremont/Bathgate&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights North - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights North - Upper East Side South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South - Borough Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South - East Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South - JFK Airport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South - Midtown South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South - South Williamsburg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Heights South - Washington Heights South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Concourse - East Concourse/Concourse Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Concourse - Van Cortlandt Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Whitestone - Schuylerville/Edgewater Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (North Side) - Bushwick South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (North Side) - Flatiron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (North Side) - Long Island City/Queens Plaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (North Side) - Stuyvesant Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (South Side) - Bedford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (South Side) - Fort Greene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamsburg (South Side) - Old Astoria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Windsor Terrace - Dyker Heights&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodside - Alphabet City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodside - Crown Heights North&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodside - Fresh Meadows&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodside - Middle Village&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodside - Two Bridges/Seward Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yorkville West - Downtown Brooklyn/MetroTech&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yorkville West - Union Sq&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_7986008048627429384:nk]' palette='miller_stone_10_0' type='palette'>
            <map to='#4f6980'>
              <bucket>&quot;Bronx - Bronx&quot;</bucket>
            </map>
            <map to='#4f6980'>
              <bucket>&quot;Staten Island - Brooklyn&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Brooklyn - Queens&quot;</bucket>
            </map>
            <map to='#638b66'>
              <bucket>&quot;Brooklyn - Staten Island&quot;</bucket>
            </map>
            <map to='#7e756d'>
              <bucket>&quot;Brooklyn - Bronx&quot;</bucket>
            </map>
            <map to='#849db1'>
              <bucket>&quot;Brooklyn - Brooklyn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Staten Island - Staten Island&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Brooklyn - Manhattan&quot;</bucket>
            </map>
            <map to='#a2ceaa'>
              <bucket>&quot;Queens - Bronx&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Manhattan - EWR&quot;</bucket>
            </map>
            <map to='#b66353'>
              <bucket>&quot;Queens - Brooklyn&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Manhattan - Brooklyn&quot;</bucket>
            </map>
            <map to='#b9aa97'>
              <bucket>&quot;Queens - Queens&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Bronx - Queens&quot;</bucket>
            </map>
            <map to='#bfbb60'>
              <bucket>&quot;Manhattan - Bronx&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Brooklyn - EWR&quot;</bucket>
            </map>
            <map to='#d7ce9f'>
              <bucket>&quot;Queens - Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronx - Manhattan&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Manhattan - Manhattan&quot;</bucket>
            </map>
            <map to='#f47942'>
              <bucket>&quot;Queens - EWR&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Bronx - Brooklyn&quot;</bucket>
            </map>
            <map to='#fbb04e'>
              <bucket>&quot;Manhattan - Queens&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:DOBorough:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EWR&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Staten Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_ADE6ECF77F2444168E07C803792869CE'>
            <properties context=''>
              <relation connection='excel-direct.0kb7rbf1kttry31dpyhg50w1jnur' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:Y10001:no:A1:Y10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' name='lpep_pickup_datetime' ordinal='1' />
                  <column datatype='datetime' name='lpep_dropoff_datetime' ordinal='2' />
                  <column datatype='string' name='RatecodeID' ordinal='3' />
                  <column datatype='integer' name='PULocationID' ordinal='4' />
                  <column datatype='integer' name='DOLocationID' ordinal='5' />
                  <column datatype='string' name='passenger_count' ordinal='6' />
                  <column datatype='real' name='trip_distance' ordinal='7' />
                  <column datatype='real' name='fare_amount' ordinal='8' />
                  <column datatype='real' name='tip_amount' ordinal='9' />
                  <column datatype='string' name='payment_type' ordinal='10' />
                  <column datatype='string' name='trip_type' ordinal='11' />
                  <column datatype='string' name='PUBorough' ordinal='12' />
                  <column datatype='string' name='PUZone' ordinal='13' />
                  <column datatype='string' name='DOBorough' ordinal='14' />
                  <column datatype='string' name='DOZone' ordinal='15' />
                  <column datatype='string' name='time_zone' ordinal='16' />
                  <column datatype='string' name='day_type' ordinal='17' />
                  <column datatype='string' name='distance_category' ordinal='18' />
                  <column datatype='real' name='duration' ordinal='19' />
                  <column datatype='string' name='duration_category' ordinal='20' />
                  <column datatype='real' name='speed' ordinal='21' />
                  <column datatype='string' name='speed_category' ordinal='22' />
                  <column datatype='string' name='fare_category' ordinal='23' />
                  <column datatype='string' name='tip_category' ordinal='24' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average Fare Amount based Borough Route'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='count_borough_route' datatype='integer' name='[Calculation_349310455659053061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_7986008048627429384])' />
            </column>
            <column caption='rank_borough_route' datatype='boolean' name='[Calculation_349310455659233286]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_349310455659053061], &apos;desc&apos;) &lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='avg_fare_borough' datatype='real' name='[Calculation_7986008048626868231]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='({ FIXED [PUBorough], [DOBorough]: AVG([fare_amount])})' />
            </column>
            <column caption='borough_route' datatype='string' name='[Calculation_7986008048627429384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PUBorough] + &quot; - &quot; + [DOBorough]' />
            </column>
            <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='PU Borough' datatype='string' name='[PUBorough]' role='dimension' type='nominal' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7986008048627429384]' derivation='None' name='[none:Calculation_7986008048627429384:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7986008048626868231]' derivation='Sum' name='[sum:Calculation_7986008048626868231:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_349310455659233286]' derivation='User' name='[usr:Calculation_349310455659233286:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455659233286:nk]'>
            <groupfilter function='member' level='[usr:Calculation_349310455659233286:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455659233286:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' value='30' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>borough_route:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>avg_fare_borough:&#9;</run>
                <run bold='true'>$</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='265'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most popular route with highest average fare is: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]>$]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048626868231:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Brooklyn - Queens&quot;</value>
                    <value>41.334009111617362</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-58' y='178' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{56DFD42F-2775-4636-B17C-7458D620FC4A}' />
    </worksheet>
    <worksheet name='Average Fare Amount based on Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[fare_amount]' derivation='Avg' name='[avg:fare_amount:qk]' pivot='key' type='quantitative' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Hour' name='[hr:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
            <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='line-end' id='annotation_1' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour of Lpep Pickup Datetime:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Fare Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]>$]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='269'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Highest fare amount is peaked at: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]> am]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with Avg. Fare Amount: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>22.17408963585434</value>
                    <value>5</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-24' y='188' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='258'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Lowest fare amount is at: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]> pm]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with Avg. Fare Amount: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]>$]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>14.929664745940272</value>
                    <value>19</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-25' y='117' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{54937447-F0DD-4D7F-9CF9-1E267D5E9699}' />
    </worksheet>
    <worksheet name='Average Fare Amount based on Time and Borough'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
            <column-instance column='[fare_amount]' derivation='Avg' name='[avg:fare_amount:qk]' pivot='key' type='quantitative' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[DOBorough]' derivation='None' name='[none:DOBorough:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_zone]' derivation='None' name='[none:time_zone:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Time Zone' datatype='string' name='[time_zone]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' value='77' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' value='58' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>DO Borough:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Weekday of Lpep Pickup Datetime:	</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Fare Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]>$]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</run>
                <run>&gt;$</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4062983989715576' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontsize='8'>Most highest fare amount is EWR by borough on evening</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>And fare amount for every borough in time is different</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='131.32065789473683'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.644444'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Brooklyn&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='283.2406346749226'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.866667'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Staten Island&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{066726BF-A102-4848-98F6-0877DBC6E356}' />
    </worksheet>
    <worksheet name='Average Fare Amount based on Zone Route'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='count_zone_route' datatype='integer' name='[Calculation_349310455660998663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_7986008048629805067])' />
            </column>
            <column caption='rank_zone_route' datatype='boolean' name='[Calculation_349310455661096968]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_349310455660998663], &apos;desc&apos;) &lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='avg_fare_zone' datatype='real' name='[Calculation_7986008048629678090]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='({ FIXED [PUZone], [DOZone]: AVG([fare_amount])})' />
            </column>
            <column caption='zone_route' datatype='string' name='[Calculation_7986008048629805067]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PUZone] + &quot; - &quot; + [DOZone]' />
            </column>
            <column caption='DO Zone' datatype='string' name='[DOZone]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='PU Zone' datatype='string' name='[PUZone]' role='dimension' type='nominal' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7986008048629805067]' derivation='None' name='[none:Calculation_7986008048629805067:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7986008048629678090]' derivation='Sum' name='[sum:Calculation_7986008048629678090:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_349310455661096968]' derivation='User' name='[usr:Calculation_349310455661096968:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661096968:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_349310455661096968:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661096968:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' value='25' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>zone_route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Route (Sheet12):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>avg_fare_zone:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:avg_fare (Sheet12):qk]>]]></run>
                <run bold='true'>$</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='232'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most popular route  with highest average fare is  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]>$]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;East Harlem North - Upper West Side North&quot;</value>
                    <value>16.191661849710982</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-10' y='167' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9F5BD762-520B-4DE0-BA9F-2A3DDB101CA7}' />
    </worksheet>
    <worksheet name='Average Tip Amount based Borough Route'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='count_zone' datatype='integer' name='[Calculation_349310455665676303]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([DOZone])' />
            </column>
            <column caption='rank_zone' datatype='boolean' name='[Calculation_349310455665770512]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_349310455665676303], &apos;desc&apos;) &lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='borough_route' datatype='string' name='[Calculation_7986008048627429384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PUBorough] + &quot; - &quot; + [DOBorough]' />
            </column>
            <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
            <column caption='DO Zone' datatype='string' name='[DOZone]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='PU Borough' datatype='string' name='[PUBorough]' role='dimension' type='nominal' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7986008048627429384]' derivation='None' name='[none:Calculation_7986008048627429384:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_349310455665770512]' derivation='User' name='[usr:Calculation_349310455665770512:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455665770512:nk]'>
            <groupfilter function='member' level='[usr:Calculation_349310455665770512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455665770512:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' value='28' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
              <lod column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>borough_route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Tip Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>$]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='299'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most popular route with highest average tip amount is: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>$]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>6.7758108108108095</value>
                    <value>&quot;Manhattan - Queens&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-65' y='163' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{7E667933-F815-4B71-9C3C-3D4959C6157A}' />
    </worksheet>
    <worksheet name='Average Tip Amount based on Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='tip_amount_exist' datatype='boolean' name='[Calculation_7986008048662089743]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tip_amount] &gt; 0' />
            </column>
            <column-instance column='[fare_amount]' derivation='Avg' name='[avg:fare_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Hour' name='[hr:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
            <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_7986008048662089743]' derivation='None' name='[none:Calculation_7986008048662089743:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]'>
            <groupfilter function='member' level='[none:Calculation_7986008048662089743:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='line-end' id='annotation_1' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour of Lpep Pickup Datetime:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Fare Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>]]></run>
                <run bold='true'>$</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>]]></run>
                <run>$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='234'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Highest average tip amount is at: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]>am]]></run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with </run>
              <run fontcolor='#787878' fontsize='8'>Avg. Tip Amount: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>$]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>23.502857142857142</value>
                    <value>5.2001098901098901</value>
                    <value>5</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-53' y='195' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='295'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Lowest average tip amount is at: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]>am]]></run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with </run>
              <run fontcolor='#787878' fontsize='8'>Avg. Tip Amount: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>16.418335509138384</value>
                    <value>3.4095953002610955</value>
                    <value>7</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='241' y='120' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A27D6118-1729-4EC9-9953-7EB95B7B7E23}' />
    </worksheet>
    <worksheet name='Average Tip Amount based on Zone Dropoff'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='top_10' datatype='boolean' name='[Calculation_7986008048628592649]' role='measure' type='nominal'>
              <calculation class='tableau' formula='index()&lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='DO Zone' datatype='string' name='[DOZone]' role='dimension' type='nominal' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DOZone]' derivation='None' name='[none:DOZone:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7986008048628592649]' derivation='User' name='[usr:Calculation_7986008048628592649:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]'>
            <groupfilter function='member' level='[usr:Calculation_7986008048628592649:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]' value='27' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='229'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most highest average tip amount is on </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with Avg. Tip Amount: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>14.050000000000001</value>
                    <value>&quot;Breezy Point/Fort Tilden/Riis Beach&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-18' y='158' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{E7843CA0-C302-4FF0-9F98-3C4B08757DB6}' />
    </worksheet>
    <worksheet name='Average Tip Amount based on Zone Route'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='count_zone_route' datatype='integer' name='[Calculation_349310455660998663]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Calculation_7986008048629805067])' />
            </column>
            <column caption='rank_zone_route' datatype='boolean' name='[Calculation_349310455661096968]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_349310455660998663], &apos;desc&apos;) &lt;=10'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='avg_fare_zone' datatype='real' name='[Calculation_7986008048629678090]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='({ FIXED [PUZone], [DOZone]: AVG([fare_amount])})' />
            </column>
            <column caption='zone_route' datatype='string' name='[Calculation_7986008048629805067]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PUZone] + &quot; - &quot; + [DOZone]' />
            </column>
            <column caption='tip_amount_exist' datatype='boolean' name='[Calculation_7986008048662089743]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tip_amount] &gt; 0' />
            </column>
            <column caption='DO Zone' datatype='string' name='[DOZone]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='PU Zone' datatype='string' name='[PUZone]' role='dimension' type='nominal' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7986008048629805067]' derivation='None' name='[none:Calculation_7986008048629805067:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7986008048662089743]' derivation='None' name='[none:Calculation_7986008048662089743:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7986008048629678090]' derivation='Sum' name='[sum:Calculation_7986008048629678090:qk]' pivot='key' type='quantitative' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_349310455661096968]' derivation='User' name='[usr:Calculation_349310455661096968:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]'>
            <groupfilter function='member' level='[none:Calculation_7986008048662089743:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661096968:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_349310455661096968:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661096968:nk:1]</column>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]' value='51' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' value='28' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' value='176' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
              <lod column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>zone_route:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Tip Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>$]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>avg_fare_zone:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]>$]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='257'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most popular route with highest average tip amount is : </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with : </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>$]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:Calculation_7986008048629678090:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3.8101428571428575</value>
                    <value>&quot;East Harlem North - Upper West Side North&quot;</value>
                    <value>16.191661849710982</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-34' y='176' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{FE910A9E-5F58-4CD0-87D4-84F666FB9CA8}' />
    </worksheet>
    <worksheet name='Passenger Behaviour by Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[distance_category]' derivation='Count' name='[cnt:distance_category:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Distance Category' datatype='string' name='[distance_category]' role='dimension' type='nominal' />
            <column-instance column='[distance_category]' derivation='None' name='[none:distance_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[distance_category]' derivation='Count' name='[pcto:cnt:distance_category:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;2 miles&quot;</bucket>
              <bucket>&quot;3-6 miles&quot;</bucket>
              <bucket>&quot;7-10 miles&quot;</bucket>
              <bucket>&quot;&gt;10 miles&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='464' />
            <format attr='cell-h' value='464' />
            <format attr='cell' value='58' />
            <format attr='cell-q' value='290' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:distance_category:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:distance_category:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='335'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most passenger&apos;s distance was: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:distance_category:qk]> ]]></run>
              <run fontsize='8'>proportion</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:distance_category:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:distance_category:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>29984</value>
                    <value>&quot;&lt;2 miles&quot;</value>
                    <value>0.49293088709147104</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='8' y='131' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3D5E1347-3407-4F83-B89B-7C8377AEEF29}' />
    </worksheet>
    <worksheet name='Passenger Behaviour on Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[duration_category]' derivation='Count' name='[cnt:duration_category:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Category' datatype='string' name='[duration_category]' role='dimension' type='nominal' />
            <column-instance column='[duration_category]' derivation='None' name='[none:duration_category:nk]' pivot='key' type='nominal' />
            <column-instance column='[duration_category]' derivation='Count' name='[pcto:cnt:duration_category:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' direction='DESC' using='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:duration_category:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='400' />
            <format attr='cell-h' value='400' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:duration_category:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:duration_category:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1754143238067627' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='157'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Mostly Passenger taked  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]> during the trips]]></run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with</run>
              <run fontcolor='#787878' fontsize='8'>Æ  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:duration_category:qk]> ]]></run>
              <run fontsize='8'>proportion</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:duration_category:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:duration_category:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>36588</value>
                    <value>&quot;5-15 minutes&quot;</value>
                    <value>0.60149930952850661</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='90' y='-108' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{72938093-0108-4007-84CA-69C94C9F50BB}' />
    </worksheet>
    <worksheet name='Passenger Behaviour on Total Passenger'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[passenger_count]' derivation='Count' name='[cnt:passenger_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[passenger_count]' derivation='None' name='[none:passenger_count:nk]' pivot='key' type='nominal' />
            <column caption='Passenger Count' datatype='string' name='[passenger_count]' role='dimension' type='nominal' />
            <column-instance column='[passenger_count]' derivation='Count' name='[pcto:cnt:passenger_count:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]' direction='DESC' using='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:passenger_count:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='528' />
            <format attr='cell-h' value='528' />
            <format attr='cell' value='66' />
            <format attr='cell-q' value='330' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:passenger_count:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:passenger_count:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.087458610534668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='86.0233' text-width='116'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Mostly  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]> passenger was on the trip]]></run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:passenger_count:qk]>]]></run>
              <run fontsize='8'> proportion</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:passenger_count:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:passenger_count:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>52451</value>
                    <value>&quot;1.0&quot;</value>
                    <value>0.86228381666337872</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-224' y='-4' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{956DE82A-FE78-4D59-AFC4-965AFFC25699}' />
    </worksheet>
    <worksheet name='Passenger Preference on Payment Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[payment_type]' derivation='Count' name='[cnt:payment_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[payment_type]' derivation='None' name='[none:payment_type:nk]' pivot='key' type='nominal' />
            <column caption='Payment Type' datatype='string' name='[payment_type]' role='dimension' type='nominal' />
            <column-instance column='[payment_type]' derivation='Count' name='[pcto:cnt:payment_type:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='496' />
            <format attr='cell-h' value='496' />
            <format attr='cell' value='62' />
            <format attr='cell-q' value='310' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:payment_type:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:payment_type:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:payment_type:qk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:payment_type:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='62.9682' text-width='136'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Mostly passenger pay with: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:payment_type:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with </run>
              <run fontcolor='#787878' fontsize='8'>Æ </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:payment_type:qk]> ]]></run>
              <run fontsize='8'>proportion</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:payment_type:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:payment_type:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:payment_type:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>40318</value>
                    <value>&quot;Credit card&quot;</value>
                    <value>0.66281975406062998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-107' y='-105' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{48A5B3FD-9B77-447E-87DA-595C0ECB5D9F}' />
    </worksheet>
    <worksheet name='Passenger Preference on RateCode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='Ratecode ID' datatype='string' name='[RatecodeID]' role='dimension' type='nominal' />
            <column-instance column='[RatecodeID]' derivation='Count' name='[cnt:RatecodeID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatecodeID]' derivation='None' name='[none:RatecodeID:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatecodeID]' derivation='Count' name='[pcto:cnt:RatecodeID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='560' />
            <format attr='cell-h' value='560' />
            <format attr='cell' value='70' />
            <format attr='cell-q' value='350' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_0' value='arrow' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:RatecodeID:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:RatecodeID:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='115.966' text-width='132'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Mostly passenger used: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with</run>
              <run fontcolor='#787878' fontsize='8'> : </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:RatecodeID:qk]> ]]></run>
              <run fontsize='8'>proportion</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:RatecodeID:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:RatecodeID:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>60003</value>
                    <value>&quot;Standard rate&quot;</value>
                    <value>0.98643716709410145</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-185' y='-119' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{11399D1F-BD73-4F0F-8F45-CB0ADF61C2A6}' />
    </worksheet>
    <worksheet name='Passenger Preference on Trip Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[trip_type]' derivation='Count' name='[cnt:trip_type:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_type]' derivation='None' name='[none:trip_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_type]' derivation='Count' name='[pcto:cnt:trip_type:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Trip Type' datatype='string' name='[trip_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='368' />
            <format attr='cell-h' value='368' />
            <format attr='cell' value='46' />
            <format attr='cell-q' value='230' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:trip_type:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:trip_type:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='76.4853' text-width='130'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Mostly passenger used </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]> ]]></run>
              <run fontsize='8'>to booked taxi</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>with</run>
              <run fontcolor='#787878' fontsize='8'> : </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:trip_type:qk]> ]]></run>
              <run fontsize='8'>proportion</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields />
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:trip_type:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:trip_type:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>60255</value>
                    <value>&quot;Street-hail&quot;</value>
                    <value>0.99057999605444857</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='187' y='-64' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{EE63B6E7-000D-4831-8555-888A393BE2A2}' />
    </worksheet>
    <worksheet name='Sheet 34'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{96A32712-D21E-4A4E-A1C6-7B4C21D8D873}' />
    </worksheet>
    <worksheet name='TIp Correlation with Trip Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[trip_type]' derivation='None' name='[none:trip_type:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
            <column caption='Trip Type' datatype='string' name='[trip_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' value='371' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_0' value='0' />
            <format attr='line-visibility' id='annotation_0' value='off' />
            <format attr='line-end' id='annotation_0' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.51574587821960449' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 1.9047960809588414e-05</run>
              <run>Æ&#10;</run>
              <run fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontcolor='#000000' fontname='Consolas' fontsize='8'>average of the tip value on street-hail is smaller than the tip on dispatch</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Street-hail&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.927408295157067'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='0' y='163' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{602413BB-CD71-4D60-A78F-246F05E1331E}' />
    </worksheet>
    <worksheet name='Tip Correlation with Borough'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='count_tip_borough' datatype='integer' name='[Calculation_2215208076859199488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [DOBorough] :COUNT([tip_amount])}' />
            </column>
            <column caption='borough_more_100' datatype='boolean' name='[Calculation_2215208076859568129]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_2215208076859199488] &gt; 100' />
            </column>
            <column caption='tip_amount_exist' datatype='boolean' name='[Calculation_7986008048662089743]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tip_amount] &gt; 0' />
            </column>
            <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2215208076859568129]' derivation='None' name='[none:Calculation_2215208076859568129:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_7986008048662089743]' derivation='None' name='[none:Calculation_7986008048662089743:nk]' pivot='key' type='nominal' />
            <column-instance column='[DOBorough]' derivation='None' name='[none:DOBorough:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_2215208076859568129:nk]'>
            <groupfilter function='member' level='[none:Calculation_2215208076859568129:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]'>
            <groupfilter function='member' level='[none:Calculation_7986008048662089743:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</column>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_2215208076859568129:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='6.5043536727272766' min='-2.1681178909090923' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' value='116' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.96651935577392578' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 0.021557444780813263</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run fontalignment='0'>Æ&#10;&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>location can affect the tip_amount given by passengers</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.788148'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Queens&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.51288810322580636'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.176296'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Bronx&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-1.8883607436950163'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D85482E3-68E7-4DC6-BB8F-687139210A04}' />
    </worksheet>
    <worksheet name='Tip Correlation with Day Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Day Type' datatype='string' name='[day_type]' role='dimension' type='nominal' />
            <column-instance column='[day_type]' derivation='None' name='[none:day_type:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='3.6220491352461699' min='-1.2073497117487233' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' value='232' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.77961325645446777' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 0.04828348618015329</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>average of the tip value on weekdays is smaller than the tip on weekends</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.739677'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Weekend&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.9980256887243582'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.245961'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Weekdays&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.29844599616260603'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{ECE9EF85-0F35-4CFD-8175-C28067FF88A9}' />
    </worksheet>
    <worksheet name='Tip Correlation with Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Distance Category' datatype='string' name='[distance_category]' role='dimension' type='nominal' />
            <column-instance column='[distance_category]' derivation='None' name='[none:distance_category:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='10.243083441348007' min='-3.4143611471160025' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' value='141' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 5.494884208977325e-34</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run fontalignment='0'>Æ&#10;&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Distance is affect the tip_amount given by passengers</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.478109'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;7-10 miles&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='9.2505365962561452'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.803853'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;&lt;2 miles&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.1215417206740046'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{83BD039B-ED96-4936-BF3E-C1D71ECBFF04}' />
    </worksheet>
    <worksheet name='Tip Correlation with Duration'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Category' datatype='string' name='[duration_category]' role='dimension' type='nominal' />
            <column-instance column='[duration_category]' derivation='None' name='[none:duration_category:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='7.4891408815903135' min='-2.4963802938634378' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.92254143953323364' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 1.2142385125411633e-32</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run fontalignment='0'>Æ&#10;&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Duration is affect the tip_amount given by passengers</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.728868'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;15-30 minutes&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6.9392136284493828'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.566188'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;&lt;5 minutes&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3.7264807285207837'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{C8E5DC92-EAD0-4FC3-9689-AAFE7643189C}' />
    </worksheet>
    <worksheet name='Tip Correlation with Fare'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column caption='Fare Category' datatype='string' name='[fare_category]' role='dimension' type='nominal' />
            <column-instance column='[fare_category]' derivation='None' name='[none:fare_category:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='12.433758749999994' min='-4.1445862499999979' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]' value='170' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 1.3155651048555217e-37</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run fontalignment='0'>Æ&#10;&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Fare Amount is affect the tip_amount given by passengers</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.944785'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;41-60$&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='11.667130079479763'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.760736'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;&lt;20$&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5.7736721748554878'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{BA364046-64D7-43E3-94D4-8C58A4247C86}' />
    </worksheet>
    <worksheet name='Tip Correlation with Rate code'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='Ratecode ID' datatype='string' name='[RatecodeID]' role='dimension' type='nominal' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatecodeID]' derivation='None' name='[none:RatecodeID:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='19.498707236842098' min='-6.4995690789473661' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' value='192' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.90055251121520996' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 0.0017915949414859767</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Tolak H0</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Rate code type is affect the tip_amount given by passengers</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.0773109'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Negotiated fare&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='16.636511679140504'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.623529'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Standard rate&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6.3803109307098014'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{2A9CF9FC-D869-4FE4-AAA4-040FDF5F3377}' />
    </worksheet>
    <worksheet name='Tip Correlation with Time Zone'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_zone]' derivation='None' name='[none:time_zone:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Time Zone' datatype='string' name='[time_zone]' role='dimension' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' field-type='quantitative' max='3.6833823385784301' min='-1.2277941128594767' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' value='153' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</run>
                <run>&gt;$</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>p-Value 0.6874203341208204</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>Terima H0</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='8'>time zone is not affected the tip_amount given by passengers</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.348083'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Evening&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.28947991278800678'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.716814'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Afternoon&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-0.92167742347445802'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{AE349A26-B091-49D5-941A-64B83E2282E5}' />
    </worksheet>
    <worksheet name='Total Fare Amount Distribution based on Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='count_borough' datatype='integer' name='[Calculation_349310455661703178]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([DOBorough])' />
            </column>
            <column caption='rank_borough' datatype='boolean' name='[Calculation_349310455661813771]' role='measure' type='nominal'>
              <calculation class='tableau' formula='RANK([Calculation_349310455661703178], &apos;desc&apos;) &lt;=5'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
            <column caption='Fare Amount' datatype='real' name='[fare_amount]' role='measure' type='quantitative' />
            <column-instance column='[DOBorough]' derivation='None' name='[none:DOBorough:nk]' pivot='key' type='nominal' />
            <column-instance column='[fare_amount]' derivation='Sum' name='[sum:fare_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_349310455661813771]' derivation='User' name='[usr:Calculation_349310455661813771:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661813771:nk]'>
            <groupfilter function='member' level='[usr:Calculation_349310455661813771:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661813771:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]' num-steps='20' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]' />
              <size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>do_borough_zone:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Fare Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]>$]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]</run>
                <run>&gt;$&#10;</run>
                <run><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DB991F3D-860A-4753-A719-05A0E0D8B510}' />
    </worksheet>
    <worksheet name='Total Tip Amount Distribution based on Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='tip_amount_exist' datatype='boolean' name='[Calculation_7986008048662089743]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[tip_amount] &gt; 0' />
            </column>
            <column caption='DO Borough' datatype='string' name='[DOBorough]' role='dimension' type='nominal' />
            <column-instance column='[tip_amount]' derivation='Avg' name='[avg:tip_amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7986008048662089743]' derivation='None' name='[none:Calculation_7986008048662089743:nk]' pivot='key' type='nominal' />
            <column-instance column='[DOBorough]' derivation='None' name='[none:DOBorough:nk]' pivot='key' type='nominal' />
            <column caption='Tip Amount' datatype='real' name='[tip_amount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]'>
            <groupfilter function='member' level='[none:Calculation_7986008048662089743:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
              <size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>DO Borough:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Tip Amount:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>]]></run>
                <run bold='true'>$</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]>]]></run>
                <run>$</run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7822D7E0-AE70-465D-A667-7452563D2490}' />
    </worksheet>
    <worksheet name='Trip Distribution Based on Borough'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column aggregation='CountD' caption='PU Borough' datatype='string' name='[PUBorough]' role='dimension' type='nominal' />
            <column-instance column='[PUBorough]' derivation='Count' name='[cnt:PUBorough:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PUBorough]' derivation='None' name='[none:PUBorough:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' value='83' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]' value='146' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' num-steps='5' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' value='Trip Frequency'>
              <formatted-text>
                <run>Trip Frequency</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='302'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most crowded trips is came from  </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>With: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>36389</value>
                    <value>&quot;Manhattan&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='212' y='42' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{4880727B-0D4B-410F-A64A-3BB07E56D826}' />
    </worksheet>
    <worksheet name='Trip Distribution Based on Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column caption='pu_borough_zone' datatype='string' name='[Calculation_7986008048658251789]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[PUBorough] + &quot; - &quot; + [PUZone]' />
            </column>
            <column aggregation='CountD' caption='PU Borough' datatype='string' name='[PUBorough]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='PU Zone' datatype='string' name='[PUZone]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_7986008048658251789]' derivation='Count' name='[cnt:Calculation_7986008048658251789:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7986008048658251789]' derivation='None' name='[none:Calculation_7986008048658251789:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:Calculation_7986008048658251789:qk]' num-steps='34' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:Calculation_7986008048658251789:qk]' value='Trip Frequency&#10;'>
              <formatted-text>
                <run>Trip Frequency&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:Calculation_7986008048658251789:qk]' />
              <size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:Calculation_7986008048658251789:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:Calculation_7986008048658251789:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048658251789:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{09447004-4EB3-4433-AC24-EDF8EE528D01}' />
    </worksheet>
    <worksheet name='Trip Distribution Based on Zone'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column aggregation='CountD' caption='PU Zone' datatype='string' name='[PUZone]' role='dimension' type='nominal' />
            <column-instance column='[PUZone]' derivation='Count' name='[cnt:PUZone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PUZone]' derivation='None' name='[none:PUZone:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUZone:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]' num-steps='50' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#447e6d</color>
                <color>#84ab9f</color>
                <color>#d9d9d9</color>
                <color>#f4bc4e</color>
                <color>#c26b51</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUZone:nk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Most crowded trips is came from: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUZone:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUZone:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUZone:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>12592</value>
                    <value>&quot;East Harlem North&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-25' y='139' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{82C8634F-3F9E-42F0-A951-E05BBEC49DEF}' />
    </worksheet>
    <worksheet name='Trip Distribution Per Date'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[lpep_pickup_datetime]' derivation='Count' name='[cnt:lpep_pickup_datetime:qk]' pivot='key' type='quantitative' />
            <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Day-Trunc' name='[tdy:lpep_pickup_datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-end' id='annotation_1' value='arrow' />
            <format attr='line-end' id='annotation_0' value='arrow' />
            <format attr='line-end-size' id='annotation_0' value='small' />
          </style-rule>
        </style>
        <panes>
          <pane id='16' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='9' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='274'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Highest Trip Frequency in January 2023 was happened on: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with : </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>2379</value>
                    <value>#2023-01-25 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='41' y='198' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='355'>
            <formatted-text>
              <run fontcolor='#787878' fontsize='8'>Lowest Trip Frequency in January 2023 was happened on: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878' fontsize='8'>with: </run>
              <run bold='true' fontsize='8'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</field>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1318</value>
                    <value>#2023-01-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='142' y='92' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{CACF5484-5003-4373-800D-1B0FD029F842}' />
    </worksheet>
    <worksheet name='Trip Distribution by Day and Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[lpep_pickup_datetime]' derivation='Count' name='[cnt:lpep_pickup_datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Hour' name='[hr:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
            <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Weekday' name='[wd:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' num-steps='2' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='286'>
            <formatted-text>
              <run fontsize='8'>Most Trips Frequency was happened from</run>
              <run bold='true' fontsize='8'> 7am-20pm </run>
              <run fontsize='8'>every days</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>While th</run>
              <run bold='true' fontsize='8'>e weekends has less frequency than weekdays</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.700815'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>10</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='106.609819121447'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='188' y='-25' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{BCD6AEE0-EEF7-421E-8B44-CE1106701A26}' />
    </worksheet>
    <worksheet name='Trip Distribution by Hour and Borough'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column aggregation='CountD' caption='PU Borough' datatype='string' name='[PUBorough]' role='dimension' type='nominal' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Count' name='[cnt:lpep_pickup_datetime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Hour' name='[hr:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
            <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
            <column-instance column='[PUBorough]' derivation='None' name='[none:PUBorough:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</rows>
        <cols>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run fontsize='8'>Most crowded hours for </run>
              <run bold='true' fontsize='8'>Manhattan, Queens, and Brooklyn</run>
              <run>Æ&#10;</run>
              <run fontsize='8'>was from </run>
              <run bold='true' fontsize='8'>6am-7pm</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.536216'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>8</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1805.8267477203644'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.152432'>
                  <node-reference>
                    <fields>
                      <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[hr:lpep_pickup_datetime:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>15</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1320.4741641337387'>
                  <node-reference>
                    <axis>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9281F8E0-F199-44D3-B112-C8A70D403144}' />
    </worksheet>
    <worksheet name='Trip Proportion by Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[lpep_pickup_datetime]' derivation='Count' name='[cnt:lpep_pickup_datetime:qk]' pivot='key' type='quantitative' />
            <column caption='Lpep Pickup Datetime' datatype='datetime' name='[lpep_pickup_datetime]' role='dimension' type='ordinal' />
            <column-instance column='[lpep_pickup_datetime]' derivation='Count' name='[pcto:cnt:lpep_pickup_datetime:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[lpep_pickup_datetime]' derivation='Weekday' name='[wd:lpep_pickup_datetime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' direction='ASC'>
            <dictionary>
              <bucket>3</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>2</bucket>
              <bucket>4</bucket>
              <bucket>7</bucket>
              <bucket>1</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='368' />
            <format attr='cell-h' value='368' />
            <format attr='cell' value='46' />
            <format attr='cell-q' value='230' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:lpep_pickup_datetime:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5305AC03-DB05-45B4-913A-FF18D9C2BF52}' />
    </worksheet>
    <worksheet name='Trip Proportion by Time Zone'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[time_zone]' derivation='Count' name='[cnt:time_zone:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time_zone]' derivation='None' name='[none:time_zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[time_zone]' derivation='Count' name='[pcto:cnt:time_zone:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='CountD' caption='Time Zone' datatype='string' name='[time_zone]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Afternoon&quot;</bucket>
              <bucket>&quot;Evening&quot;</bucket>
              <bucket>&quot;Morning&quot;</bucket>
              <bucket>&quot;Late Night&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='336' />
            <format attr='cell-h' value='336' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:time_zone:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:time_zone:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1534254550933838' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B53FB79E-1E16-4962-ADA8-82960E15E233}' />
    </worksheet>
    <worksheet name='Trip Proportion by Week Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (NYC_Trip_Data_Clean)' name='federated.1gpn36q07c5zg515oigyf1ljqwhq' />
          </datasources>
          <datasource-dependencies datasource='federated.1gpn36q07c5zg515oigyf1ljqwhq'>
            <column-instance column='[day_type]' derivation='Count' name='[cnt:day_type:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Day Type' datatype='string' name='[day_type]' role='dimension' type='nominal' />
            <column-instance column='[day_type]' derivation='None' name='[none:day_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[day_type]' derivation='Count' name='[pcto:cnt:day_type:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Weekdays&quot;</bucket>
              <bucket>&quot;Weekend&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='336' />
            <format attr='cell-h' value='336' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' />
              <wedge-size column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:day_type:qk]' />
              <text column='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:day_type:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[pcto:cnt:day_type:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.087458610534668' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{60D8DC42-FFF3-40F4-A1E2-66061D418A8A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Fare Revenue Analysis'>
      <style />
      <size maxheight='960' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='46849' id='58' type-v2='empty' w='51692' x='48246' y='53389'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#b9aa97' />
          </zone-style>
        </zone>
        <zone h='47206' id='57' type-v2='empty' w='47200' x='800' y='53151'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#b66353' />
          </zone-style>
        </zone>
        <zone h='45065' id='56' type-v2='empty' w='51692' x='48246' y='7610'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#4f6980' />
          </zone-style>
        </zone>
        <zone h='44946' id='55' type-v2='empty' w='47200' x='800' y='7491'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#638b66' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='36615' y='-119'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Fare Revenue Analysis</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='35' type-v2='text' w='32308' x='1662' y='7253'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Fare Amount by Borough Route</run>
          </formatted-text>
        </zone>
        <zone h='38882' id='36' name='Average Fare Amount based Borough Route' show-title='false' w='46092' x='1231' y='12485' />
        <zone h='39001' id='37' name='Average Fare Amount based on Zone Route' show-title='false' w='50215' x='49231' y='12366' />
        <zone h='41855' id='38' name='Average Fare Amount based on Time and Borough' show-title='false' w='45908' x='1354' y='57551' />
        <zone h='14982' id='39' name='Average Fare Amount based on Time and Borough' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type-v2='color' w='8615' x='37108' y='71938' />
        <zone h='41379' id='40' name='Average Fare Amount based on Time' show-title='false' w='50277' x='48800' y='56599' />
        <zone h='5707' id='41' name='Average Fare Amount based on Time' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' show-title='false' type-v2='color' w='8615' x='54277' y='90012' />
        <zone forceUpdate='true' h='5351' id='42' type-v2='text' w='32308' x='49231' y='7015'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Fare Amount by Zone Route</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='43' type-v2='text' w='32308' x='1108' y='52556'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Fare Amount by Borough and  Time</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='44' type-v2='text' w='32308' x='48677' y='52200'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Fare Amount by Time</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='106' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='105' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='36615' y='-119'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Fare Revenue Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='42' type-v2='text' w='32308' x='49231' y='7015'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Fare Amount by Zone Route</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='35' type-v2='text' w='32308' x='1662' y='7253'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Fare Amount by Borough Route</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39001' id='37' is-fixed='true' name='Average Fare Amount based on Zone Route' show-title='false' w='50215' x='49231' y='12366'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38882' id='36' is-fixed='true' name='Average Fare Amount based Borough Route' show-title='false' w='46092' x='1231' y='12485'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='44' type-v2='text' w='32308' x='48677' y='52200'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Fare Amount by Time</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='43' type-v2='text' w='32308' x='1108' y='52556'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Fare Amount by Borough and  Time</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41379' id='40' is-fixed='true' name='Average Fare Amount based on Time' show-title='false' w='50277' x='48800' y='56599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5707' id='41' name='Average Fare Amount based on Time' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' show-title='false' type-v2='color' w='8615' x='54277' y='90012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41855' id='38' is-fixed='true' name='Average Fare Amount based on Time and Borough' show-title='false' w='45908' x='1354' y='57551'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14982' id='39' name='Average Fare Amount based on Time and Borough' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type-v2='color' w='8615' x='37108' y='71938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CDBDA32D-2BDF-4B8C-94A4-5444B37316B9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Passenger Behaviour'>
      <style />
      <size maxheight='1260' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='44590' id='39' type-v2='empty' w='98031' x='738' y='54102'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#fbb04e' />
          </zone-style>
        </zone>
        <zone h='42687' id='38' type-v2='empty' w='98031' x='862' y='10345'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#a2ceaa' />
          </zone-style>
        </zone>
        <zone h='39715' id='1' name='Passenger Behaviour by Distance' show-title='false' w='32369' x='1846' y='12128' />
        <zone h='39834' id='2' name='Passenger Behaviour on Total Passenger' show-title='false' w='29846' x='34585' y='12010' />
        <zone h='39834' id='3' name='Passenger Behaviour on Duration' show-title='false' w='33231' x='65046' y='11891' />
        <zone h='39952' id='4' name='Passenger Preference on RateCode' show-title='false' w='32062' x='1723' y='56480' />
        <zone h='40190' id='5' name='Passenger Preference on Payment Type' show-title='false' w='30769' x='34215' y='56599' />
        <zone h='40428' id='6' name='Passenger Preference on Trip Type' show-title='false' w='32800' x='65538' y='56480' />
        <zone forceUpdate='true' h='7159' id='9' type-v2='text' w='28990' x='37968' y='1155'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Passenger Analysis</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7159' id='12' type-v2='text' w='26746' x='2307' y='10508'>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Behaviour by Distance</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7159' id='13' type-v2='text' w='32232' x='35037' y='10046'>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Behaviour by Sum of Passenger</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7159' id='14' type-v2='text' w='26746' x='68828' y='10046'>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Behaviour by Duration</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7134' id='15' type-v2='text' w='26769' x='1723' y='54935'>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Preference by Rate Code</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7134' id='16' type-v2='text' w='26708' x='34769' y='54340'>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Preference by Payment Type</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7134' id='17' type-v2='text' w='26769' x='66031' y='54578'>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Preference by Trip Type</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2250' minheight='2250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='91' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='90' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='7159' id='9' type-v2='text' w='28990' x='37968' y='1155'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Passenger Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7159' id='13' type-v2='text' w='32232' x='35037' y='10046'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Behaviour by Sum of Passenger</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7159' id='14' type-v2='text' w='26746' x='68828' y='10046'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Behaviour by Duration</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7159' id='12' type-v2='text' w='26746' x='2307' y='10508'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Behaviour by Distance</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39834' id='3' is-fixed='true' name='Passenger Behaviour on Duration' show-title='false' w='33231' x='65046' y='11891'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39834' id='2' is-fixed='true' name='Passenger Behaviour on Total Passenger' show-title='false' w='29846' x='34585' y='12010'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39715' id='1' is-fixed='true' name='Passenger Behaviour by Distance' show-title='false' w='32369' x='1846' y='12128'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7134' id='16' type-v2='text' w='26708' x='34769' y='54340'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Preference by Payment Type</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7134' id='17' type-v2='text' w='26769' x='66031' y='54578'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Preference by Trip Type</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7134' id='15' type-v2='text' w='26769' x='1723' y='54935'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Medium' fontsize='11'>Passenger Preference by Rate Code</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39952' id='4' is-fixed='true' name='Passenger Preference on RateCode' show-title='false' w='32062' x='1723' y='56480'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40428' id='6' is-fixed='true' name='Passenger Preference on Trip Type' show-title='false' w='32800' x='65538' y='56480'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40190' id='5' is-fixed='true' name='Passenger Preference on Payment Type' show-title='false' w='30769' x='34215' y='56599'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B936A5BA-77DE-47DD-8FF4-D00C323D3C33}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>NYC TLC Trip Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1064' maxwidth='1650' minheight='1064' minwidth='1650' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98496' id='1' param='vert' removable='false' type-v2='layout-flow' w='99030' x='485' y='752'>
            <zone h='4699' id='3' type-v2='title' w='99030' x='485' y='752' />
            <zone h='9492' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99030' x='485' y='5451' />
            <zone h='84305' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99030' x='485' y='14943'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Trip Distribution By Time' captured-sheet='Trip by Time' id='1' />
                  <story-point caption='Trip Distribution by Location' captured-sheet='Trip by Location' id='2'>
                    <capturedDeltas>
                      <worksheet name='Trip Distribution Based on Zone'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Trip Distribution Conclusion' captured-sheet='' id='9' />
                  <story-point caption='Passenger Analysis' captured-sheet='Passenger Behaviour' id='3' />
                  <story-point caption='Passenger Conclusion' captured-sheet='' id='10' />
                  <story-point caption='Fare Revenue Analysis' captured-sheet='Fare Revenue Analysis' id='4' />
                  <story-point caption='Fare Conclusion' captured-sheet='' id='11' />
                  <story-point caption='Tips Revenue Analysis' captured-sheet='Tips Revenue Analysis' id='5' />
                  <story-point caption='Tips Correlation' captured-sheet='Tips Correlation Analysis' id='6'>
                    <capturedDeltas>
                      <worksheet name='Tip Correlation with Fare'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Tips Correlation 2' captured-sheet='Tips Correlation Analysis (2)' id='7' />
                  <story-point caption='Tips Conclusion' captured-sheet='' id='13' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='10714' hidden='true' id='6' story-point-id='9' type-v2='text' w='93152' x='2242' y='17763'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Bold'>Understanding trip distribution based on time and location to Optimize taxi fleet distribution</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='56015' hidden='true' id='7' story-point-id='9' type-v2='text' w='92545' x='2424' y='29887'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>Recommendation </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>Through the conclusion of the analysis results there are recommendations related to the distribution strategy of taxi fleet deployment in NYC.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>- Increasing the number of taxis in Manhattan as the city with the largest trip frequency, followed by Queens and Brooklyn.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>- Increasing the number of taxis in these areas on weekdays during the hours around 7 am - 8 pm and reducing the number of taxis at other times due to low demand.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>- Reduced number of taxis in low demand areas such as Staten Island.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>- Adjustments to reduce the number of taxi operations on weekend days in predominantly employee areas such as Manhattan, Queens, and Brooklyn.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Consolas' fontsize='11'>For this taxi distribution, the main focus of passengers is the workers in NYC because the majority of the demand comes from them.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='10714' hidden='true' id='8' story-point-id='10' type-v2='text' w='83636' x='6788' y='16071'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Bold'>Understanding customer behaviour and preferences to enhance customer loyalty and satisfaction</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='58741' hidden='true' id='9' story-point-id='10' type-v2='text' w='86424' x='6788' y='27820'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>Through the conclusion of the analysis results there are recommendations related to the passenger behavior and preference to increase passenger service.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Mainly focus on the procurement of taxis that are sufficient to handle the large number of requests at congested locations and times because the majority of passengers are traveling within the city.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Improve service and taxi booking application system due to low demand through the application so that passengers are more likely to consider booking a taxi through the application.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Provide a good and adequate payment system because as a result, more people now prefer to use credit cards than cash because it is more practical.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Provision of other payment systems such as e-wallets is also a new alternative that can be added and incorporated into the application system to make it more practical in making reservations and payments.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- To increase passenger loyalty, you can also add bonus gifts or discounts on services in the application.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>One of the new recommendations and innovations is the step of optimizing services on the application to increase bookings on the application and facilitate passenger transactions. In addition, the provision of bonuses and discounts to help increase the number of bookings to farther places can also be done.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='7143' hidden='true' id='10' story-point-id='11' type-v2='text' w='85091' x='5939' y='17387'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Bold'>Identifying fare revenue to analyses to maximize revenue by adjusting the price</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='57143' hidden='true' id='11' story-point-id='11' type-v2='text' w='85091' x='6303' y='26974'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>Through the conclusion of the analysis results there are recommendations related to the passenger behavior and preference to increase passenger service.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- For high-revenue zones, like the East Harlem North to Upper West Side North route, try premium pricing given the consistent high fare. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Alternatively, introducing value-added services (like in-app perks or loyalty points for frequent routes) could maintain or even increase demand without affecting the revenue stream.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Organize event-based promos or discounts in a route that have high traffic such Brooklyn-Queens and fares to attract passengers to continue using taxis even during off-peak times.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Offer promos or discounts during times of low demand, such as midnight or early morning, to attract more customers.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>Maintaining fare values on routes that already have high fare values can also be done with loyalty programs and event or weekly discounts to attract passengers even at low demand times. In addition, providing discounts and other attractive offers to increase routes and times that have low demand.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='7143' hidden='true' id='12' story-point-id='13' type-v2='text' w='86970' x='2848' y='18233'>
          <formatted-text>
            <run fontalignment='0' fontname='Tableau Bold'>Identifying tip behaviours that encourage passenger to pay tips</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='54981' hidden='true' id='13' story-point-id='13' type-v2='text' w='86303' x='3030' y='29041'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Encourage or socialize for reminders to passengers to tip drivers, especially on routes with high average tips such as Manhattan-Queen.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Promote areas that have a high portion and value of tips such as Breezy Point/Fort Tilden/Rils Beach, battery park and other tourist attractions followed by discounts to attract more attention.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'> - Implement a small in-app icon or suggestion that shows passengers how their tips contribute to supporting drivers. This could serve as a reminder for passengers to tip and show appreciation, especially on routes associated with high tips.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Since weekend trips have higher tipping potential, run special weekend promotions with subtle prompts that remind riders of the tipping culture.</run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontname='Tableau Medium' fontsize='10'>- Use clear and transparent rate code definitions (e.g., airport surcharge or holiday surcharge) to help customers understand and anticipate additional costs. This transparency can help build trust and encourage generous tipping when passenger feel they’re treated fairly and not surprised by unexpected charges.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{1F7AECA7-0A0E-4582-BECC-85B6B0067120}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tips Correlation Analysis'>
      <style />
      <size maxheight='960' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='35815' y='0'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Tips Correlation Analysis</run>
          </formatted-text>
        </zone>
        <zone h='48005' id='56' name='Tip Correlation with Borough' show-title='false' w='45354' x='11631' y='6385' />
        <zone h='43672' id='65' name='Tip Correlation with Day Category' show-title='false' w='38831' x='58338' y='9008' />
        <zone h='47662' id='66' name='Tip Correlation with Time Zone' show-title='false' w='45538' x='11508' y='52223' />
        <zone h='44128' id='68' name='Tip Correlation with Rate code' show-title='false' w='40738' x='57969' y='55416' />
        <zone h='14937' id='72' name='Tip Correlation with Borough' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' type-v2='color' w='8615' x='738' y='14139' />
        <zone h='9008' id='73' name='Tip Correlation with Day Category' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' type-v2='color' w='7754' x='554' y='32041' />
        <zone h='14937' id='74' name='Tip Correlation with Time Zone' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type-v2='color' w='8615' x='923' y='62030' />
        <zone h='16306' id='75' name='Tip Correlation with Rate code' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' type-v2='color' w='11631' x='0' y='44812' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='123' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='122' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='35815' y='0'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Tips Correlation Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48005' id='56' is-fixed='true' name='Tip Correlation with Borough' show-title='false' w='45354' x='11631' y='6385'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14937' id='72' name='Tip Correlation with Borough' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' type-v2='color' w='8615' x='738' y='14139'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43672' id='65' is-fixed='true' name='Tip Correlation with Day Category' show-title='false' w='38831' x='58338' y='9008'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9008' id='73' name='Tip Correlation with Day Category' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' type-v2='color' w='7754' x='554' y='32041'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47662' id='66' is-fixed='true' name='Tip Correlation with Time Zone' show-title='false' w='45538' x='11508' y='52223'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14937' id='74' name='Tip Correlation with Time Zone' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type-v2='color' w='8615' x='923' y='62030'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44128' id='68' is-fixed='true' name='Tip Correlation with Rate code' show-title='false' w='40738' x='57969' y='55416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16306' id='75' name='Tip Correlation with Rate code' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' type-v2='color' w='11631' x='0' y='44812'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4CF5EA9D-C1C5-460B-8402-112DB1115B8E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tips Correlation Analysis (2)'>
      <style />
      <size maxheight='960' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='35815' y='0'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Tips Correlation Analysis</run>
          </formatted-text>
        </zone>
        <zone h='44812' id='67' name='TIp Correlation with Trip Type' show-title='false' w='42708' x='12062' y='8438' />
        <zone h='44812' id='69' name='Tip Correlation with Distance' show-title='false' w='41477' x='12800' y='55074' />
        <zone h='44926' id='70' name='Tip Correlation with Duration' show-title='false' w='42708' x='54954' y='9464' />
        <zone h='45040' id='71' name='Tip Correlation with Fare' show-title='false' w='44246' x='54954' y='54390' />
        <zone h='9008' id='76' name='TIp Correlation with Trip Type' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' type-v2='color' w='8615' x='492' y='6385' />
        <zone h='15964' id='77' name='Tip Correlation with Distance' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' type-v2='color' w='13969' x='369' y='49715' />
        <zone h='16762' id='78' name='Tip Correlation with Duration' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' type-v2='color' w='14585' x='431' y='33751' />
        <zone h='15051' id='79' name='Tip Correlation with Fare' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]' type-v2='color' w='8615' x='554' y='16990' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='123' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='122' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='35815' y='0'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Tips Correlation Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44812' id='67' is-fixed='true' name='TIp Correlation with Trip Type' show-title='false' w='42708' x='12062' y='8438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9008' id='76' name='TIp Correlation with Trip Type' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' type-v2='color' w='8615' x='492' y='6385'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44926' id='70' is-fixed='true' name='Tip Correlation with Duration' show-title='false' w='42708' x='54954' y='9464'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16762' id='78' name='Tip Correlation with Duration' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' type-v2='color' w='14585' x='431' y='33751'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45040' id='71' is-fixed='true' name='Tip Correlation with Fare' show-title='false' w='44246' x='54954' y='54390'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15051' id='79' name='Tip Correlation with Fare' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]' type-v2='color' w='8615' x='554' y='16990'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44812' id='69' is-fixed='true' name='Tip Correlation with Distance' show-title='false' w='41477' x='12800' y='55074'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15964' id='77' name='Tip Correlation with Distance' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' type-v2='color' w='13969' x='369' y='49715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{709A6C23-BD1C-4C68-8589-25AA3A44F885}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tips Revenue Analysis'>
      <style />
      <size maxheight='960' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='47325' id='63' type-v2='empty' w='51877' x='47754' y='52675'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#b9aa97' />
          </zone-style>
        </zone>
        <zone h='48751' id='62' type-v2='empty' w='47200' x='369' y='52438'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#b66353' />
          </zone-style>
        </zone>
        <zone h='44946' id='61' type-v2='empty' w='51877' x='47815' y='7015'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#4f6980' />
          </zone-style>
        </zone>
        <zone h='44946' id='60' type-v2='empty' w='47200' x='246' y='7015'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#638b66' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='36677' y='-476'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Tips Revenue Analysis</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='35' type-v2='text' w='32308' x='862' y='7372'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Tip Amount by Borough Route</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='42' type-v2='text' w='32308' x='48492' y='7729'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Tip Amount by Zone Route</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='43' type-v2='text' w='32308' x='677' y='51843'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Tip Amount by Dropoff Zone</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='44' type-v2='text' w='32308' x='48185' y='52081'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Tip Amount by Time</run>
          </formatted-text>
        </zone>
        <zone h='37693' id='47' name='Average Tip Amount based Borough Route' show-title='false' w='46031' x='677' y='12842' />
        <zone h='37693' id='48' name='Average Tip Amount based on Zone Route' show-title='false' w='50585' x='48369' y='13436' />
        <zone h='41617' id='49' name='Average Tip Amount based on Zone Dropoff' show-title='false' w='46277' x='800' y='57432' />
        <zone h='41974' id='50' name='Average Tip Amount based on Time' show-title='false' w='50523' x='48492' y='57075' />
        <zone h='6540' id='51' name='Average Tip Amount based on Time' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' show-title='false' type-v2='color' w='8615' x='55877' y='90844' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='111' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='110' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='36677' y='-476'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Tips Revenue Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='35' type-v2='text' w='32308' x='862' y='7372'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Tip Amount by Borough Route</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='42' type-v2='text' w='32308' x='48492' y='7729'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Tip Amount by Zone Route</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37693' id='47' is-fixed='true' name='Average Tip Amount based Borough Route' show-title='false' w='46031' x='677' y='12842'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37693' id='48' is-fixed='true' name='Average Tip Amount based on Zone Route' show-title='false' w='50585' x='48369' y='13436'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='43' type-v2='text' w='32308' x='677' y='51843'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Tip Amount by Dropoff Zone</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='44' type-v2='text' w='32308' x='48185' y='52081'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Tip Amount by Time</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41974' id='50' is-fixed='true' name='Average Tip Amount based on Time' show-title='false' w='50523' x='48492' y='57075'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6540' id='51' name='Average Tip Amount based on Time' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' show-title='false' type-v2='color' w='8615' x='55877' y='90844'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41617' id='49' is-fixed='true' name='Average Tip Amount based on Zone Dropoff' show-title='false' w='46277' x='800' y='57432'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5FF9D66E-4AA5-47FF-BA72-A9AACCE303AF}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Trip by Location'>
      <style />
      <size maxheight='960' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='55648' id='54' type-v2='empty' w='34031' x='492' y='44471'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#4f6980' />
          </zone-style>
        </zone>
        <zone h='42925' id='53' type-v2='empty' w='33969' x='615' y='1189'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#638b66' />
          </zone-style>
        </zone>
        <zone h='36266' id='5' name='Trip Distribution Based on Borough' show-title='false' w='32308' x='1046' y='6064' />
        <zone h='49465' id='6' name='Trip Distribution Based on Zone' show-title='false' w='32923' x='862' y='49822' />
        <zone h='80618' id='15' name='Trip Distribution by Hour and Borough' show-title='false' w='62400' x='35754' y='18312' />
        <zone h='17479' id='16' name='Trip Distribution by Hour and Borough' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]' show-title='false' type-v2='color' w='8985' x='42215' y='22117' />
        <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='51015' y='832'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Trip Distribution by Location</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='33' type-v2='text' w='32308' x='615' y='1189'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Borough</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='34' type-v2='text' w='32308' x='862' y='44709'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Zone</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='35' type-v2='text' w='32308' x='36554' y='10583'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Borough and Hours</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='106' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='105' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='7134' id='32' type-v2='text' w='33969' x='51015' y='832'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Trip Distribution by Location</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='33' type-v2='text' w='32308' x='615' y='1189'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Borough</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36266' id='5' is-fixed='true' name='Trip Distribution Based on Borough' show-title='false' w='32308' x='1046' y='6064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='35' type-v2='text' w='32308' x='36554' y='10583'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Borough and Hours</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80618' id='15' is-fixed='true' name='Trip Distribution by Hour and Borough' show-title='false' w='62400' x='35754' y='18312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17479' id='16' name='Trip Distribution by Hour and Borough' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]' show-title='false' type-v2='color' w='8985' x='42215' y='22117'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='34' type-v2='text' w='32308' x='862' y='44709'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Zone</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49465' id='6' is-fixed='true' name='Trip Distribution Based on Zone' show-title='false' w='32923' x='862' y='49822'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F746457-0215-4C0F-90D9-C25C14763E1D}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Trip by Time'>
      <style />
      <size maxheight='1260' maxwidth='1650' minheight='560' minwidth='420' sizing-mode='range' />
      <zones>
        <zone h='33294' id='51' type-v2='empty' w='38769' x='677' y='66944'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#b66353' />
          </zone-style>
        </zone>
        <zone h='25684' id='50' type-v2='empty' w='38646' x='738' y='40785'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#4f6980' />
          </zone-style>
        </zone>
        <zone h='31034' id='49' type-v2='empty' w='38831' x='923' y='9156'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#638b66' />
          </zone-style>
        </zone>
        <zone h='41974' id='3' name='Trip Distribution Per Date' show-title='false' w='58954' x='40738' y='6302' />
        <zone h='49703' id='4' name='Trip Distribution by Day and Hour' show-title='false' w='58338' x='41231' y='49822' />
        <zone h='22354' id='5' name='Trip Distribution by Day and Hour' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' show-title='false' type-v2='color' w='9169' x='48985' y='53864' />
        <zone h='29132' id='7' name='Trip Proportion by Time Zone' show-title='false' w='22831' x='1354' y='9394' />
        <zone forceUpdate='true' h='7134' id='25' type-v2='text' w='28985' x='615' y='1189'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Trip Distribution by Time</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='23662' id='6' name='Trip Proportion by Week Category' show-title='false' w='18831' x='18462' y='41736' />
        <zone h='33769' id='8' name='Trip Proportion by Day' show-title='false' w='26277' x='308' y='66468' />
        <zone forceUpdate='true' h='7868' id='26' type-v2='text' w='12677' x='25846' y='10946'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Proportion by Time Zone</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='9692' id='27' type-v2='text' w='12677' x='3200' y='42189'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Proportion by Week Category</run>
            <run>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='12315' id='28' type-v2='text' w='12677' x='26708' y='66819'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Proportion by Day Name</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='31' type-v2='text' w='32308' x='41969' y='951'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Date</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5351' id='32' type-v2='text' w='32308' x='42646' y='46492'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Day and Hours</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='14025' id='66' type-v2='text' w='12492' x='25415' y='21209'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Regular'>Highest Trip Proportion by Time Zone is happened </run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Regular'>Afternoon</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='14025' id='67' type-v2='text' w='12492' x='2954' y='50057'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Regular'>Highest Trip Proportion by Week is happened on </run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Regular'>Weekdays</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='18016' id='68' type-v2='text' w='12492' x='26708' y='78335'>
          <formatted-text>
            <run fontcolor='#ffffff' fontname='Tableau Regular'>Highest Trip Proportion by Time Zone is happened </run>
            <run bold='true' fontcolor='#ffffff' fontname='Tableau Regular'>Thursday</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2150' minheight='2150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='104' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='103' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone forceUpdate='true' h='5351' id='31' type-v2='text' w='32308' x='41969' y='951'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Date</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7134' id='25' type-v2='text' w='28985' x='615' y='1189'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Bold' fontsize='18'>Trip Distribution by Time</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41974' id='3' is-fixed='true' name='Trip Distribution Per Date' show-title='false' w='58954' x='40738' y='6302'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29132' id='7' is-fixed='true' name='Trip Proportion by Time Zone' show-title='false' w='22831' x='1354' y='9394'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7868' id='26' type-v2='text' w='12677' x='25846' y='10946'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Proportion by Time Zone</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='14025' id='66' type-v2='text' w='12492' x='25415' y='21209'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Tableau Regular'>Highest Trip Proportion by Time Zone is happened </run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Regular'>Afternoon</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='23662' id='6' is-fixed='true' name='Trip Proportion by Week Category' show-title='false' w='18831' x='18462' y='41736'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9692' id='27' type-v2='text' w='12677' x='3200' y='42189'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Proportion by Week Category</run>
                    <run>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5351' id='32' type-v2='text' w='32308' x='42646' y='46492'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Medium' fontsize='11'>Trip Distribution by Day and Hours</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49703' id='4' is-fixed='true' name='Trip Distribution by Day and Hour' show-title='false' w='58338' x='41231' y='49822'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22354' id='5' name='Trip Distribution by Day and Hour' pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' show-title='false' type-v2='color' w='9169' x='48985' y='53864'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='14025' id='67' type-v2='text' w='12492' x='2954' y='50057'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Tableau Regular'>Highest Trip Proportion by Week is happened on </run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Regular'>Weekdays</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33769' id='8' is-fixed='true' name='Trip Proportion by Day' show-title='false' w='26277' x='308' y='66468'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='12315' id='28' type-v2='text' w='12677' x='26708' y='66819'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Medium' fontsize='11'>Trip Proportion by Day Name</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='18016' id='68' type-v2='text' w='12492' x='26708' y='78335'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Tableau Regular'>Highest Trip Proportion by Time Zone is happened </run>
                    <run bold='true' fontcolor='#ffffff' fontname='Tableau Regular'>Thursday</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{124FEB9A-32AF-4C25-B5B8-AC19E0B72D5D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Trip Distribution Based on Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:Calculation_7986008048658251789:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048658251789:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93082CB1-E430-4612-AD30-63A89F059965}' />
    </window>
    <window class='worksheet' name='Trip Distribution Based on Borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUBorough:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92F4C246-A6C5-411D-AB12-65E877D3DB81}' />
    </window>
    <window class='worksheet' name='Trip Distribution Based on Zone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:PUZone:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUZone:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03EAC914-38C3-4666-AD30-07C4E1AB60BD}' />
    </window>
    <window class='worksheet' name='Trip Distribution Per Date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='16' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[cnt:lpep_pickup_datetime:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[tdy:lpep_pickup_datetime:qk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71DC4B7B-B6F7-4BB6-8FC1-B9C473EB7D06}' />
    </window>
    <window class='worksheet' name='Trip Distribution by Day and Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BCFC403-644C-47E3-952D-682E421BB74C}' />
    </window>
    <window class='worksheet' name='Trip Proportion by Week Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92A5B040-1D8B-44BA-99D7-9CBD5693BDDD}' />
    </window>
    <window class='worksheet' name='Trip Proportion by Time Zone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01D8089D-6D0D-46DE-B1FD-653621A94A4D}' />
    </window>
    <window class='worksheet' name='Trip Proportion by Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[qr:lpep_pickup_datetime:ok]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{314F2D1D-A333-44BE-A8AE-BB1089AE6E44}' />
    </window>
    <window class='worksheet' name='Trip Distribution by Hour and Borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4AF001D-05F2-4966-A9A3-F0AC29E1C720}' />
    </window>
    <window class='worksheet' name='Passenger Behaviour by Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{570B9D80-AC1E-4D61-B4D3-2E006DBCC085}' />
    </window>
    <window class='worksheet' name='Passenger Behaviour on Total Passenger'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:passenger_count:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03305391-1B09-4E04-8E9E-DE81494F86CD}' />
    </window>
    <window class='worksheet' name='Passenger Behaviour on Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F363FF54-3361-4C00-92A2-5ECC40719452}' />
    </window>
    <window class='worksheet' name='Passenger Preference on RateCode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{656F41FC-B8B7-413C-B0E1-5D8B22BA3148}' />
    </window>
    <window class='worksheet' name='Passenger Preference on Payment Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:payment_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:payment_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48E0A585-4BDD-4D52-908E-D35A0A6C8B8D}' />
    </window>
    <window class='worksheet' name='Passenger Preference on Trip Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FF4CD459-6139-4B05-9ACB-1E5519401E1B}' />
    </window>
    <window class='worksheet' name='Total Fare Amount Distribution based on Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048657494028:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661813771:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{740106D4-231B-48D1-BA9F-383D21A96CE8}' />
    </window>
    <window class='worksheet' name='Average Fare Amount based Borough Route'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048626868231:qk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455629889536:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455659233286:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D183A6DB-410C-4591-AC91-C1669A4A8FDB}' />
    </window>
    <window class='worksheet' name='Average Fare Amount based on Zone Route'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Route (Sheet12):nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661096968:nk:1]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C03AEE80-123C-4010-8ED8-85D11B3C1B26}' />
    </window>
    <window class='worksheet' name='Average Fare Amount based on Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:fare_amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FC4109F-D78E-478B-92B0-A25F73A193F2}' />
    </window>
    <window class='worksheet' name='Average Fare Amount based on Time and Borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661813771:nk:2]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6540B088-05A8-41D6-8282-29C476B7BE9D}' />
    </window>
    <window class='worksheet' name='Total Tip Amount Distribution based on Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048657494028:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[sum:fare_amount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2222D97F-F4FA-40AA-90A1-7E155AE83712}' />
    </window>
    <window class='worksheet' name='Average Tip Amount based Borough Route'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048626868231:qk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455665770512:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3791F62-7C65-4E31-A3AD-F078610A3D19}' />
    </window>
    <window class='worksheet' name='Average Tip Amount based on Zone Route'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048629805067:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661096968:nk:1]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7791308E-E88C-40DE-9661-0B75288F4BF6}' />
    </window>
    <window class='worksheet' name='Average Tip Amount based on Zone Dropoff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048627429384:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455659233286:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_349310455661813771:nk:2]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[usr:Calculation_7986008048628592649:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD3EDE4C-B6ED-47BC-88B1-966B8982E876}' />
    </window>
    <window class='worksheet' name='Average Tip Amount based on Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[avg:tip_amount:qk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[yr:lpep_pickup_datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{413060B0-0DFE-464B-877D-6BA73DA68871}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_2215208076859568129:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:Calculation_7986008048662089743:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOZone:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{01549175-CFAC-41C5-86E9-896371760A98}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Day Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E0DF90F3-7136-4E15-B99A-D929059F3105}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Time Zone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{002187D5-29CC-4A15-A268-D3567F77A963}' />
    </window>
    <window class='worksheet' name='TIp Correlation with Trip Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B79AB2BC-0D91-4E8D-B13C-A49456D13CFE}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Rate code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{A381106F-AC6F-42CE-BAC5-3C55D8F076D6}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{67CB0D93-42CC-4EDA-B0E2-F126AA3B5F12}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{44E0F023-9DF0-4EE0-A084-5A3117B8A9E5}' />
    </window>
    <window class='worksheet' name='Tip Correlation with Fare'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{DE6A442A-8E4A-4101-8C1B-879A8E4BFE6A}' />
    </window>
    <window class='worksheet' name='Sheet 34'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{892FAB98-456A-476B-81D6-C5897B8994F4}' />
    </window>
    <window class='dashboard' name='Trip by Time'>
      <viewpoints>
        <viewpoint name='Trip Distribution Per Date'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Distribution by Day and Hour'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[wd:lpep_pickup_datetime:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trip Proportion by Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Proportion by Time Zone'>
          <zoom type='entire-view' />
          <highlight field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Trip Proportion by Week Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{05AD3860-D0D3-49FC-871C-2D568F9BBDE1}' />
    </window>
    <window class='dashboard' name='Trip by Location'>
      <viewpoints>
        <viewpoint name='Trip Distribution Based on Borough'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Distribution Based on Zone' />
        <viewpoint name='Trip Distribution by Hour and Borough'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:PUBorough:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{045E5986-1A8F-49AC-8C45-CCB248AE013D}' />
    </window>
    <window class='dashboard' name='Passenger Behaviour'>
      <viewpoints>
        <viewpoint name='Passenger Behaviour by Distance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Passenger Behaviour on Duration'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Passenger Behaviour on Total Passenger'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Passenger Preference on Payment Type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Passenger Preference on RateCode'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Passenger Preference on Trip Type'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{499DC115-789B-4FBA-8DB5-437EDE41D0E1}' />
    </window>
    <window class='dashboard' name='Fare Revenue Analysis'>
      <viewpoints>
        <viewpoint name='Average Fare Amount based Borough Route'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Fare Amount based on Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Fare Amount based on Time and Borough'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Average Fare Amount based on Zone Route'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{80F37BE2-CC1B-47E4-9F89-E5729439A4C5}' />
    </window>
    <window class='dashboard' name='Tips Revenue Analysis'>
      <viewpoints>
        <viewpoint name='Average Tip Amount based Borough Route'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Tip Amount based on Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Tip Amount based on Zone Dropoff'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average Tip Amount based on Zone Route'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FD17037B-1B99-4321-A7E3-DC2C7E935EE3}' />
    </window>
    <window class='dashboard' name='Tips Correlation Analysis'>
      <viewpoints>
        <viewpoint name='Tip Correlation with Borough'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:DOBorough:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tip Correlation with Day Category'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:day_type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tip Correlation with Rate code'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:RatecodeID:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tip Correlation with Time Zone'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:time_zone:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FE8A8444-C397-4CB7-9B71-EB95A1D9ACA6}' />
    </window>
    <window class='dashboard' name='Tips Correlation Analysis (2)'>
      <viewpoints>
        <viewpoint name='TIp Correlation with Trip Type'>
          <zoom type='entire-view' />
          <highlight field='[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:trip_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tip Correlation with Distance'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:distance_category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tip Correlation with Duration'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:duration_category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tip Correlation with Fare'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1gpn36q07c5zg515oigyf1ljqwhq].[none:fare_category:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6AE8E949-F648-4B2B-B539-C5F616245C77}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{271B3333-9AE4-4720-A773-3E22948AD972}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Fare Amount based Borough Route' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Fare Amount based on Time' width='192'>
      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
      3LiRp59+moKCAq6++mqio6NpbW1l48aNxMXFYTabCQsLY8eOHfz4xz/mk08+QavVctttt/Hp
      p5/S0tLCH/7wBwIDL+yoOxqae0xUtjeRX1HCipyZXJk1BdUI50iyLHOwropPThzhX5d+n+gv
      O975kGUZl8uFRqOht7cXAJ1OR0BAAF6vF5vNRmhoKF6vF6fTSWhoKFarFZ/PR2hoKG1tbajV
      amJjY0d0YJFkidJmIx29PVydM+OSHIy+GvI1mjs5VNc/z4jShQ4EQ4g28OIHgMfn48OjX7A4
      awpxYRFnrePYsWN4PB5SU1Nxu90kJibidDqxWCyEh4dTVVXFlClTUKlUdHR0EBkZSUdHBz6f
      j4SEBLZt20Z2djaZmZmX/AzQ09ODXq8HwOpy8F7xfupM7dxzxXJSI4fvSLIs83nVMb6oreDf
      l/3wvM8eX3nllVeoqanhiSee4KWXXuLAgQM8+eSTTJ8+nTfeeINTp04xadIkTCYTzc3NXHPN
      NWzYsIGcnByuv/56nnnmGXJzc/nFL34x4jSDs/mq6w32PQzWLRUKxYjTzBsaGkhJSTmjbkmW
      qetq40h9NSVNteiDQs79TvBwBtshlVJJbkLqiP+ABoOBhIQEdDrdwFIkarWakJAQ1Go1BoNh
      IMB0Oh1KpZLQ0FDCw8NRKpVMmjSJqKioC+78jY2NPP300yxevJgNGzawYcMGKioqmD9/Pu3t
      7fz3f/837e3tTJs2jfXr11NXV8eBAwd4++23OXnyJCdPnuSll15i5syZ6PV6NOoApienkx5t
      YP3BzzF2tZMebRj0bOiTJN4/+gUn25t5eNkPCdKM7KbOcKZNm0ZRURFXXXUV8+bN49SpU9xy
      yy0oFApycnIoKytj8uTJrFy5kqKiIubMmUNhYSFKpZKFCxdSUlLChAkTmDFjxsD339PTQ35+
      PhkZGfz1r38lPz+fiRMnEhISQllZGRs3bmTq1KkcOnSIzz//nNzcXF599VV27drF5MmTeeGF
      F2hubmbKlClntLWiooI1a9Zw1VVX8fHHH7N+/Xo++ugjrr/+empra3nkkUfYv38/Ho+HP/3p
      Txw8eJDa2lrefPPNgVyqt99+m+zsbGJivn6EVqFQEKkLZUpCKssmTSM1MvbyzQa91DQaDRER
      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
    </thumbnail>
    <thumbnail height='192' name='Average Fare Amount based on Time and Borough' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Fare Amount based on Zone Route' width='192'>
      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
      qf4CSog7P95AcpVSf7yeXLmXCz89JvU3Gl5JJecYmlTYd7ieYwd3MPngCk19c6+VliqAdaSn
      vYfKffvJ9Tgort6DaW6IefnNlBpB1FKy4zDnzhzEqf9bV/Qm9p46TW1FAVarjbLqLcSmpv5m
      AtDqvew/XIfLbsXm8lGa7yb0mtvMqE2gdWRuIUmRw4gACFo9Pl2K6YiC2/br0xZEEbvdAUz/
      +sRWDabFaCR9QlBgmjuXG6k8+D4vWgv1q8IJAnIizOTMPJND3QzOaTly/PXOa1AFsI48PwUj
      igrSS62XePtQFInpgYf8eKuL6iPvUFfsfK02+cuSiszT29tDOBJDr7W+xCq/lVEFsI7YzXqi
      mYU+iiwxF9dRZN2YK8vGO27xU3ecc5/9Hveb7smvgN6Zz9H6fACm+xq5ebedT07tXOVTP0ft
      A6wjZVvy6LjXxkI8xdxoL36rF+/K6z3fblLztHRMUX/mxJoU/vD0EI+Hp0lJCnIqzuxcAJPR
      vPoHV0C1QqwncpLetibaekYRTG4OHD1Kjt3wurX5MpKxSS7/9RpBJBYCMcwOC+7SnZzdt+XX
      J/48sUm++PMPJPT6xTeqp2g7x/ZX/036AYnQFM1N95nwB5HR4S0sZ1ftNuzGV2/QqAJQ2dSo
      TSCVTY0qAJVNjSoAlU2NKgCVTY0qAJVNjSoAlU2NKgCVTY0qAJVNjSoAlU2NKgCVTY0qAJVN
      jSoAlU2NKgCVTY0qAJVNjSoAlU2NKgCVTY0qAJVNjSoAlU2NKgCVTY0qAJVNjSoAlU3N/w91
      60miE1esGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Tip Amount based Borough Route' width='192'>
      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
      /wcGNpw5TnESiQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Tip Amount based on Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Tip Amount based on Zone Dropoff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Tip Amount based on Zone Route' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fare Revenue Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passenger Behaviour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passenger Behaviour by Distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passenger Behaviour on Duration' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passenger Behaviour on Total Passenger' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passenger Preference on Payment Type' width='192'>
      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
      JEf7/05VPHi9TXDYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Passenger Preference on RateCode' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Passenger Preference on Trip Type' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 34' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TIp Correlation with Trip Type' width='192'>
      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
      hQiHwySTyfTU5waDgY6OjnnvVVUVt9s970qvG7PDfd6VK1dob2/nvffe484776SkpGTe/241
      qPI2FeLKhXNI1jJmZ0Mkwz6KytbR03sJSafHJElIn6YdZNMZIBdTITRN45e//CVOp5NTp07h
      8Xj4h3/4B06ePElXVxfnz5+ntrYWm83GhQsXqK+v52c/+xk/+clP2LZtLk/r5Zdfpq6uDqvV
      ytWrV3nkkUf49a9/zY9//GN6enpYt25detm+vj5+97vf8cMf/pAXX3yRtra2L5wdLm9TIbbs
      2n3Ta1075/qdRSr07aOqKj09PVRWVvLggw9y6dIlvF4vxcXFJBIJ3n77bbZt24bL5aKoqIiH
      H36YzZs3U1NTw89//nM2bdpEa2srp06doqmpiQ8++ID777+fYDCIx+NBVVVGRkbo7OxEkiQc
      Dgc+n4+xsTGuXr2Kpml5MT3iogEQCk5jLSwhGQ1hsBZjNswdRcWPfOXs27eP5uZmGhoaCAaD
      tLe3Y7VacTqd/OM//iM6nY5169bR3d1NVVUVjz76KNFolL/7u78DYHJykqamJmRZpra2FrPZ
      zH333UcwGKS1tZXCwsL0umZnZ7nvvvuIRCLce++9dHTkxzSXCzaCwwEv//Lzf6Ft2x48vafZ
      //T/oK3i1mcMFo3gW3M7R4JX2lppBC9YOTaarWzbvoOGuhoe+OYztDqXPvGQcPt4vV5OnjxJ
      KpXiyJEjRCKRL1x+bGwMVVXp7+//s599Yxa5WCzGyMjI7Spy1luwCmSxFVNRZOLs2TPYLEYK
      Dj5GZYl5pcuWl7xeL7/+9a/Zu3cvJ0+exG63U1RUxOTkJF//+tf53e9+x86dOzl27Bg1NTV4
      PB76+/vZvXs3J06cYPfu3WzcuJFUKsXf//3f8+1vf5uPPvqI1tZW7rnnHl5//XUeeeQR3n//
      fdrb27nnnnsAeOONN/jFL37B97//fV5++WX+5m/+Br1ej8vl4tChQ1l1Rr+dFm0DxKMRals6
      aKosocgiBoxXitfrpbu7m6KiIi5cuEBxcTH19fUcPnyY/fv3I8sygUAAs9nM2NgYv/zlLykr
      K8NsNmOz2dJ5PwaDgU2bNtHZ2cnJkycJhUIMDAwwMjLCG2+8gaIovP/+++kA+NrXvsbhw4dx
      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
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Borough' width='192'>
      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
      T2nZCS7fdD2BQIDnnnuOn/70p7z11lvU1tayfPly4uPjefbZZ1m7di1Lly7lnXfeYc+ePfzi
      F78Y+vePf/xjiouLeeKJJ3j66afp7u5myx138Mtf/5r33n2X+vp6QkJCiIuLo6urC6/XS05u
      LocLC1FKsW7DBnbu2EFXRwf33Hsvr736KqEeDzd+7Wtse/ttjpWU8M1vfIOiI0coLS1l7dq1
      hISEsHfvXlasWEF8fDzvvfceAwMD3HXXXWP2HTnN0QC0e21Wp8wgRU/icG07F2fFo5TCtm0C
      oywnGOmOYtD6pO6axsjVzRRnlwA863eURiAQGCrNqJTiscceIy4ujoiICG644QZaW1uJiIhg
      3rx5HD58mMLCQrZs2cJLL71EdXU1d955JzExMWjambaefurn3LL5Onbuep+YmCiqa+qIjYnm
      y9dtGnrbPXsPsHxpHr95/gWqa+vJykgHoLG5FXdICJ7QULbt3MVD999LREQEdXW1rF27jri4
      OJRSQxPGQkNDgTMTyEJDQ4mPjyc/Px+v10tHRweVlZXExsbi8/nYvn07WVlZWJbFq6++yuLF
      izF0nWuuvZbfPvccX1i9mtJjx6ipqiI9M5MP9+xh7bp1/PLpp8lftYqm06cxXS5CQ0NZuXIl
      Bw8exDQMZqWmcmDfPjRN46qrriIuLo6qqipOnjxJamoqlmWRnJwMgM/nG7EMplJqaHtQShEV
      5kIp+y/f3ej89Tv87e9omjrn9naufv1/IR2ImBK/HtwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Day Category' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Duration' width='192'>
      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
      y+MiKAfx+Dyhv3v9XlweF/6An6AcpLm7maAcDMfq3HJDQ0Ps37+f3/zmN1dVhf1Pp0+fpqWl
      BYAPP/yQgYGB6y6/s7OTI0eOXPd1sizz29/+lj//+c+0tLTwox/9iPr6+qtepygK77///lUd
      7kpKSrDb7dhsNs6ePXvd3zcbqJ977rnnbnYhdXW1WNMysFqSUX9ZEHN5rJsb0dXfxe/fe5m1
      S/PQ6/S09LTy+bnPOXzmI7JSs/hryf+ja6CLpPhkDp74gJaeFrQaHaeqS6mstxEdFY3FNHeG
      BpFlGRgLQENDA4qiUFVVhUaj4eDBg3z++ee8+eabWCwWfvWrX1FeXs6f/vQnTp8+TU5ODi+/
      /HKojvcPf/gDsbGxPP/885SWlrJz587Q9n/ppZfQaDQkJSXx5JNPotPpWLFiBTBWAPP0009T
      WlpKY2Mjr7/+Ort37+aXv/wlTqeTgoICnnvuObq7u2lububAgQNotVqeffZZBgYG2Lp1KyqV
      Crvdzg9+8APOnz9PcnIyL774In19fZw7d45XX32VvLy8sNUEX1nQczOef/7558PSGW51Ti6j
      TiflX1SxacNalCnMExyUg5RdPMu6ZfkEg0ECgQAZyQtIMVk4VFqIISqGUfcoqeZUYnTR9I8M
      oFXrSIiJR6PSYIyOZWFyxpzqBXnlwAENDQ2o1Wqys7N59913Q4NcPfvss9jt9lCnuIcffphA
      IEBsbCxRUVGUlZVx5MgR1qxZw9mzZ8nIyMDpdIYqvwCysrIoKSkhPz+fQCBAWVkZe/fuBaC/
      v5+enh5sNhvvvfce1dXV3H///ciyjMlkorm5mfb2djIzMykrK2PPnj1s2bKFgoICCgoKQtVo
      SUlJ7N27l/T0dDQaDQ8++CBVVVXU19djNpsZHh4OW7+nYDAY+vK4WWHpDNfa3Eis0cilpg42
      bViLxI13hrvUUU/R6cM4PU625Wxle942AE6cP0l6UjoZyQsIyAEuttbi9XvJXZzL8OgwZbVn
      uXPdHVTVV9HZ38lDOx682dW5ZS53hvN4PHzyySdkZ2djtVopLS3FarUiyzKrV6/G7/dz9OhR
      LBYLmZmZnDp1iry8PCoqKjCbzWRmZlJbW8ttt91GZ2cnfr+fVatWhbZ/cXExbrebnJwczp8/
      T35+Punp6UiSFCq0j4uLY/369dTW1pKTk0NnZydarRaz2UxJSQkmk4mFCxdy+vRpduzYgd1u
      p729ne3bt4eC1tvbS0VFRajwfnBwkPj4eL744gt27NgRtiPArCuJ9Lmd9PQNkpKaik4zttGn
      2hv0dM0ZsjOzqWqsYkv2Zkoqj3JH/jdwup0UnTmMP+Dnm5vu5vi5kww7h9meu4269jrq2i9R
      sHoL65evu9nVuWVEb9CpmXUBuJZb3R26o6+T9KS5NTDslQGQZTl0XivLctjOc69c9njLu3w6
      Mdmd6vJodjPV3X3eBcDj8+JwhW9gV7PRPCdqES4HwO/382//9m/s3LmTtWvX8vrrr7Nv3z68
      Xi8ej4e0tLTQB97V1YWiKBgMBpxOJxqNhtjYWPr6+rBYLHi93i9H6FDjdDqJj4/n9ddfZ+XK
      ldx5552hkRtGRkbo7+/HbDZz+PBhcnNzsVgsmM1mBgcHUavVeDwe4uPjGRwcJCYmJnQK09nZ
      ycsvv8yPf/xjAEwmE0NDQ5jN5rCFdiKzbmS4m2VrsPHah38M2/L+z/d/jiVh7twNGh0d5fTp
      08iyjNVqpbi4mMcee4ynnnoKg8HA97//fbZs2QLAG2+8wQcffMDtt99OZWUlBoMBi8WCXq8n
      LS0NjUZDe3s7ZrOZxsZGVqxYQUVFBV1dXWzdupXY2FgAfv3rX9PT08NTTz3FRx99RFpaGocP
      H2bVqlU0NTVx6NAhhoaGeOKJJygsLMRqtfLCCy+EdvAvvviCH/7wh+Tm5rJmzRp6e3vZt2/f
      TG3CKRMPwmYBk8nEfffdR1dXFz09PQwODvL222+HjgBJSUnA2FG1oqICo9GIWq3mjjvuYPny
      5URHR9PX18eyZcsoLi6mvr4evV7P9773PfR6PY888gg9PT2hcX1g7O6P3+/H4XBgt9t58803
      efjhhzlw4AAPPPAAVquV7OxsEhISeOSRR0LllwAajQav14vZbOaxxx7jxRdf5IEHHrgl3/7h
      NitOgc7UlEXkEeB6F8G/+MUveOaZZzh06BBFRUVkZGTw05/+NCyH/5///OekpqaSn5/P+vXr
      p7ycV155BavVygMPPHDTbZqseXcNIAIg3AhREywIYTIrLoIjXSAQ4IknnkCj0fDkk0/y6quv
      snnzZux2O21tbfzsZz/jJz/5Cffeey+tra20t7fz0EMP8eabb7J69WqsVivNzc1s2LCBoqIi
      EhIS2LhxI8XFxaxbt466ujpkWeb5559Hp9PN9OrOKuIIMEsMDg7i8/k4d+4cdrud0tJSdDod
      NpuNnp4e1Go1paWlfPzxx7hcLux2Ozt27KC7uxubzUZnZyexsbGUl5czPDxMb28ve/fu5cEH
      H0Sn01FWVobD4Zjp1Zx1xBFgltBqtTz99NOkp6eTmZlJSkoKw8PDbNq0iaysLB5//HFWrlxJ
      MBiksbGR1atXI8syBQUFvPLKKyQlJdHU1MTvf/97PB4PCxcuJDY2FqPRyM6dO9m7dy9ms3mm
      V3PWERfBM+jyRbCiKHR3d5Oamjql5fT29jI4OMiSJUtCD7rms3n3ICzSSZI05Z0fxmaIETNE
      To24BhAimgiAENFEAISINm4AysvLcbvdk15QbVUptc09YWmUINwq414El5WVYTQaSU5OxmQy
      TbgQz1A3TkVHlM83pXmCFcJ8I0oJ3zyy022utHO2Cdd2m/AukM1mw2QykZGRwfLly8dpSZDy
      c3VkZabQ2jeKrCjwZcHEZIWrvvOyK+eBnc3Ezj81wWAwbD1Pxw3Apk2bQrOMXDkf1bUsXboU
      54gdn2/slt7le7STfQ6gVoW3eEWtUc+J++FzqYB/NgnXcwCYIADr1k2ytlZSk5KahmK1kimD
      ag72CRci14QxUhQF73W+/S+TJBVqtbipJMwtE+6xTpebP771X7g9YspNYX4a9xSowlbN4U+P
      4/b6OFddx6Z1ubeyXREhXOexkSacpZfjBiAmOhpFgUe+tZu87HHuAAk3RQRg5o0bgCRzAv/7
      qX8kMAduJwrCVI0fgEQTsiyj02lRFBkYf2AlQZirJjwGv/6f/wlA5Wf/zdnG6w/DLQhzzbhH
      gJPF71Ny5AiOoSFkSce+TXG3sl3z1uWnv+JoOjuMG4CCXfeRtmglAcae0urF9VqI4mhDsVci
      mVZCwtKxIcL9LpSBi6gsa1E8gyjdp5ESlkHCEpSBWqQYC0TFo7R+CrIfsu5Bkmb/8I3z3YS7
      9X+/81fqm5ppbm7G6RWP7UPkAJJ5FXLz4dCPlJ6zKB3HQFHA2YVkWoHc8gmMdqC0laC4emCg
      FjyDEBUPSnj7PwlTM2EAEg06BkY9eL3esU5uwpioeOSGD5AMX5UxqtK3gz5x7B+mFSj2KqTE
      bCRjBlLKlyOvJSxGCbpRBi9BUHyhzAYT9hi75++/x6h7rCtEXLT2ljRoThjtQrXkW8iNh5AC
      bhQlCD4HeIdRXN0oPeWgMyIlLEHxOcDVC34naA1IsRkozg5wdkHC4plek4g34RGguvI0xcXF
      /MfLL9E64LpVbZr9NHqUoUuolt4PAdfYjj/SjJSwGGWkFWIXgOxHGawbO+VRqSHoBbUe/KNI
      xkyIXzTTayFwnSNA7vqtLMnxU6Z2MDAqDtmXSQlLkBKWfP1nxgXjvz5u4Vf/WHQ3SGrEqJSz
      w4QBaGmooaq6AWNyDuuyJq4KixRy4yEU73BYliXFLUKVvjUsyxKmZsIAdDXWIesTqKssZeO2
      7WQk6K/5utbGOgYdLoIqPetyV05LQ2cLuekwjLaFZ2HpO0AEYEZNGICmrj52f/vv+MLZRs+g
      e9wApGcsROrspM/hD9UCXznn1fXIYb4lKMs3VpJ5Y8J3N0xhOtspTMaEAXj8H/6Bj48cJX75
      NtYtGn+KS0VRkFRq5IDra7vHTNa8zpV627nSzvlqwgAc/eQwvQ6ZgeEqmlesZHHKtbpDyDQ1
      NOD2yyBpQrMRKooy6ZpgVZgvCFUqadomyQsQvi4MEtPXTmFyJgzAkMPDzrv2Eq2CpISYcV6l
      YtmqnGlomiBMvwkDMDDYR835c+hUEuvikjFEzf6RFgThRky4R8frtbj9QVRqkMWpqjAPTRiA
      +x7/F9xeH/audjGIqDAvjRuAnrZ6jn1+kpamSziiFvCjJ9bcynYJwi0xbgBOffYRdr+Jdbkr
      6NCvItEYdSvbJQi3xLhnNvc//q88dt8u1NEJDNedpKFbTLAmzD8TXANIxCdauP2uvezYJa6A
      hflpwovgsmPF+PUJjPZ1k79jN8mxYo5ZYX6Z8OaO7XwN2Xl5RHm7qW4dIBgU/VaE+WXCACxb
      soB3336L+gGoLy2k6lKYekEKwixx7VOgoB/bxQbiEswkecf6qmzYtos083jdIQRhbrp2ACQV
      Po+TzKyVWDLGhkY0ifN/YR669imQSs3ZUyX0OcSw6ML8Nv5dIL+bU8ePEa0bOwXaetffsTAp
      9la1SxBuiXEDsPa2b5C3oYAY3fX7q3tdI9Q3tpK6cDHmOHGdMB8oX052KM3zIdzHXbvNBdsn
      tfMDDAw5WLFyBbXV58I94alwExRZZrC+Fldf79i/FYWeyjIaP3qflpLDKLKMe6CPrrITyMEg
      nWeO03HqKHLAj91WQe27bxPwTH6u6LloUh38G20ncCVkk7Pw2iNDpKamUnPuCxKtGaAoBGWZ
      YDA46XK/oBzeOQiCgeA0zsAYxppgRZ7WmSLd9h46Th8jKWcdugQzALEZWehMibQf/ZhAIEDr
      Zx/jGx1Bn2xltLsLlU5H77kvsF+oIm5hFn6vFzTzd1C0CQMwMjSA2+snxrKEeJ2ErCjXnAXy
      QuVZkhatxmIyIPHV9KjzcZrUsJZESirU0zidqzE1HWv+bSiyHNoemsQkhi5Vk7HtTgZrzxOf
      uZj+i+eJTjDh7GoDRSF9YwHewX6G6qpJXpWLJn78evC5bsKt/+Z/vIR1aQ61FaeQo4xsvudR
      dq1fetXrVBotPW0NjAyZWJqVEcZdRLgZfucort5uFFnG73IS9HrQGoyMdrSRtmkbvVVnGWlr
      ZqS1EbutgvjMJah1OgYb6tDGGIhJSWWw/iIxySkzvSrTZsIAGHQaDGYrcTFRZOXl0t7dB1wd
      gFW5+dPVPuEm+JyjIEmoNGr8zlF8jmFUWh3pBd9AUqlIyd9ESv4mhvLWEb9oCfbzlSjBIEk5
      +dht5ajUGqzrN8/0akyrCQNw/3f/kdq6Ru54ZD+ZFiOK1nCr2iWEgcFixWCxhv59+ZtcF2v8
      2usSFo9NgmjJWx/6WcrajQS8HtS6+V0HMmEALl2wcf5SKzHGLiz37CUpWjwNniu6y0sZbmkI
      y7K0BiOL7/5WWJY120wYAGv6AhrbuujsaGXY5SNJVIXNGb22cjpOlIRlWdHJKZEZALc3yN33
      fRvJ60AVI3Z+Yf4ZNwD93W3U1lTz4QfvMkQi//rkP2OMvpVNE4TpN24ASgr/Rpecwqa12TRJ
      S0iJF3u/MP+M2xXi4X/6MY/eu51ht0zvhWM09oiieGH+mbAoPik1gz33/z33KApiEGNhtvIG
      vOjUuinNvTyp5/BjIz7f8LIFYdL6nQN0OnrISVkZGl28faQLX8DHksRF1Pc30e8aYLE5E38w
      QNtwJymxycTpjZzrqiY9PpWliVk3/Hvnd19XYc4IKjKewFcFWLKioFGpcfhGAUiJTSbbsoJu
      h524KCP5aTnYnf10O3qxxCaREZ8+pd8rAiDMCsmGxK91ilSrVCQbEuHLnmVuv4daez3LEhej
      oFDZeZ7lSYtZlpiFJ+DlQm/tlGYaEuOdC7NC40AL/c4BWoc7iNHoMehiaB5qp8/ZT+9oH+e6
      a0g1Wuh3DdA23EmMLpo+5wAalRpvwHfNXsqTIQIgzAopsckkGRLRqNSoVWo0KjUL4lJJj0sl
      SqNjY8ZaFAW0ag0J0fEE5CBqSUW0Vo+sKKTHW6c005AIgDArxEZd3dEyTv9Vpz29ZvyeCItM
      GVP+vWEKgILDMYrRaLz+SwXhCh6/h8+aToZtebkpq0iPT53068MSgN6OFqrqO7nr9oJwLE6I
      IEFFxu7sD9vyrryTNBlhCYAlfREpg2O3qy7PESxqgiexpGmsCVbCOf+wwrS1MxgM82cv39hn
      H/ZrAEmSRE3wJE1nTXBYhzORmLbtqZbD/NmrbuyzD8tW6mipZ3BggJpLTWIyPWFOCUus0zOX
      kp55da2wIMx24kmwENFEAISIJgIgRDQRACGiiQAIEU0EQIhoIgBCRBMBECKaCIAQ0UQAhIgm
      AiBENBEAIaKJAAgRTQRAiGhhCUDQ56Km+iIef3irewRhuoUlABUVVSzKWkBVlZgnWJhbwlIQ
      I2m1REfHopGCyIoCsozf78fj8Vz92isGMLpcM2wymLh73W4AVCoJkEBRxpZ15Xv5qtRPUZSr
      ao4laazMUKWocTqdk/rdN/r/StpdKN7hawb98uBM/7Pdl98rMVZRHFq2MQPVl+2czO8OBoOo
      rih1nOg9cavyUMWZvvw/+arBjcfGe73cXvmqUufQ54CCWh9z1fac7La83nb2B3wsj198dduQ
      ULj6MwZC4/9c6//16HC5XJP63RCummBFQZYDKKhQSRLSl7XAer1+Um9fZljKsoVzpKJs1X0z
      3YJJMWzePtNNmJQYYrgtbv31XzhNJGWyQzdMYKSvi4b2HhYsWkpyQiwwVu0/2aJ4QZgJkiRJ
      YQnAtYgACLOdJElTGExREOYREQAhookACBFNBECIaCIAQkQTARAimgiAENFEAISIJgIgRDQR
      ACGiiQAIEU0EQIhoIgBCRBMBECJaWAIQ8Lmpq28Kx6IE4ZYKSwCGh0cYGBoMx6IE4Za6qZLI
      nvZmXEoUWRmpdPTYganNEywIM+WmApCyYNFVP5vKPMGCMFPCNk+w3+sV8wQLc46oCRYilqgJ
      FiKeCIAQ0UQAhIgmAiBENBEAIaKJAAgRTQRAiGgiAEJEEwEQIpoIgBDRRACEiPb/AerbHAKW
      vLi8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Fare' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Rate code' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAf90lEQVR4nO3daWwc553n8W9V39UnyWbzpkhRpEhTp0XLjmyt42tsZ5zxeINJJljMzga7
      gwTzaoANsgEWWGRfLoKZgScLZLITBLMIZmPMxJuMEttyLMdrW7ItWpR1ULzE+z76vo869gWt
      thmRjimySVH9fN5IZHc/9VSxfl3Xv56SDMMwEIQyJe92BwRhN4kAlKFsJoPY7K8SAdhj3j7z
      En/zd3/H//7nX2MYOvl8Ht0weOPVXxJK5DAMnUKhgGEY6JqGqmoYur76LwaqWuDn//QSecOg
      UCigf7wH/Oov/pVccoH/+t/+O3/zty8yvRzf5TndGebd7oCwOYlIivtPfYErFy4xPznEr8/+
      Fm/DQUbf+y0TYYkGR5ybk/OcfOKP+PDcGWraj2GKTDC2GOeFF77E//3Fa4TCKQ5/+Bbn3rtO
      44EjfO25x4hFIhhagbZjj/D1Lx7kn8+9w59/9bndnt2SE1uAPcdgvL+PfYceYGFqmpaD9xEJ
      rtB9/AQvPP8sM7OLnHzoQdKL43j3HeUrz54mWrDxVM9+Puy7xr/5o69zuK2R4eFxDh/vwW2V
      bptCPBrGald2Yd52ngjAHtN4oIs/+bO/wKeuYHF7mZmao+PAfk4cO8KvzrzCY48/ykdXBqjr
      OEqjPcHLZy9w6ngb11dMvPDlZxi58Aq64uOJp59i/MYVbC4vAK3tBzBZnUSnrvHqhUH+8KnT
      uzynO0PaztOgt5qSpNu/VQThbrStWwDDMBCXFYS9ROwCCWVNBEAoayIAQlkTARDKmgiAUNZE
      AISyJgIglLVNByCXinH+nffIaDrz0+P037jB0OhkCbomCKW36WI4m9NLU101hgGFQgEAVVXR
      dR1d11erEHV92zsqCKWwpWrQRCpNW8d9DA4OIUkSsry6QRGlEMJesekApOJhgtEoqYlJagIB
      xsdGqayuQZIkUQsk7DnbWgx3a9fn1pZAEO52Yk0VypoIgFDWRACEsiYCIJQ1EQChrIlRIcqM
      uGtvLRGAMqRp2m534a4hdoGEsrbpABiGztLCAqpuYOgqk+OjBKOJUvRNEEpu0wHIZ5LMTM+R
      1w0mR2/iqa7H7bCVom+CUHKbrwZVPFRXrg6mFIqEKRgSY+kCJ452i2rQPUIcBH9i0wHIZVIE
      QyFweanx+8nKdkxZdU39j6gFunuJs0BrbboYTs3nSKYzSLIJj9tFKpnA5nBiMZtEMdweYBgG
      qqrudjfuGqIatMyIAKwl1lShrIkACGVNBEAoayIAQlkTARDKmgiAUNZEAISyJgIglLVNB0BX
      81z76Cp5ffX62dLsOLNL4W3vmCDshE0HQFM1FIcdVTfQ8mkWg2ESMVEOLexNmy6Gs9gdWEyr
      uem/egWr20MoEkXXm0Q16B4hiuE+cUdDI87Mz5EwZNq7j5HLRNGMrKgG3SNENehaohiuzIhi
      uLXEmiqUNREAoazdtQFQ1TS6rmIYOpn0MpqWA1Zvys9kVijkExiGQSYTRFUzGIZGJDxYfJ8g
      fB535bhAmcwKE6Mv09L2AvlclFRqjnwuRmvbC+TzccKhflKJaSr9R0gmZ1DzSZyuRlKpeWTZ
      jNfXvtuzIOwRd+UWwOGopqr6OABeXzuSZMLlagLAavWiqVkk2YLdXkUmvYwkW3C5m9HUDCDO
      cNwpTdPQdR1VVYtniiKRCH19fb/3s/l8fs2AW4ZhkM1mMQyDXC63pu1CoUAmk0HTNHK5XPHx
      WqqqoqoqmUwGXdeLrxmGQaFQKP7OMAw0TSu2eWu6hUJhzfRyuRz5fL74OU3TyGQya353V24B
      8vkE6dQCkiQTj95EU7N4PK1kM0E0LY/L3UwuFyEWHaWi8j7isTFUNYPT1UgkPIDX17Hbs7An
      TE9PE4vFOHToEJIkMTQ0RCQSYXJykqeeeoqVlRW6u7sZGRnhyJEjxGIxdF1HlmWWl5fp6upC
      kiSWl5d59dVXSafT/OVf/iUAb731FjMzM9jtdnK5HMlkks7OTsLhMA899BBnz56lqqqKXC6H
      3W4nEAgwPj6O2+3G5XLR1NTE5cuXcTgc7N+/n5dffpmjR4+iqio9PT288847+Hw+HA4H6XSa
      J598ku985zt897vf5V/+5V8IBAIEg0GeffZZBgcHyefzHD58mLm5OWZnZ3G73Rw8ePDu3AIY
      hobH24rZrOD2tKI4a9G0PLquYrNXANDQ9AT1DY9it1fR3PIlXO7mj3//1G52fdvkCqU/lvn5
      z3/O1NQU4+Pj/Pa3v6W5uZmrV6/idDq5fv06L730UvGUaSwW4/z587z55pv85Cc/4dy5c0Sj
      UQAWFhZIp9NrTq9OTk7i9Xq5evUqyWQSwzA4cuQIJpOJhoYGzGYzTz75JE6nk+npaY4fP44k
      SfT09DAzM0MymURRFMbHx3n99ddRFIWGhgbi8TgXLlwgFosRDoeLn3v55ZdpampieXkZk8mE
      zWbj4Ycf5ty5c7S2thKLxcjn86TTaZ577jlGR0d59913784tgM3mw2bzFX92uhrWvF5Z1V38
      v6/iYPH/9Y2PI8um0ndwE6LJKO/f+ICnT/4BK5EV+idv8MT9jwMwND3MjckbmGQzx9uPcmn4
      Ml3NneiGTu/Qh3z5C39Ita+6ZH3L5/OYTCaamppoa2sDoKmpiZ6eHq5cuUJXVxfBYJBMJlPc
      ZfF6vTQ1rV71d7vdAHR1dTE+Pk5zczNLS0tMT0/z2GOPceXKFb71rW9x+fJl9u3bx9jYGOl0
      mmg0ypEjR3A4HCiKwvPPP8/g4GBx9ygQCNDa2kooFOIrX/kKiqJw5coVampqiEajnDp1inA4
      zPz8PCMjI2QyGb785S9z/fp1ampqaGpqoqlpdZf52LFjVFVV0drayn333UcikcDv9/Pggw9S
      KBTujgth2WyYq33/Y7u6sYY/cIK29q+WpO3PYyW6wjvXzvPHjzzPcnSZDwY+4IVH/rj4ejQZ
      4/LNj+jpuB/d0Dl//QIGUO31c3/7cawW67b259MXwgYHB+nq6trW9veazQ+MlYrR99Eg93/h
      JKngAkuhGJjt3Nex/447YRgamczyHX/+sxTy8ZK0+3lV+6px2OwA1FXWYjFZ1rzeN9LHAwd7
      SGaS9A5f4g9OPIkkSfzm0htcGbvKyc4HSta3zs7ONU/2NAyD999/n56eHqzW1eCFw2FcLlfx
      Z1i/lmivPhn0jh6U3VBThW5AVU0DDoeD4amlNUVwm92o6CUcrlv/+IzBbumf6GdqcZq3r7yN
      zWpnenmGiwO9WMwW7tvXhdVsxWl38v7ARXK5LB8OXaKgFVgML9HV3FWSvt/6+7z11lt8+OGH
      fPOb32RqaorOzk4ymQyRSASLxUIwGGRmZob9+/dTWVmJx+MB4KWXXiIQCDA5OQmsBunUqVPb
      3s+dcEe7QFM3b1Ld2kY+vMDkSpLDXR3I0uoukCRJm/42yGRW6H3vv2y2G59LTd3DdN73H0vS
      dikFY0H8Xv+2t/vpXaBoNMrFixdRVZWDBw/S19dHdXU1hw4dor+/n3PnzvHoo4/ywQcf8N3v
      fhebbXUQ5O9///uYzWaCwSCnT58mEonw9a9/fdv7uhPuqBp0ORwmhQmLmsEqy8zML9HSWFtc
      8TcbgFJuPqUSt/+7QvEwN2dvbktbY/Pja35uqd1HbWXtltu9tTysVit1dXUoisLQ0BBHjx7l
      ypUrTE9Pk0ql6Orqoq6ujmeffZbZ2VkOHDgAwOnTp3G73cTjcebn53niiSf27C7QXXEQnMms
      cPHCd7arG2vU1j1MZ/d/Kknb67k00sffn/lfJWn7649/rXgG6U6JatC17srrAMLekc/ni9cD
      tiKbzbK8/NknQgzDYGRkhMXFRaLRKNeuXdvUNFKpFInE2rsXRQDK2A9/+EP++q//mlQqxfDw
      MNFolBdffJHZ2VlisRjT09NrTmgsLi4yNzdHNBplcnISVVX58MMP6evrK15VvmV0dJR/+Id/
      YHl5mUwmQzgcZmFhgampKVRVZXh4eM0B/szMDCsrK+Tz+eKV21tCoRAzMzNMT0/z8ssvo+s6
      P/rRj3A4HIRCIebn59E0jeHhYZaXl3nxxRdZXFwsfr63t5ef/exn3Lhxg7feeot4PE4wGGRh
      YeHuvBAm7AxN01AUhVAoxJtvvkl9fT12ux2Px8MPf/hDcrkc3/72t1EUhXQ6zRtvvMHzzz/P
      L3/5S9xuN6+88gonT55kcnKS8+fPU1tbyze/+U0AHA4HTqcTgLNnzyJJEiMjI9TX15PL5Uin
      04RCoeLZI6/Xy4ULF8jn88ULZ7dOvfb29vLuu+/yV3/1V9TU1ODxePD5fPj9fn7wgx9gtVrp
      7Oykq6sLRVGw2+24XK7ifCqKgsfjwWw2k8lkeO211xgYGEBRFBGAcnbs2DEcDgfT09PU1tbS
      2NiI2+1mZmaGnp4ezGYzdvvqNQyr1YrL5WJ+fp7a2loymQwnTpxgZmaGjo4OHA7HmotqgUAA
      s9mMyWRiamqKb3zjG1y/fh2fz0dzczPz8/Nr3j8zM0M8Hqe6uhqfz1cshQBIJBJ0dXXh8/no
      6urC5XLR3d2Nz+ejp6eHyspKvF4vY2NjNDQ00NTUxOLiYvGgvbW1lf7+flpbWzl27BihUAiX
      y4Xf7xcHwdtNHASvFQqFirU+V69e5ejRozs27c9DHAOUsWQyWSwhfv/997elzUQisWbfvqqq
      iuPHV0vbm5qaGBoa+lztxGIxJiYmtqVPn2XdXaCFhQUWFxeLHRfuTT/96U9paGjg4YcfJh6P
      k81mefvtt2lsbKS7e7XgMJlMcvHiRVpbWxkYGKCiogK/38/S0hI1NTXU1dWxuLjI1NQU9fX1
      vP7663R3d/PUU08hyzKapnH+/Hl0XaeiogJFURgcHKSlpYWFhQXm5+epq6tjaWkJTdN4+OGH
      kWWZaDTKmTNneOaZZzAMA6vVSmNjI1arlVgsRm9vL83NzUiSRCgU4sCBA/T39/PQQw9x8eJF
      2tvbCYVCFAoFbDYbCwsLnDx5kkuXLhWPcza8HyCZTDIyMoKmafT09OzoH0XYOQcPHqSrq4uq
      qirC4TCpVIpwOMzy8nIxAOPj40xPT9Pf318si1AUhaamJs6cOcNzzz1HX18fiqJw9epVOjo6
      ePDBB4u7wZFIhA8++IDu7m6OHDlSvNr84x//mAceeIBLly6xb98+FhYWCAQCxRUWVvfde3t7
      sdlsyLJMa2srAMFgkHw+T29vL06nk4GBAXw+HwsLC6RSKebn53E6nZw9e5bm5may2SyHDx/m
      vffeY3BwkCNHjvDmm2/S2tq6fgAkSSKXyzE0NMTi4iLPPffcmtdvlTzA6pkEk8m0Z68ElrPj
      x49z+fJlYPUgd2FhgdHRUb72ta+Ry63ej+B2u2loaODYsWOk02k8Hg+aphGPx/nTP/1TBgcH
      6enpwWazkcvl8Pv9XL58mS9+8YvIskw8HsdutxMMBpmYmEBVVQ4dOkQikeDEiROk02nq6+tp
      b2/HZrNhNq+ukn6/H1mWOX36NBMTE3g8njXr2PDwMC+88AIzMzOcOnUKt9tNIBDAarVSW1uL
      3+/n6aefxjAMnE4n1dXV9Pf343K5WFlZ4dlnn11djzd7EJxLxXj/gyucfPQ04embRDIqksnG
      oc4D4iCYvX0QXCgUiMVieL1eLl26hKZpxS3EnVJVlb6+PlpaWqipqdn05zVNY3R0lI6OjmIA
      MpkMuVwOn8/3ez69Vi6X46OPPqK9vb04T3dUDdraXA9AOJXl8OEjXLt2vXhf550MjVjKak19
      h8966FrphoW8dd/sVm30nWc2m4srxkMPPfR73/95mEwmTp48ecftyLJMR0fHms/b7Xbsdvum
      27NarTz44INr2towALqu8+vfvM0zTzyC1WJZ9z0WSSKbLwDyloZGNJlKdxeXLEnFzepOkE2l
      O7Emy/KW50UMjbjWukszHInxr6/9lsGb49TVVvPAsUPF11LxMLF0mszkJPsPHGBifIyWtgM7
      1mFB2E7rBsBiMZPN53nmiUfWrPwATk8lR45WFn/u7CzvW+qEvW3dAJhMMt/686+iqrt3J5Ug
      7IR1d1gVh4NEPAqSTDoRJVsQ4/0L96Z1A5CMLPH3//Nv+dfXzvGPP/oBE6HsTvdLEHbE+scA
      NoWjx07gb2rk/qPdtNY4drpfgrAj1t0C2BQ3NV47H/Ze5L133mIpJkZcFu5NG55UzmVSNLR1
      0V7nw+0Qtw0I96YNr9rs7z5BQJGIxWKomrhwItybNgxAPBpibGyMc2dfI54Tp0OFe9OGAXB5
      K2lpaaHaLRPLrr8FSMVC3LgxwMJKpGQdFIRS2jAANquFyZtD1Bx+nO5a+7rvmZqeZX/7ARbn
      ZkrWQUEopQ2Pbq/1nqe260GWr/yGm8ETdFTffirUqdgYHR7BbFNENeit6e3hatBytGEAmve1
      cObt8xSy8Izbtu57VFVDliUKmiqqQW9NT1SD7ikbLk1foJ4DLUGQJNSCCvbbx6lvO9i9zicF
      Ye/YMAAffXAef/sp2ms9uBRxHUC4N224vbZaTLzzxlnOnDlDMJHf6G2CsKdt+NVukmV8lVUE
      qpxYS7hfKwi7acMAHDv9LK3xOJNjw6ibPKsjCHvFugGILU/zq9+8Qz62yKJUz38+ub0PahOE
      u8W6ATCM1fP5FosFi2xFDPkj3KvWDYCvpoU/+7N95HNZbg7eIJ4p4N/gWoAg7GUbHt0Wclmm
      p6bwBJqodImVX7g3bXgQ/ParLxM4/jQ33/450Uf/PYfqlNuHPzQMdMO4oydDCrtDkiQsG4zz
      VI423ALUNzby3hu/Ynw5Q+8bv2AmmLztPcHFafoHhlgKimpQYW9adwswMzWJs7KejrbV05/H
      HnyESuftZ4KmZuZwun3EEkkCVT5RDMfeKIYTPrH+WaBCipzZy8GDBwFwWtcvVnMqTpr2dzAy
      0I8sNxd/L4rhStT2NhTDCWutuzRzkVlevX6D+w+sPpRZ8QWwWW5fSds7DjI2Pkrjvv2l7aUg
      lMiGXyceXyWBQAAAq3n9A1yT1U5HZ2dpeiYIO2DdADR3n+JPuq24FXH6U7i3bTgu0K2VPzg/
      KapBhXvWhrtAt+4cstoVJLOoBhXuTRsGoO/tV7g0FiS2OIPFVcG/+8ZfUOMRu0TCvWXDr/ZM
      KkV9ayd1Xiu11V5uzkd3sl+CsCM23AIc/cLj3BgaZt9j/5bmGi8On38n+yUIO2LDLUAyEWF2
      do7LvRco2LzYxXGAcA/acK3OpVPkcgU8vkpxS6Rwz9pwzW46cIgvPf04dpNGtrBxrU42FSee
      Eg/QEPamdY8Blif7+acz71DvkYh7uvjSBmd/DF1jaKgfq7uB+zr2lbSjglAK6wbAU1VP1/4G
      FuemWJgcIpF9BM86zwhYmJmgprGFaKwghka8NT1RDbqnrBsAu7uSZ557HsMwiEVWMG1wr0te
      1UgszrEYNej61BZAVIOWqG1RDbrtPnNpSpKErzKw4estbQcxdJUDefH8AOF2eS2P1XR3jyiy
      5a8TSTbjsItvpXIxHZ1jJRWkydtAwOVnMbHMfGIRXTdo9NYxF18k4PIDBlORWQ7VdOJzeHe7
      2xsSa66wKXXuAA6LnXg2QcDlp9YdwGV1spBYIlPIYjNbSefTaIaO31mJy+ba7S5/JnGCX/jc
      DAyWkitEMzFaKz+5A3AqOss+XyPpQoYGTy05LU9bZQuGYTARntrFHv9+IgDC52dAJBMjkUsy
      F19kJjaPpms4rQoWswW/s5KJ8DSVDh/z8QXC6SiVim+3e/2ZxC6Q8LlJksTh2q7bft9S0QRA
      jauaGld18fcBVzVOq7Jj/dusyXOviAAIG5sIT5NRt/8qv4xEZ6B929vdrMbTT4gACBsbXBkh
      lN7+MZ9MkrzrATAMg7kLb4ljAKFMGQbplSURAKE8SbJM19f+w9Z2gcLL8ywGo5hsTg62iWI4
      4e41/tovMYzb67S2FACfvxbF6WJgdGbN4zc3Wwy32fdvxp0U521penrpHkG60/NCiWbFoLR/
      8/WM/OL/YKwzzS0FIBlZZnQuzOFDt58a24zSjistRq2+Y2Ww6LYUgMWlZWwWC3MLy7Q01haH
      SN9sNai0yfdvqm1p8/3Z0vTk0q01kiTt6LyUisTO/k0+y5YC0HHfke3qhyDsirsjhoKwS0QA
      hLImAiCUNREAoayJAAhlTQRAKGsiAEJZEwEQypoIgFDWtnQleH7yJsvxDFa7m/s6WrerT4Kw
      Y7YUgGA8zdEjR7h27XpxaMR8fvV5YrIsF4dKvFXDcmsIRFmWkSSp+LOmGXgrThQrBE2yjGGA
      /nH5qslk+qQtQP70zx+3rWsaBqsjwUmfmpbV1kQmkym2fasGpTgtk2lNlaVpvbY/53zIsozT
      6uRY69FPTctA/7hC1GSS0fVPqmbXTgtk2VRs63enJUkSFc4KUqnUpufj09br80btVJp92J22
      Ty17Cdkko2s6BussD+njtvVPfkZi7bL/uDupVGrbl/1nLY+q+x9aXUc+tew1XUcyfncJbcLA
      9au0dXUzNDDI0SOHb1vJBOFut6UA5DMJRsenqW1qpdKjiAAIe86WAvC7RACEvUasqUJZEwEQ
      ypoIgFDWRACEsiYCIJQ1EQChrIkACGVNBEAoa1sKgKGrLMzNkc4Vtqs/grCjthSASCiI3eli
      4MaN7eqPIOyoO6oGLWSSTMwt09a6j/GRAfyBui09KFsQdsuWaoHGh67jqN5HTYWrWLoKohZI
      2Du2tKZW+KuJBxeYXVzZrv4Iwo4S1aBCWRNrqlDWRACEsiYCIJQ1EQChrIkACGVNBEAoayIA
      QlkTARDK2pYDMDs+yMSsuBIs7E1bGhoxn44RTecxqektPShbEHbLlqpBo0szmB0OQqElOtub
      AW4bi1IQ7mZbrgVScwnmltPsa6oRtUDCniOK4YSyJtZUoayJAAhlTQRAKGsiAEJZEwEQypoI
      gFDWRACEsiYCIJQ1EQChrG0pANGVea5e72dhObxd/RGEHXVHxXC6rpHLFRibmERx+8hks2Jo
      RGFPurMAFPIEwxFsdoW2ji4Grl9Dbq4vvi5qgYS9YkvFcIVskpHRSXzVdTTUVIliOGHPEdWg
      Qlnb0h1h67l1HLDX6bp+zwRZzMvGtjUAkiRhMpmQJGk7m90VkiTdMyvNvTIvhmFs+7xs61KR
      JOmeWPmhtLtxuq6SzeZL1v7v2u2VP51Or/7H0JmfnaFwhycJSxFk0/e+973vbWuLdyTH9Wtj
      LM1OEI7FsdjNTE8skwjPoVk9KDYzc+ODDEyu0FjrZ2UliMlsJpNKomEQDYWw2BUMNcdKKIpT
      cZDLZYnH4vT29uL2VqI4bNvcZ5XfvPIadS1tDA30E6iuYnk5iMNhJ18okM9mkcwW8rkcmVSC
      eDqHw2Iik82SSsZZCaWw28yYzWYkDC7+v9eRfA1YtSRpVcZQC6QyOdRcmlgig+JwkIiFyakG
      Mga5bJqVpSmuD85SHfBjNt35ivHm2V/hb2xjePAGgWo/K8sr2BwKuppjaSWI1WYnn06QyBRA
      i3Lhwg2qAxVE4ylMqAQjCWxmiXfPn8dXGUAvZEhlVexWC5FwkJHRSerra5kbG2A2mqfa52Il
      GEJxOsnnsqRSGWRUIvE0DrudrX+HFui72EckFsNskrjYd5mq6gDpeISsamCRdOKJOHm1BMcA
      d+rTo0pIssz81E38LQdocdsBSOQlKmwGKhAOhZmdHsVZ2UAuGaK+sZmhoWEkLUtNwM/NyVlm
      xwboPnYSu92BY9tX/lWNTU1MTU6hGwajQ4O4q/yMjE6gaypSJoRS1046nsTvtTI1Pone1sSN
      0SWOd7cSXp6loKl07G8kl4ri33+Y+NIMbp+dpFlj4KPrHH+gh+GbI9RWuJlMxUhlNPR0HK9P
      YSGao73Ri0ORt7TyA9Q3NTE7OYFh6EzeHMLmq2L45hh6NkVjrZfRqXny6SReS55cTT0OuwOL
      2SAciWPBQWxhiqTaht1hx2YxGBycxGGVSHndpHUbpo+/tS1WG/4qN4VchmwyylAiS3huhLbu
      E4yPjVHhtKCbHQQ8W/17mTCZwKa4cCp27HYHVotMPJRmamqUljovMWsVhej87pdCGIaBXlBB
      NmF3eunq6sLrtFHT2EIhFUHVDbRsjGA4RjodY345BoDdVUH7/mYsVjuVvgrMsgGymcrKCgrZ
      LHXN+6nxV+BwOHDYrCXpu8nqQJFyJPMaiWSCYCiC1W5HMjTsFbWEJgfxVXqZXQzhtMpkVWg7
      2IXLbqWQyyKZzCBJLMzNk0rGCIbC3Dp90NjSRpXXicvjpcLrJp1O4/RU4LJZKBhmOjs7cTkV
      FEXBJG/tK1M22/BadaIZlUQiQTAYxmq1IFtseJyrWwK7002V10lOl3EoDiwmEwCzs3O4XA5y
      BR2HQ8FqgfBKkIIKmXSaKn81Nsvq96zNZkdxOpmbncXudKPm01TXN1Pv9xCNhEnlNSRjGy6i
      GtB99H7ccpqFcBZFUTCrSRYjGayAKskEamqwWs27vwtUyKW4OTZDy4H92CwmFEUBQJYtNNRV
      EE+pSLpG/b4WmuobyOeyuJxOFKeCU1FYnJ8hEolR17wfj11mam6F/W1tWMwmFIcDSc8TTRfw
      uJRt77skydTU1ZJJ5ziwfx/xWBJflR+vYsLmrsZilqmpq0PNJNBNNvyBauw2OzarGU9lAFnP
      4nS5UQ2Z/S0teBUbJrvz4/dYURxWhgdvYFjcdLS3EVueA8VDTaUXq92OzeogsjKHzV2B1Wza
      wnxIBOrqyaQytLe1Eo/H8Vb4cdskZmdnkT0NuOUUkZyZtsY60ollZJsLh92GzQzpvEGV349N
      KpDVbFR6bWiyhX0t+5ibHMdsd1JV6UOSJMxWG3azQSyZpcpfhdvpRHG6cNotZFWd6urV5bYl
      hsbE+Chpzcy+5noKySiG1Y2WSWBV3FRXV2G3K1hlif8Pfm3pXH61NyMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tip Correlation with Time Zone' width='192'>
      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
      HwRv5Uls2mn9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tips Correlation Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tips Correlation Analysis (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3hc53Xg/ZveKzDAYNCBQSEKARLsAklRvVBUl2XFctGu49R94v02n518
      2Y2/xF/2eTbrlRM5G8u25BI71oqyJYqSKDZJ7B0g0XtvMwCm93a/P0CBgkWKtEQBJDG/5xkS
      t85579xz73vOe95zRIIgCKRJs0wRL7UAadIsJWkFSLOsSStAmmVNWgHSXBcEIUUqtfAjCML8
      /5/unALCR851vZidHOXkuRYgrQBprhN/9PAWpFIpEokEqVSKsbQBZ99J1Aop+9omf+/zpRJh
      /v6//BFZGQZ0xgz+5Vd7r5usZ/bt5Nn/9DdAWgHSXCdefPMoqdAEOSo5Ow934htsJruonnf3
      HeS2citjA91c6OhlsKeN8+09F5/oArNTo3zw/vv0DI5+5Ckv8Ivn/xv/+uYZDjf3MjsxwN0b
      VoAgEPTOcPiDQ4w5XAgCJCJ+3v/gEKFojLNnm/BMT3L4ZBOxkJfmlk4EQcDtHOfQ4SO4fKGP
      Cy6kSXO9CE8KOSq58NqRrrlld7+gkEmEC+Nh4YW/+WMh01YgbNmyWdCpFMLzv9wjDJ7/QDAZ
      jMKW228XyoryhMM9s4IgCEIqlRTuX1Ms/N//+PMFpx9uOy7kW0zCuo2bBLMpU3hl70nBP3xO
      kCo1wjeee1bQ5TcIR954WdCXrROeuXetsO7+rwoXDu8SrFlZwqaNa4Wcomqhb9Ir7PnZ9wT7
      pocEQRCE9BsgzaKx9q7HOXToMP/z//kGv/zlK0xPjhATa7htyx386NdvsqHYMLejIOD2+ciw
      ZCw4/uV//T512/8jp44f4398+yv893/8PgCJSIiQtoSx7uPIgcBgC5UP/DlHdr/Eiz94ng33
      P8Pf/f3/h90Q5P/s/uDSCQUh3QVKs/jI5XJSySQN9z7DGz//X0RcYzx572beONIOgEgkpqF+
      JR+89/5ct0gQEASBUDiMyWgCBPR6A6FgEACpUsPf/93folfJAdDZ1/A3/+lZ5BIxwaCfqdF+
      jh8/yd2PP8eGmqJ5OaIBB9LFbnya5Uv76Q/4q2//Jf/+0x/zH//fl3j31//CT99qorzYhl4t
      Y94EEIn4y//2XRpvf4AnnvVSkqUkr+ZOnnjqC9zzxf/MN8Uu3nn1FzzzrX+e2/0j/354/IdL
      Dz30CLv+64tsWF1FKuhiZMKF9eK2VCKG5Dvf+c53FqPxaZYHEpmKjY1bsBjUc8sKLZs3b6Hj
      2B76vWLW1ZTz6Ff/nD/+g+3Y8kuQi+L4AhG+/Gd/xWN3rZ2/cY1Z+Xz1y88Q8c4g11l4aPt9
      rFy9gfu2NjDpmOXpr/9ffOOLDyISgVxjYEtjI0opiEQijFk2bltbD8CKhttoXFXOzKyHoso6
      7r97C3qtikxbAZs2bkIkCOlYoDSfPz/4r3/COyNK3vn5/1pqURaQVoA0i8LEcB/uqJjq8pKl
      FmUBaQVIs6y5shfo4jB2mjS3MvNeoJMf7GHvodPUb9jGQ3c3Iggpzre0sapuJUIqhVgiITg7
      yo9f/hVJpZFnv/xVsgzKuXiNiy8RsVhMKplELJEgEomu+KVp0twofKQLJPDvv/x3nvmDL/LP
      //hd7GvuxOUYRRrzE4lFsVY2ct/mejqP7yWU3YCrZT+lazbRfK6Dwa5zJFJS7r5rM4dPNFFU
      Wc+j925e2palSXMNXLYLlFNSzQO3bwBAqjbyyMMP4Zt1LNincett/OJff0zd+nUUlteytqqA
      jq5e8suq0Coln7/kadJcBxYoQF19HSCitqYGRCLqV9aSCLl5++BJ7r77dgAsBWXYzGoUBis5
      RUWUZKoZ6GwmqivkC088Sso7idFsWYKmpLmeTI/28MMf/pAXX/o3AtEEAF2tLQRjiQX7vfXa
      v/HDH75I/4R7KcT8zFzVC9TV1UVlZeXH1g92nSciz6Ky0ELPwDAVZfbPTcg0S8Oxt14n97Z7
      cLSdoHvUhS3LRHmRlbf2n0SXYeVLTz6Ea+g8Z8Zl5MumUZespv/CWWYm+nC6Izz21OO89frr
      FFQ2cP8dG7kRrcIFb4CZoIsJ3xQTvilmQy6Ay978AMWV9awosSGSyD7x5hcEgVQq7Wm9mXFN
      T3PPgzsI+txEgn5W3nYfqqSf+Ed+1rIVFRx49WegsyHVmnn0ztXs2f0O+vxqwn7Xksl+NRYo
      wLnxCxzsP8LB/iM0T7QBEA7P8Js332LX7l2EIjGmHFMkkwniiQSpVJJ4PE5KEEgm5tZ53OOc
      utBBKpUiHo8z7RzgTEcXiWRySRqY5tNjtGShlEnIyi3EoJKTlZWNVCLivbd2IjXlIhODTKUj
      06hBrrcSj0VZV1/GeF87bx7p4tHHdhAY70Kq1C11U67Igi7Q3p73cQZnAMjRZXOXfQvB4CRN
      XU6qC4yc73VAaJaJ6Vns9hV4pwbRZVjxhOLkZhro7OqktKKEtq4JVpZZmfXFyM5U0tQxikIm
      5ZnHH1uyhl6NVCqFSCRKu2+vQsA1gTuhJT9Lv2B90DtLa+8o69fU093dRWXF5XsONxrXHA7t
      ds2i02kBERvXNNDX0wVSGevXbyAR9dPd140IUKh1FBaX4Pd62bBxEznZWdTW1aPV6K/2FUtK
      ekD82tCabR+7+QE0hgw2rKlHBDfNzQ8sDIden7+aeGrOypdJZADIZToSgV6mUxrWNVQwqlUw
      63ZhL6vA6xjkxIkTrFvfyPhwHx6vn3xbCb7ps1TWr+X8mZPY8nLItWRiUMgXv3Vp0lyFzxQL
      NDTQS1FJ2fWUZ8lIJpOIxeJ0F2iZsUABUon4fFdAJBIjli6f+TI3qwJc+r1uLrlvFBbc4ae/
      93e4ezsByKhaybr//N+Ix8IcO34KmUpNjllLTkkFKsmVR3pb2tpZWVMNwEBPO0qTDZvFNL89
      lUww6/HQ3d9P47r1n0ebbioEQWDQPUI8GacsswQRIobcowBYdVn0zQ5iVhnRKjSMeMYoNOYT
      iAUJxEKUmAtom+rCpDZSaMxb4pbcnFz1ET8xOkgoKeaehgZ+88rL5PgixP2zBINxTDoF/kCY
      6tpaWlpa0RuNtDQ3I5HKqK4sJxTwca5jgAyTjvwcK0NDg1TW1uGYmsDj9S5G+24KsjSZjHrH
      iSZiiEViQvEQMomcaDKGSWXAE/FiVBkoNBUw5p0gJaQwKvWMeMZJpJJkqExX/5I0l+WqXqCC
      khXUlObxy1dfJTs7i9qVtXgDYR68/z66+4fR61S8f/gDJAod3oAPqy2PqvJS2lov4A9HWLN2
      A4lYAMfUOGKJiP7hMXx+32K0bQEhv5uu7m46ewYAiPhdXGhtpXdgZNFl+V3GfZMYlQZUMiVy
      iQyNXMNMcBaxSIxSqiSRShJNxBj1jFFiLkQikiCTyNDI1WRpM+mZ6U97sT4lC94ABVvvIWtl
      AwCqzLl4HrfLSf/wKDarlZJiG82nzpGbm4dELKamsoxYQmDbltvp7OjClp2LLBXlfEc3q2rr
      GO7vRqGUk5lpIRwMkUoJWIwGhLgCTWJxB8bUOj1SYZLoxSaPT05RXlnNQE/nglR+i00ylcQV
      dBOMhpCJpQiCQCASwKDQEY1FGPVOoJGrcfqnicSjOHxOxIKICc8URaZ8+j2DGJUGkumBxk/F
      spkRlkomEYQUF1rbqaurZXywF31OCWMDPVTX1MzNY7gJjeBIIopcIkMsSme4+TQsGwXwu2eY
      cM6iM2YgTkXJtGQx0N+H0WIjy2xYEi+QN+Kjb3boup3PrDZSbCq4budbDiwbBbgaS6EAY94J
      3h84dt3OV2wqoLEo7Vn7fUi/N9Msa9IKkGZZk1aANMuatAKkWdbMK0AqNMv//t//ym/efu+q
      B02P9fPySy8xNHVpHuhg1wVcocQnHJUmzY3HpYGwiAdXTMptxfk0nXiPI6daeeKxB3lt90E2
      rK3n7OnTlNVt5J7G1eze8x5f/MpXEeIBfvmTHyO1FBDsP4FP382mCiOnz/ey4/HHePf1ncSV
      mTywoYy33ztJQ+NdTHacRKKzoFAbMEqjVG/chl6RziKRZmlY0AVSa/XodRpC0RR2q5bBUQeZ
      xTVIAxPklNUT8rkAASQy5FIJQiSIuaAUl2OC8qpqHnnkYdo6ulldW0rb6aMUrb2XbL2C883d
      fO0b/4H+jhaCCSk7HnoQ39QAI7PB9M2fZkm5pAAyDatX1VGcn0PIO4szkMRsNmEvtFG1eiMz
      g20oNQYQSdi8ZgU//vGP6Z9wMdTfh8GcSVlFFfvfepOG+pW094xRWtvA6LmDtPaNsGFjPf/2
      k59R07AOe1kZYpGImqJMtNZ0Jok0S8vnNhAWj3r59S/+D4aCSh6+d8vCjckYr+78LQ88+iTa
      RXoDBH0uRiecJEVSqivsxP3TNPdNYbNmk5eTlR4IW6YsCIaLJ5LEk3MJcUWASiH7VCcVBAGx
      VMuXv/6Hl99BIuepp5/+VOf+tGj0ZvIFgb6xuUn/4XAMuVRC6mIS4KUIhrveyYcFQSCRSDsi
      fh8WKMCr73fw6vtzdZokYhG//e4XEIQUJ08cIxSJs2HjRo4ffp+GTXdg1ikBCHhnOX6ulYba
      SpoutFBWWYtneoRz59t47PEvYNJrF79VlyHgdjIw5aO2qpxkMonKaGFlZg5tbW3k27IRC8Ki
      vwHE4uvrhRaJREiX0Sy+T4uQTJKMx5AqVddSI0xE3ao1nDr2Ho7pWbRaDd5QFLNuLjP0B0eP
      4Q3GOXz8JNu3b2f37t3EIgFKyysx6jSff2uukVgigUyUZGR8CpVUQKvVMj40SbYt/4bMWJbm
      k5k4fRT/yBC2jVvQ5RYwdfYE3uF+rGs24Wg6hUQux7ZhC8Pv7UGXV4htXSNdO39B/u33MHX2
      JPGgn4onvnRtRfKOHXmPrLwSSgryCMxOANDT3YnHM4PbF8bpmCLLakUiFgMCjzz8CD/9+cto
      NHrW1td+ntfhmjFbbPxuytLy8hs7VUuaK2NdtR4hkSQZjQCQVb+GVDJJIhQkPDuNqXwF7r4u
      Crbdx9TZE0y3n0dpziQZjZJKxNHnFyMSSxYqwOryHLSquX7/h12BVDKJxxvAnBHC4ZhiYmoa
      ZQg2b1qLRCRi3Xo4euIkRTYL+/bvo6J6JU1N50gJYiyWzEW+LICQIhyNo5RLicaTKNPpWC6m
      p7y5ip2IRKIrdhEFQWDs2Huos3LQFxSTjMeZOHEIpTkDQ0kZqswsps6dRCQSE3JOkoxG8A0P
      EHRMIpbKyKpbw8SpIxjtFZ+PF0gQkkw6HNistut96qvS03yYX757jnvW2unzKfjqY/dc03G3
      shfoZjSOxWIxkiskXxAEgakzx4l4XJgrqknFY0Q9bsKuGUxlKwhNTyGRK7DUrGLi9FGMRaVo
      bfmEZpxI5HJmOlqI+/0U3nn/rTcfYHygk9Mdw1TaiyksLkF9jZ6stALcWHySAnxWhFSKVDKB
      RCZf2AWKXXiFeOtrFyWQonnmlbkDhBQdXV1UVa5gZHgAi7UAtVKGIAgMDw0QjCYpKymgpaWV
      iqoagp4ZTp5t5t5770O1yF2Q3Px8Rt/cSzzkI5ySsrqqdFG/P83nSyoe5/g//NV1O98CBRCC
      06Smu+YWxJc2tbec4+3jp7EX5nP69GnWbM2kWGnA73FwvrOXxnVrOXBgH2vWbWTfwYOE/S4K
      CothSV4uImLxBFlZWeg0qiX4/puPZDLJ5OQkarUahUKBRqPB5/Nx8uRJ7rnnyl3IcDjM1NQU
      xcXFAPh8Prq6uqivr+fs2bOsWrWKQCBAIpFgeHgYgPz8fLxeL+Xl5Zw7d466ujrOnTvHmjVr
      UCgUV5VVEAT8o0PXpd1wDXmB4rEw7X0j5GVnIJKpqCibe6L2dHficowRjcbZt/9tYjItloxM
      xPEItzfexmu7dmHLK8ZeuMgJm8RyduzYTjIloFOnFeByuFwu3nvvPcrKyrDb7YjFYg4ePIhe
      r6euro7Ozk7uuusufD4f09PT+P1+/H4/brcbjUbD2rVrAZienubo0aPzCnDgwAH0ej3/8i//
      QlVVFa+99hrJZJLs7Gzuuecedu7cSX9/P5FIhM7OTrRaLXv37kWj0fD666/z9CIPjsLvBMOJ
      zSVIS++Y+5Rsm1spQH1NDaFAEKfTQW/fAN2d7ZSWV7Jq3UaERBiJVE51oZV3972L2VbA8OgI
      ErEIv9+/6A1CSDIxMU5f+1kOnmxZ/O+/CfD7/chkMvr6+nA6nXg8HoxGI36/n+7ubk6fPo3L
      5SIUCuHxeGhtbeX8+fMcOnSI2dnZ+fNYLBbi8TjhcJiBgQHuvPNOhoaGyMzMJBwOEwwGARgd
      HeXQoUM0NjayefNmAoEAyWQStVpNV1cX0WgUo9G4JNfic/ICJeju7aWyfMX1PvXViYd4Y/c7
      hII+9Pm1bL997TUdtpyM4A9vyMcffxyVau4tGQqFiMVipFIpZmdnycjIYHR0lKKiIqanp8nM
      zMTv95NKpSgsLARgcnISn89HcXExXq8XmUxGKBTCarXS29uL3T4X7BgMBkkkEphMJiYmJtBq
      tahUKgYHBykrK6Onp4fy8vIFbs8rGcHJWIx9f/LMdbtmt5wXCCHFu7teY9oXZt3t91NRkAV8
      JBgOCdWVZYR9s/QMTaDS6CkvLVxWCnAzsFgKsMAGCDefJ3LhYrdBIsb07JcW7CwIAqFQEIlU
      jlwmIRgModVqCQcDjDlmKCspWvrEUnEffY4IT9+/lrfOnKeiYM6I0+jN5KVS9I/PvcLHpxyU
      r1jazHCLGQx3tbYdOnQIkUiEXq/H6XSSl5fH2NgYpaWl9Pb2sn79ek6dOkVOTg4ulwuZTMaa
      NWs4ffo0er0epVJJeXk5v/3tb3niiSc+9t379u0jOzubqakpioqKrlh77kOu9HukrnMGvAUK
      EO3txf/uu3MLEsm8AsRiUc43N5GXX8DI+CRdPT3kZhtQKnQIEglDfZ2I5DoKCwtQSJd4govc
      yNaGUj4428NDd987vzrgcjDoDFBbVU4ikUAhlRCJzaWDF4nFt3QwnCAIn6gAgiDQ0tKCQqEg
      lUrh9XoZGxubT7fo9/vxeDzzXpv+/n60Wi1erxedTodOp2NwcJDJyUlcLhfNzc20tLTQ2NjI
      1NQUer2esbEx2traKCkpYXp6msrKyk+81ld8A1znh8ZVf4FYJMCPf/IyJeUryMmxoZEJ2HLz
      CIdC3HbbRmZ9LvJz8/AHgjfGcHvMz/7Dp5CIBMYmpuZXx5MpZCQYGZ/CNTNNTkEJs+ODWHML
      l30wnCAIqFQqlEolGo2G/Px8tm3bhtlspra2FoVCwdjYGHl5ecTjcVQqFQqFAqlUyvj4OKOj
      owwNDQHg8XgYHh7G5XKhVqtpbGyktLSUaDRKVVUVxcXFOByOTxZoEVnwuBDJ5Yg1FyM4Lz7J
      5UotX/6Dp2m6cJ6c7EwGprxsu209R4++R29vLzqVDoNWixDvZnB8kqriJU7NJ5UTD/qJRCLE
      P9IdMFlyMFlyFuxqL795all9nojFYr7+9a9/bH1JSQkADz/8MABbtmz52D4fsm3bnNfwjjvu
      +Ng2jUbDn/7pn84vr1q16jPJez1ZoACGRx7G8MjDH9tJZzCxdcvtBIN+RGIF0zOz3HPX/QyP
      jLFt81YmRocoKqtjRVH+ogl+RZIxTLml3H333SjVN8ZchFsFQRDw+XzodLr57lsqlbruXbnF
      5PeaPaHR6Cgru1TztbR07gmRX1hMfmHx9ZXs0yKSUVlio+ncWSz5ZaxKh0J8aoaGhnjzzTd5
      6qmnUKlUaDQa3nzzTbZv345SOTcfxOVykZGRgVKpRCQSceDAAcrLyzlx4gSCIFBdXU1t7Y0R
      En85FiiAI+DHGQgAIBJBTXbOZQ/6XVLJJN5AEJNh6ePr+3q6mZ6e4UJ7B0+VVC21ODc1RUVF
      2Gw2ZmZmGB8fJxAIkJMzd0/s37+flpYW6uvrMRgMNDY2AjA2NobT6eTMmTNs27aNtra2m0cB
      LkyOc7C/FwCxSMR/v3c7gpBibGycvLw8YpEAew9+QEFhMamoH8eMh/ziUnrampj1Rfnyl76E
      Qra0XqCOthaSEi0SpRZ74bUpcJork5ubi8ViYXBwkJKSEnp6ehgbG5s3atesWUNLy6UR98rK
      SgoLC7FYLPj9fjZv3ryE0l+da5oSmYxH2fXmG8jkEBOUeH0+PK5xHnrgEXbtfQchlcRsyUIm
      Wfq+4I6nniWZiNHd0Ur3wCh1lSVLLdJNzcaNGwF46KGHgEsG7Eef6lardf7vDRs2AMy/KW50
      rn7HCgKjY6Pk5RdTlJuLvbwSx+QYgiAmHA4hlcjZsvUuHKM9dA4ufb0tBIFzJw7T0jVErs16
      9f3TLGsWvAE2FhSz8ndmcYnEYjZvmXNxCakU586dobqmjtwsI2ebLrC1cSttTWeQaTIpW+zI
      z8uR8NHU4+SZB9bw2t7DfO2Je5d+dDrNDcsCBdApFOg+ISZbJBazZu2lWJOtW7IB2HDbZurW
      RJEv9SgwAHL08jh7Dp1FCMc53zkw7wmKx+NIpVJEIhGCkCIYDCGRylAprx6HnubW5Lp02sVi
      MRrVDRB7Hw/T1jOATq9HIpWzesPm+Zs/Fg5w5sxpIom5kICwa4LeUQehcGQpJU6zxNxaWZSk
      ClxuD/c/OGewfXSARq7SkmfLvrSvTI2CAFPOaUwG3bIPhrvRWJJguJsekZiTh95loG/OlVu5
      aiMb6ioASCbihEIhQqEwkWQEsVhEtjWbkeHRZR8MdyOyWMFwt5YCACVVq3ni0Uc/tj6ZiKM3
      ZpKIRdBrVSgUSmanp6mqqlr2wXDLmaV33F9nLnfzA8iVamw2G9mWDFQqNWKxGEt2Ngr5LfcM
      WFIEQeDFF1/k7Nmz8+s++OADUqkUe/bsWULJLs+t++vH/JxoH2HjquqlluSG55//+Z+Znp4m
      NzcXs9lMIBDg8OHDPP3007zzzjvcfffdHD58mOrqaqanp4lEIuh0Onp6enj++edRKBS89NJL
      tLa20tjYyGuvvcadd94JwNTUFP/wD/+A3+/n1Vdf5fDhw5SWlnL8+HFeeOEFNJqlzR/7qRUg
      Fo0glsqR3gCjvwtIxThy+AjRRApEUrxBOwZN2s15JZLJJOfPn0cQBDZv3kxTUxNWq5VIJEIy
      mWTHjh3U1NTw8ssvo9fraW5upqGhgdnZWZLJ5LzN5PF4SCQSNDY2MjY2Nj8f2Gq1zodIr1q1
      CpFIhMvlIhaL3RBRpPNzgn/z7y8x7Y1SXL2OretqUMhlRGNJIElKACGZAImMkZbjeDUlWBVB
      NNYy1ESQKtSQShCPx1CotcjEIg689Rr9kz4eeepplMRQaXS88/rrbLn/AXQKCdF4Co1aRcDv
      QypXIpeKCYQi6LUaotEoiUQchUpDMhFHoVByzbZpzMMPfrqLR++o47d7j6LNKeNrj9971cPS
      c4KvTiwW41e/+hUGg4FHHnnkc72BF31OcBgl3/ij5/j5L37OW84RHrl3Lb890MtI60G2bn8G
      Z+9Zzg/7WJcvo9vvoDZPijGY5OjRE0gUKmyqOBGxGKW5godvX8lUUMQ3/vA/EHRN8OudbyDR
      25joaEJjy2eisxlfKM6G9fWcahlAJpWTpYriCUYpXbGKDw7uZfOmNfgwEXWN8cSTT167oSrT
      U2HTsu9oM7c1bgbZjZOi/WZHLpfzta99banFuK5cKpOaTDA9NUY4BiSijI5PkgLsNWtZW2Vl
      xi9CIiSwl9qpqqtHLoaAe4bi6gYUJJCojOx4eDvJkB+RVEbAPc3k1BTdHe2Yc4uJhCOUlVWw
      ckUpTpeHXFsOE+MTNGy4DZUMApEkG9fVMzs7S+3aRrbdeS+z3Ucx5JQi/n0eyokIgVgSizWX
      3IJiVlen65BdKydOnODAgQOEQiFef/11YrEYLpeLeDwOzPnmg8EgwWAQn8+H2+3m/fff55VX
      XiEYDBIOh4nH48zMzCwY4/B6vYRCIXw+Hx6P54Zyyc6/ARpqKjh26jxPPvUkSe8ErX2jrKsr
      RyqKI5EbsBdmUb6yluKVZfQdPEJ+9WpMWfm0nnwf+x13oxbFUci1rK6vQixV8PiO+zh++hwb
      N6zG2dzGlk1rsWihs2eEJx5+gLYBJxtWVfLO3v0Ek0q+8MDdnDzfwz13bcU54yWVEtDrM6iv
      +z2NWImcvBwrnV1dtHVnk72x7npfs1uWY8eOMTMzQ15eHu+99x5ms5lXXnmF1atX8/Wvf51U
      KsULL7yAVCrFbDbzq1/9ihdffJG+vj5eeOEFjEYjsViMt956i29/+9vccccd+Hw+vv3tb6NS
      qfD5fAD86Ec/umHis+YVoHrVBqo/nKppKCO7oGzBjlvvvm/+7/sfvH/+78Y7FvavS0vmpkVa
      cot5OHdulth9914Kjc26GC9XXAkhjxOj0cydm7aSkWXiwZy5hEvFBRqiITf5K9aSpf89DVgh
      hbXATm5ePoHkp6txtlx58skn+dnPfsbs7CxisZje3l6i0eh8KkSpVEpDQwNKpZLe3l42bdpE
      b28v/f39rFu3jpMnT7Jjxw5cLhcFBXNzw1UqFfn5+RQVFaFQKG4Iw/ejzBvBgiAweeaSQabL
      K0RnuwHm+P6eHHjrN8yEklxo6+Jbf/lfMOrUwFyGa6fDQWaWFYlYhJBKMjI0iDErF4NWlTaC
      L8PExFw1IJtt8es8LJYRfEkdBYELP/r+/MfRfBqA7vZm9n1wlKHRcQB8Hhcvv/wjfIkEh97b
      x9mzZ3HOuOay9vq8+Hx+3G4XiUSC0YlxwqEgLpeLZCpFNBYnEgnTfPoo7V29JBIJXC4XKUHA
      6/UQDIU/c4OyrDnIxGJEqQQub2B+fTwaZsoxRSw51/+cHOlHnZHD8EAfN06PdGlxuVy43e75
      ZZvN9rGbf2hoaIEyOZ3Oj52ntbWVUCjErl27FtgCMzMz80p1o3DVcYBEIo5SJuAPBHC7ZtHo
      DFStKCUlCIjkCoJBP9F4nGQswuu/3UlCgBUVdlCb8QdmcA8OYCssQK7PJhRO4MrBJU4AACAA
      SURBVJnsJ9OgQYKKg+/tx6DXE4rFGBseZePG2yizf7ZJ7CvXbGLlGnjowfvxhuPz6+VKDSbD
      pQn9oViCPLUKp0Q8VzBhGQfD/eQnPyEzM5Pjx4+TSCR45JFHOHXqFHfccQd79uzhkUceYe/e
      vVRVVfHDH/6QRx99lCeffJJYLMb+/ftxu93U1NRw/PhxduzYweuvv85f/dVfcfz4ce6//35k
      srmu6M6dO6mrq6Ojo4OWlha++c1vXlGmxQqGu2qHLLegjI3rNtDR3kIoGCSZuiRAdVUNaxtW
      c+HC3LB3QUEhWVlWqqpWEIvFAMiwZFFZWUo4GiWVTBCNxjAYjViysnC73aQEESazhbraGi50
      dVy3hslVGizmSxmHwwEvY+MTjIyMMzE+SlZmJl2d7YhlKsRi8fwrVyqVLtrn8wqG+92PRCJB
      JBJd9gPQ29vL8ePHue+++8jNzaWzs5N7772X/v5+mpubOX78OO+//z4jIyNs3bqVnJwcent7
      OXnyJNnZ2fh8Ptrb29m/fz9+v5+Ojg66urrms8F9+F1isZj9+/czOjrKkSNHiMViV5RLLBZf
      sS3X9Zp91AYIOi69nuRaPXKtjmnHBH0DwxSW2LFlW/C4Z2hr70CtN2PSyJlyzlK9sg6tUs7U
      1BTxZJKcbAsz3iDJZAxRIk5GphlfKM5wXw+xpMDa1XU0X2ijpLiIvv5+CopKmBwdxphhoax0
      aebwLlcbQBAEhoaG0Ov16PV6RkdHMZlM6HQ6RCIRQ0NDZF18WH2YPc7r9ZKXN+fNCIVChMNz
      XVe/349Op2NmZoaMjAxcLhcmkwmLZa4859DQEKlUCrVaTTweJy8v74rXO50depFZrgpwo7Lo
      RrAgCAgR16VP4rMbpGluTo4fP86rr77K0NAQ//RP//SJ9sOZM2cIBoPs2bNnPpnulThy5AjR
      aJS33377hhkMk3znO9/5ztyfAsl3vojQvwuhfxciqRJRRjV+r5vde/ZRtaKSM+dOMzU5hVqv
      RymX09baTHd3N0mRlI7W5rmuUmHhx56i4aCPcCKJQvZxv/zZpmZsN0AKDUEQFvSLFwNf1M+Q
      e/S6nc+kMlBgvHxigt81uP1+P1/96leRSqX87d/+LQcPHmRqaoqXXnqJr3zlK+zZs4eHHnqI
      AwcOUFZWxp//+Z8TDAb56U9/yoULF7jtttsQiUR873vfY2hoiJaWFl577TUyMzP567/+a4LB
      ID/4wQ+Qy+XY7Xai0Sh/8Rd/QSQS4dSpU7z++uskEgm++93vsmrVKkwm0wL5rlQnWEgm6X/7
      N9ftml3VCySVyZFJ5wQZGeqjoLACtUIJQHlFFV0drfT3dRJNSMjRSxiZnCHhGae1fwLXrBOj
      QcvahhoCERFNJ4+hNhjJy8+lvLKeY4fep7+vB41Wy1B/F7F4ivz8XJwzblaurMeWbfkk0dJ8
      BhKJBDKZjN7eXsrKypBIJLS0tDAzM8PBgwc5e/Yshw4d4ty5c9TX1xMKheYHtb75zW/OPyga
      GxuZmJggNzcXu91OZ2cnPp+PmZkZtm/fjsfjAUChUPDEE08QjUYpLCxEoVDMl9D6vMqhXgtX
      VQCVWjM3cCQIPPLIF3DPTPDmO3uxFxdSWVYCiIgnY4hEakQiMYIgEIvFqFu1hra2FjL0EIpG
      iEYl5BcWI5Ul8QSDJAWBYDhMTm4+FfZCjhw7jD0/F6VWR3JiEo/Pm1aAzxGTycQvfvGLK27f
      vn07AFu3bl2w/Ls89thjH1v33HPPXXbfL3/5y9e0bjH5iAKIENf9yaUl41wohHNqgngsTmdP
      D373DMFQmC2Nt5GVYeTM6ZPE4nFKiitxjg8zG4xTb7MwmfAjUyvJzbGiU4FWp0OpFKOUShBL
      UmTJFDSfOoHJlEGOWUNb1wC1leXE4wJKqQStVjfvO06T5vMk7QW6yHL0AqVSKX72s5+xbds2
      ZDIZPT09rF+/nmAwSGZmJmLx3Bt9ZmYGnU5HMBhEIpHMV3T8MPCtsbGRM2fOcN999+FwODCb
      zfh8PvR6PW63G71ez6uvvsrmzZspLCxkZmaGQ4cOsWrVKux2+2W7QEtSIyzN8iIWi3HkyBE0
      Gg0ZGRm0t7fT3NzMwMAAzz33HA0NDXR2dvLSSy+h0+no6+sjMzOT559/HpFIxPe//32mp6ex
      2WycPXuWrKwsvvWtb/Gtb32LN954g4KCAkZGRlCpVHg8HmQyGW+88QZms5lYLMb3vvc9nnvu
      ufl8okvBvAIIgsCujnfnN6zIKqfCsjAsYWCgD7fbS2lFBUbtwuITyWQSl9uNJTPzY1/icExg
      MGejXMLM0UIqwdDgIObsPAxaFUI8Qnf/EFqDmbycrCWTaylRKpV85Stfob+/H7FYzOTkJCqV
      CpPJNF/82mq1otfr2bRpE6tWrVrgvqyurqatrY2ZmZn5mP/169eTSCTw+Xxs2LCBcDiM3W7H
      brfT0tJCQ0MDp06doqGhgdWrV6PT6a4k3qKwYCT4l+dfm99Qn1NDrXUF4VCQpqZzmCw5dHY2
      sXXzXWSYzcRiQd7Z+z4yiYBMKqdh7XqcjimGhgaQyuTUVpWTkqiZco7R13Eea2Et2QY5I+NO
      Vq6soa21nfzCYirsizPyO9rfhTqrkPGhPlbW1uKdHGQyqqQ0LwuZVLIsu0CXo729nbKyMuRy
      +aeWw+Vy4fP5KCoq+tTnuGG6QK0tTQRjSVYV5pNlNjA82EP3gIr6FfkYLDZi8WmqrFbGJyZx
      OiZJyRTkZuoYGBpEn1nA0Ogw1hwrVTU17H393ygsKKX5wgWC/iD5i3izRRNJLCol4ovTyzSZ
      NswuD61tHdSvrF7WwXAfpaqq6vfa/3KYTCZMJtNnOseSZIYrNl0qcGdUzlV7WbdhM6FgAIfD
      yeTYEMFQkPwSGyKRGKVcjlisRCKTIxNkKJQKxALI5Qp0UhU9na3M+n2sKKimpamJgsJiBJGU
      8pICxsfHGR4aoqJ0cUorZVsy6e5oQ6HWMTE+ilqlwuV2I1co05nhbkAWKzNc2gt0kXQX6Mbi
      hukCpbk1uFHm4F4riyXvAi/Qz/deGhlcVbaKutKVC3YO+H0Ew1GyLJn4fV5EEhk67cfTjkQi
      YaQyxWWTZoXCIdQq9fVsQ5qrcKWuUZrfUYCjbcfnN1iMFupKVzI2MognGKOqopyx8XGC/lla
      uzpxzbpIxcM88cQXmJ4cZXzSiVgiRa5UYdAqUOuN9Pf0oTMYMWqUZFtzGB4fYfdbb7D9gcdJ
      xcNEk2Jys0x09QxQs7IOrVq5JBchzfLl6jPC8otIRTzsfPMtsixmWts6UItiFJdVkJdjwhWK
      0d3ZQkFJMeOjw/QNDjMxPorTNUUgJaa7b4D21mZSyRhtPd0UFBWSm53BybPn6Gpv5uTZM4QT
      CUQ3VrKANMuES7edCMw68/xHKZ+r+DI+OgRyPU889ACTU042rN+AOxhhuL+XiSkPJrUcsUiC
      WqVCp9UgFl8yXHQ6LWKxBLFYRHdPD9FYglQihdvrIxYJYzRZKCutQBwP0d49sNhtT5Pm2r1A
      giDg9bgJRaJYs634vG7EUjl6nZZwOIRCoSQajZISQCIGsUSCIEAikUQmEeFye9Dp9YiEFJFY
      AqkEItEERr2WGZeb7OxsJJ9jzph42E/PwDB6czb5ORYSkSDd/YPoTFkU2LJuaS/QrcSSeYFE
      IhFGk5kPp5kbTeb5baqLRq3qMnXCFBcHFD9aS1Z90W7+sK78YkyIGR0dobisioGeDvJzLIyO
      jlBoX8FQbyeCbXmGQqS5BQtkXBnRgv/m/7zJ3INpri/LRgHy8/MZ7O3AmGFlYnwUW14BQ32d
      GEyWdImkZcyycQ7LVDqqq2sWrPvd5TTLj3QoBHOBVx8awYtJMpUknLh+dYqlYilK6eJWw0ml
      Uot73QSB8Oz0dTvdZRRAwO8PLHmc9mLz4WW42UIGlpoPs2ncrMylRREEvv8//o5zzRdQmPOZ
      nRolK9OMc3qWVMLNzt8cwl5ehGd2BrFMQSwSxuf1oFCpCfm9ROIpktEQoXgKpVzGzFgvL/3s
      13hjYnIytHgCYaKeYXbva6bUXoDXNYtMoSIRDeH2+pHLFQQ8LpJISMajhMNhItE4cqmYcDSO
      TPb599QWOyXKh8RjEdweLzK5ElEqQSIlQvIJFUESsRiIJfO2e8DrQ6JULJkxt5jXTBAEAj4v
      SUSQSiGWSD7RfovFYvMBdZGgl6RYifQjF0oQUpdsgMz8Mv7gC4/zb7/+DVIEJnovMOIT2LS2
      ku6uThwT1bx3cD9xRSby0ARKmRhLxRram86xfuN6Lpw6SUyQ8o0//SNOHjnJM9/4YzIUEo4d
      fJuDR85wx92b6ezqIC8jReewE63BQmCyF7EA9lWruXChCxEi8kwi/NJMCLpZuaKIuMFOQ/ni
      p+deLBwDQ5CZwUhLK9WVRYQFJd6RUVRGC8QC+AJRCosKmRwdQq41MdlzAWlWKXabkbHJacTR
      KEmXAkuGFZP+1i4H5XcOMRaQY9bGGexqw1xox2rU4fMHMOlUONxBigptjAwOYbJYaT59DHtV
      Pfm2bPyzkzgibrIzTciJ4XQHKC7IvfTgCIf8dLacQ6HPBqBsRQ0x1xhxZQb5ebmEnINosgqJ
      R8IYLLnct20jXtc0usw88rINzMx6yDDqiCUhM1NLc1MbYxMT9A1NYsvUY7TkUpCXTzLsI5aS
      oFFJEaQaCm0WQgEf2QV2lOIkYoWOHTu2s6WhnNcONFNTuvRJsz5XRBLMmRaytXI8AT8ef4Dp
      WS9SiZhpl5e8bCMj45Mkkkl6enowmy0UFxcwODxKcVEhYpEIa24+zqmxpW7J547GbCUZmCEQ
      jmLKyKK4KJ+h/l60RhNdPb1I4l7OnT5HWKSgr6+fLKuN/BwLI4MDhKMJMrNzmJ12kEgkCLgm
      mXS6L2WGiwbceOMK7rmjEb1eh06jJCk3sm5VPdKkD1N+ObGgn/r6WgryczFnZmG2FpKljBEW
      6amryEOkNmEvzCWvyM7MSA+CXE9upg6jtQi7vQJxdJbSuo2Ioh4K7VVo8XOquYMN9zyGJjZN
      Wd16inKtGAxGSEZwhUSsrim7ymW5ufHNTBMSUsy4/OSYVIQFFXqlhAnHNKTiJJMJQMAfSoEQ
      x6RT4o+LIBokkYJ4JIbRmoXfNUtGxsfnY99KRMMhRHIlszPT6JRSIoIUkilybdk4J8dJSZQY
      dSpc3iBmkxkhEUai0GC1WomH3Eh12YT8LjxuFzqNGrFUtbReoI7mU7jjcjaurUf8O33J7rbz
      ZBevwHiL1/hNxKL4AkF0BiMSUqQQEw76kSs19PV2kl9Qgk6rJuD3IVOoUMgk+PxBdDo1Pn8Q
      jUqNVC4jEY/f8rmUBCGFz+tFodaikIrxBUKoVUpkMhnJeAxfMIzBoCfo9yJTaJBJBEKRODrt
      XLldJDJSiThCMkEsKaBUKC4pQMo3S7Ln9PyXSSs3INKarijMJxEKhVCr0zH/n5X4Mripl5pL
      8wGmR4j99n/ObxB/45+QaE2cbzqD2+NFb8mloXYF7a1NOGZ92MsqyLdZcbtmSQqQTMTJyMxk
      bGKS9tYWHnzgARwOBxmZFgI+D4JIitlkvKwQaS5P+ub//Lmqf7G4pIS+fXux5BYyPj7BuaYz
      FBVX4vH5yM3O4J13dyMWoLq2js6BMYKhuVKYzWeOkpDrONPcjGvWyfr1jWkFSHPD8YnuY0EQ
      SCFm2+3bGOjrQiqVojdnsrphNd29PQBYbblkZWZQZi8nkYjNH+vzuPF6/GSYMti4dh2nz577
      fFuSJs2n4FJirEQMIeC5tEFrAomU7q52fP4QK6pr0WlUhEN+LrS0UVZZjVmvYcrpgGQSS7YV
      56ybVCoJqSRZGWbOt7SSlZOL3zWNTK2nsuyzFcBLk+Z6k44FWoZcOH2UcVeExi2bGe1tw17d
      gEIKkKK/b4jS3yNbXyoR49jhD8goWEGVfa6udMQ3w0xYSl72jd/lnbcBEqkEofilwCy1TIVU
      vHS5PNN8fjR39HB74wZeefV1VlfkMz3Ww579h1i9uo6f/fRXfPXrf0h/+zlUlhJyNHE6ewap
      2XgX3oEmXIKBIqNAc980f/DFJxkb7EWWUUCGQc37777OsBvshjC7Twzx9a8+xfsH3mPL/Y8w
      3naEwXEvO556nHd/sxNrWT0GeZQJpweTXkd9WQ7jcRNVhYs7ljFvA0wHXezq2DP/cYXcCIJA
      Z2cbJ44d5sz5NgCmJsZ4c9+7CILA8eOH2bt/H7HEx9PVRSNB3F4vB48eXbzWpLkmpDIlRaWV
      KMRxRocH8fv9xJMCmkwbGzfcxsqyXDJyChjp62Jyepod2++l/cJJhjxiHr53CydOnyNTHmLA
      MVfhpaayjGyLCZlST3hmHGtRKXc+8BgdZ45hr6qkpfko4zMiqvPNXDhzhPLGHUwOtdPb1UHj
      7XcSmR1n96Fm8nLMV5H8+vOJRrBIJGLFihrC4QDFJUUAGEwZyJWQjMeYdXuoLMyivW+QiYE2
      dv72DX78kx/z6muv4nA7GHY4CEeiHNj/Nm+9tYvz58+y6623GRi5fnWx0vz+CMFZ/vWHP6Sk
      qgGtVgciMeJkFK8vSirs4GRTCy3nW0iJpGi1+rlUlyYryugUr+/5gOKCXBz+JEa1DJPRxE9/
      /EPeP3GO9gsX8EeSGCw2Wo69ja2knPbWDmy5ZSSDoxw81kRhxUpO7XkFsSqTzJx8MrRKtm7b
      xNCED7188UP65m2ASb+TA32H5jfcW7aNLG0miXiEXXv28tDdd9LW1UddfR37j+zlro3b2LNv
      LzX2fLzoyRD5CUnM9Ha1YMnQo8+24A8JOCcncQ4PUFlZgcaUxdToIAaLjQ2r6xa9sdfCzR7e
      e6Ny/uwJRsZnuXf7gygkC6/vUFcTPrGFleX5iy7XvAKE4xEm/Y75DTadFaVMwfhIHyJ1BrbM
      uVHh0dFBzre1UVW5klnnGL5glNu33o5vZpyYWI1zahydRolSryMSE/B7vRAL4fEFyc3LY2x0
      lMxsG9UVN2aMTzKZXNKibWkWl2XpBUomonS0dWGvriHicTLumCUnvwSTTkkymUy/AZYRy2ZO
      8EcRiaSYDDoSqRTjzlmqq6to7+gio7oKQRDSb4BlxLwCuHu7aH7xe/MbVv/ptzAW2+eXBUGg
      rfU84ViShtUNH5u15Pd5QSRidGSYquraRRD90yOWSOblTz/rlzfzCpBKxIl63PMbhEQCQRBw
      TI7T0dVN+YpaLNZcOi6cZsrtJ+Iao3/UQcDnRq3RsbKiBEGqwemYwuvzEAjFKLcX0zcwTGVV
      LbnZN06sejQcwOly44lDrtVCe0cHeYX2qx+Y5pbjql2g8+fPYbTkkW0xc/rkEeS6LGxmHef6
      ZqlZvYbW1lNIgiF8HheoJaSScdq6BskxmxmbVOP3B0C4vmVtPisKlZa6Vavnl40Z2UsozeKy
      DE2+T2ReARRGM/lb7p7fIDcYEYlE3Hv/DnweF85pB53dg6yqryMcjaFUqZBKxGhUasSIkSuU
      IJeh0RnItwmoVTps2Rbi4TBTDie51uVzk93IJJPJyypBOBxGLBYTi8XQarWIRCJGRkYIBoOs
      WLHiiucbGxtDp9NhMBgAFtQVnp2dxWazzdcKHh8fJzMzk0AggEwmw2QyMTMzg1qtxuPxkJOT
      w8jIyHx51aysLLxeLwaDgZmZGeLxOBqNBp/PR3Z2Nm63e37f3NxcRkZGMJvNmEwL57H4/X5c
      LhcFBQX4fD6USiUKxdxEq2XpBfokbnU3aOJi13ZoaIiBgQEaGhowGAw4HA6amprwer00NDTg
      8/mor6/nzTffpL6+Hq1WS/LivOTKykqysubyqb7wwgt86Utfmr/pWltb2b17N+Xl5YjFYtat
      W8fzzz/Pn/3Zn/HGG29QXFzM6OgoWq2W+vp69u/fz7PPPsvu3bvJy8sjEomQTCYZHR0lNzd3
      vr7Z3XffzWuvvcbTTz/Nzp07eeKJJ9i5cycPPvggk5OTjI+P09/fz7PPPovT6SSRSFBXNzfW
      FAgE+OUvf8njjz/Oyy+/zIMPPkhNzVxStPk5wWnmEC4Wy7tV+bAy5eHDh8nKymJoaIipqSmy
      s7M5dOgQBQUFjI2Ncfr0aTZt2kRPTw8Oh4NgMMjZs2dxuVyIRCIKCuYKKhYUFHDgwAGKiorm
      ak3v2kUgEODOO+/k7NmzOBwOYrHY/BM3kUjMV4AcHBwkEAiwYsUKZmZmiEajGI1GpqamMJlM
      iMVi8vLymJqaIjc3F6VSic1mY2pqirq6OkKhEMlkkvb2du68804qKirYt28fTU1NCIKAyWSi
      p6eH/Px8/H4/zc3NhMNhlEoldvuczTf/BhifmeCtk2/PX6iHNz2E1WxdcPFi0QjRRAqtWsXk
      xDimDAsq5cfn7Hr9PpLRCFKVDr3m4xmjb2SWyxtg165dyOVy7rjjjvmbs6uri7y8PHp7exEE
      AYPBwODgILW1tfT29lJZWUl3dzclJSXkXMzoff78eUpKSvB6vWg0GsxmM6Ojo4jFYgKBAOXl
      5TidTnQ6HU1NTdjtdsbHx9Hr9djtdsbGxvD5fDidTmpra+no6GDt2rWcOXOGiooKhoeHqaqq
      YnZ2lry8PGZnZ1Gr1YTDYQYGBqioqODkyZPY7XacTieVlZU4HA4ikQirVq0CwOFwMDIywurV
      qwkGg6RSKYzGuUjVeQXoHOnie68+P3+hvvXFv6Qs10576wUUWiOlRfkcO/IB3riMokwZ3oSS
      ybEBHn/4MTrbzzPrCaJUyDFbrMTiEZIBF6rMIrzOEbRGCzJRgimni4Y1a5BdpnbYjcJyUYBI
      JIJcLr+l33bXwlVbX1VdS0/bOU40XWDd+k1IRDAxNs6q+lpEF4OXBoYHyDEqkKmNtHZ00Tc4
      CIBjtIeBiRkOHzlEd18XAuls5DcKTqeTd955h8nJSWCu67d79268Xu/8PqdPn15QzHtycpJw
      OEx3dzcnTpxgaGhoscW+7lzyAknlC7o8culcZYuOjlbq1tyGzWqhv6+XaaeTuspcjh8/iSgx
      pwAymRy5TIpSorgYRjBnVys1OsLDE5SWlJKbnUHLhfPM2MuxZtw4EyWG+ruJxFLI1HpKC3OX
      WpxFo6CggNOnT6NUKnn77bexWq0YDAai0SgdHR0MDQ3h9/sJBAJs2bIFqVRKT08PHo+H06dP
      8/+3d67BUZRrHv/1dM81M8PkSu43cieBQBI0wuaAgsfaVTGcctFzwNqttfbGWltulVb5yRKt
      sqRqLbdKz+qqn6jKB/eAdbBWPWIil5RRQAQyCbmSCyHkQpLJZO6X7v0QGEGCQSCZ0Jnfp3c6
      73Q//Wb+3e/b/VxWr15Nc3MzL730UrRP5a74VSWSpiYnUQCr1Yrb7cIUZ0GnlfD7/UiiBgUN
      oXAIAWbLHWlEvO4ZBFFC0mjwBQKssFqXlK9NX1c7M74gphUp5GetVL0v0PVV4w8cOEBZWVnk
      cWcgEKCiooKmpiZGR0cpKyvD5/Oxe/dutFotx48fp7i4mIaGhsgCdceOHVE+o7tj2T8GPXvm
      R0rLSmnv6KVyzeplswYA8Pl86PV6JicnsVqtOBwOdLrZO78gCOh0OhRFQafTIYoigUAASZq9
      4Pn9fuLi4u771C3LXgBel5Ohy6NkZOViMmiXlQBiqLxE0v79++ftYzRbKSwsxGS4v69kMe4M
      VQvA6/Wyf/9+pqam5u+8iDjdzmibEOMqqp4CNV8XkL9p06bb+s6vnQKd7T3Hhct9bCx/iBRb
      MsfOHWdqZor1hev4oftHfAEfOzY9xenuH5lyOUi0JtA+cJ7fVm8jLXHxU7/HpkA3ouqAmNv9
      0d8N5wc7MOoMBK9mxfMH/ShAWJaJN9tIsaXQMdiJrMhIGhG9Vk+c3oTJoO5iFvcLqp4CAVyZ
      mCIcXjh37BVxVkqyi+ka6mHa7aQwo5CizEIGRge4Mj1B/0g/3oCX0clRzg92YNIbSVqRxJme
      MwtmU4zbR9VToCuTDj77yzdIksTvf/c3s+8m5uHXToG8fi+dF7soyyllzDGGXqtneOIyq3PL
      GHOM4wv4yEvNBWBsagxJkjjV+QO/WVuHQWe401O7Y2JToBtRtQC+bGrm6Len+I9/fo6kxPjb
      esG1GI9Bw3IYMUpZ92ICuBFVC2Dw0mUUWSEn6/aL7M0lgP8+9AGdF7vutXm3pCKvnH/4679f
      kH1fE8D777+P3W5n586ddHd38+yzzzI+Po5Op+PgwYNUVVWRl5eHy+UiISGBiYkJsrOzGR4e
      xmq14nK5sFqtkUCYw4cPk5GRQXp6OhMTE+Tn5yMIAh6Ph/7+fjIyMti3bx/JyckYjUbsdjuv
      v/46MzMzpKam0tPTg9Vq5eOPP+bFF1/EYrHg9/t58803ef7552loaGDnzp0kJyczMjJCXl4e
      giDgcDh455132LNnD42NjTz88MMEg0EAMjJmXVucTifDw8ORABuz2Yzb7SY+Pl7di+Ds9FTk
      q6/+b+nnr8iMj41hTUhCf4tyrF6/F5fXtcDWXne8gHfBjxEOh9m9ezenT5/GbrdTX1/Pq6++
      ysaNG+np6SExMZHBwUE++ugjtm3bRn9/PxUVFfT19bFjxw727t3Lxo0beeWVVwDo7u5Gq9Xy
      zTffYLfbeffddxFFkYGBAfbu3csjjzxCf38/9fX1fPjhh2zfvp2XX34Zj8fD2rVrycjIoKSk
      hK6uLtxuNxaLhWAwSGdnJ8PDw/T39/PGG2+QmJjIxYsXefvtt1m5ciUzMzN0dnYyMTHB2bNn
      2bBhA/v27UOWZf74xz8iSRJtbW289dZb5OTkRFyxr8UbqFoA4wPtNHx9hscfLKSld4Zd2x+5
      qU9/bzem+BTCoTAsQj3ipUJxcTFHjhzhqaeeYmhoiObmZkpKSkhLS6O6upqWlhZSU1Opq6uj
      srKSLVu2IAgCTqczEqF1LagEZt0qWltbSU1NpaioKLJdURQqKipYv349Nw7BVAAACZVJREFU
      WVlZVFVV4Xa7qampQZZlOjs72bp1K5999hn19fWsXbsWl2v2YmM2m3nuuee4dOkSTz75JIIg
      YDQaaW5uxmq1ApCZmcmjjz7K6OgoBoOBlpYWPB4PW7dupbe3l2AwiMvloqamhqKiIuLi4mYz
      nNjtbNiwQd1TIPvJoxw900dZQR5rqmpItN5ct+yHE99itsYjS0aK87PndIb7r4Pvcn7w/GKZ
      zdpVa/iXJ/5pQfZ9vTOcWuno6IhEh3k8Hmpra0lNTZ2zr6oveeXrajhxpoOxsREGhi6TWHZz
      gY7EhARk0YAvEEKj0cyZGGuxnUMFQUCSFuZfEwqFbto2Pj5OQkLCvIt/r9dLMBiMXH2XKteC
      +B977LF5+6paACgyLr/MgxUVJKTMnXo7Z1XxbJyo8f4K3bxbRkdHaWlpITc3l08++YQXXniB
      6elpXC4XPp8Pl8uFzWaju7ubnTt3otPp6OzspKGhgfr6epKSkpiamqKmpgZBEPj0008xmUwY
      DAZGRkaorq6mqamJ+vp6Dhw4wPbt22lsbKS6uppz584RHx9PQkICFy5coKKigu+++47Nmzdz
      4sQJqqqqOHbsGLW1tRQXFy/oOKhbABodm/+qFp/PR3COGgYwe7VdjiVdv//+e44dO0ZpaSlu
      txun00lDQwO5ubl89dVXZGRkEBcXF3GXvjaFEASBw4cP4/f7qaioYMOGDQB8/vnn6PV6ysvL
      OXToEIIg0NTURHl5OY2NjdhsNg4ePIjL5aKzsxOz2UwoFCIhIYFTp07hcDjQarX4fD6cTieH
      Dx/GZrPFBHBXyCEG+vtwTo7QM+Yj67Glk50u2ng8HtxuNydPnmTLli0EAgGeeeYZ0tPTeeCB
      BxgZGSEzMxNJkiIB5KtWrWLTpk0UFRXx3nvv8fjjj9+wzz179uD3+ykoKGDlypXYbDaysrLY
      tWsXmzdvJikpibS0NOrq6gD44IMPGBwc5LXXXqO1tZXq6moMBgMGg4Gnn36a2traBR8HVS+C
      CXr54nAj3plJQivy+dvH5vcNmus9wNv/+w7tA4u3CK4sWMu/PfWvd7UPRVEYdFwic0Uaokbk
      8swY7oCbbGsGA44h/AE/Fk0cLjykWlJAEBhzjZMXn4NW/OXrYigUIhgMYrxu2uj1em/4fDt4
      PB5kWcZsNt/ROd4L1H0HkPQYhBCjPtj2yJpoW7OojLrGGZ4ZIdWSgqgR0WokguEgDr+TmYCL
      gsQ8JFFC9Ewx6rlCKBzCojcjiuK8i2FRFCOpVK5xJz9ii8Xyq79zr1G3M1xgmrYhD7979EG+
      OtoSbWsWjbAcpnuij2A4xLRvNsuDXtJFHn+mmJPoutKLKGgIyWEEBAoS87jimcDhdfzSrlWH
      ugWgs1GZb+PPTaf47eaHom3NoqERNDyQuY7MFWnE6eIYnRnn4vQlfOEAoqBh0utAJ+mY8DiY
      9jnRiVouOUcIhINI4vKKjFP3FCjkwd7ZR2JyCqNj46QnRv+WuxgIgoBO0pGfkANAnM7ESkty
      5O+JcT89Ek63/pS0OM2aglm3vOIU1C0AUcQzM0N6ZhaSCgPdeyf7CVwNxFkM4o222QWzilC3
      AEIBzCnZ1NXVoTfc+ll/d+tJbLmVJFvur9u/faQDp39m0Y5XklwQE8B9hSCRZJFobGwkv6yS
      daU3u0K4HWN4/UEMwTCyLN6QCjBqKNxmFNviPsGWFWVBo+uigaoFMD5+BZPRwLm28+SUVM7Z
      p6vnAnLAy/j4FTLjM9BoNNFPGCtwmzYsrpOSgBD9sbnHqFoAX3x2EH1yAYLBTFVZ/px91lU/
      iHd6HL/2p4ixpZAacSnY8HMEYWnadTeoWgC7//HfcU1PcvKEhlNtPdSUz12c27gimeXlChfj
      Guq6n/0MQRAYuTRAQDCyujAv2uYsexSPk+B3h5BH+3/63PwnQl0nkUf7CX73ZxSfm9C5IwS/
      PYjidRE4/gnhSwsXjqpqARBw8PnRs5RnW/jTF8eibc2yR/F7EItqCLUdB0Ae7gGDCTGzmND5
      bxH0JsIXzhAe6kBctZ7wYBsEfAiWxAWzSd0CELQYBA/HT9qZGurkdHtvtC1a1ghaA6EfvkSq
      mg1UEVJyEIxWgi2fIohaFEUGQUAsqCL4wxdo0gsQjGbCrUcWzCb1rgFCPnoGRygsKiIYkql8
      qIzS/KxoW7WsCV84A+EQ4QtnUCwJYDAjX+5Bk5KDEvSjjF9EU1pLuPdHBEmP4hhDvtyLJrdi
      wWxSrwA0EuMTE1RV1aAAOkNsmRttpDWbYc3mG7aJmTcHvIjZqyNtwZKIxrZwL99ULYDmr/+P
      wav1ygorqlk/R0xwjHtLeKgTue/cvd3nL/1RlNA+VH/H+1avAIDkzHyeeOIJACStLsrWLA/C
      F84Q/PJ/Fu+AOsNdCUDVi+Bdv/8DJpMJk8mE7hY5f+RwkKGhIYKhJeACEWPRUbUAIqlF/DN8
      f3bukMapySlsNivt5zsW0bIYSwVVT4GQg7S3dxAMyxg1WgIhGZ10o+ZtNit2eztZBSXIsows
      yzcljlrsqGlFUebM3zNHzwW35XpkeX67lCg4E97eWM2NugUQdPPVkRYerinky6Mnae0f4w9P
      bL6hS+uPpzEmpKKEw/dhYqzFNUyjmd8uOQrOcneTREzdAtCZyVghcfJcFw/U1oL+5gLd5etq
      CIXDiNL9FQsQ496gbgGEAmjjrBSuyqF6feWclSAlrRbpPq91G2N+vBPj+J3TN21XtwAkAxVl
      RTR+/TVTPoXtD2+ItkUxokTfXw4x0PTFTdvVLYCQn5mgyM5df4c3GG1jYixFVP0Y9OT3LXS1
      t/LGW/9JMKzeBHgx7hxVC8Dr9SCIEhpRwmTUz/+FGMsOVU+B6rY9jqLIbP3NRqamZ0hcEb0c
      lDGWJqoWAIAgaIhPTiM+2obEWJKoegoUI8Z8LHsBXBkZwm5vZWxy8apAxlg6qH4KNB8jEw5W
      ry6nrb2dJFspoVCIUCgUSZAliiLxJhtptlQ0ooh8NTGUKIqRJFG3al/fP9IWZnPrRNqCMHus
      69o24wr8fj+yLCMIAsLV7T9vmzRGwpoQgqBBAGRFvqGtEWavb3O1FUCZs/1TSdnry8sqsoIY
      1uD3+2/crigIghDZJustBJJyUQBR1CCH5avt2fOfq/3zsROujtfcbQ3hsDzb1miQRS2iz3fL
      MYq0zRaMGdk3b1d1gYzboK3NTmlZKe3tXawuK4kUyLg2LNf+uUulHQ3ms2spjMudjuOyF4B7
      eoL+oRGy8wuxGHVzVoiJoV7+H8xcN3oGJCpQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tips Revenue Analysis' width='192'>
      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
      dBaX6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Fare Amount Distribution based on Location' width='192'>
      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
      fop+z3UZ68/52pzx4nwXGAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Tip Amount Distribution based on Location' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Distribution Based on Borough' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Distribution Based on Location' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip Distribution Based on Zone' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Distribution Per Date' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Distribution by Day and Hour' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip Distribution by Hour and Borough' width='192'>
      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
      f9EMBgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip Proportion by Day' width='192'>
      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
      VivpVJL21uOUlb9XWKmqppaZaPSSnWJfUwXBdTVFOeNzIaRQCETH8cemCm1KHpsD+6N/gtpy
      05L6Hc9wWT1AZ9sJ/uV//y92vvwC8VjsnO/2v/0GR959h+7O9nMWqAzD4MDet0glk1itVt7c
      /SrvvLUHKSUv/OrnHNq/F5vNTu+pLjRN443dO9j7xmtYrFZOHD3Myy/8iv7eUwz291Jd18Cb
      r+1ASsmBvW/iDwTOsUFVLdz/4EOs23jxmHNXRYDwjQ2X8/hFgVSUK9pIb0Gw2LB98j+hrrx5
      STZ+uMzSiF6/n8e/9nu8+MxT53w+PjpCd0cb227/ECPD5759LRYL9z/wWaSUJOIxEvEYVquN
      2Mw0A709fPX3vo7N9p7zmctmWX/DZrbcfCutx4/Q2XaC6NQkHp+PYDhMOpVkJhpFUVWqa+rO
      s9Fms/PAw19AKApHD+6f+6E9Dkq3Ns9LCcNCMFpeDUfeKqwRNge2j/021s3Fk997JVyWACoq
      q9DeV7ffNE1e2/ES2z98D+nU3HUso1OTfPdf/oF4PMbGTVvZuPkmBvp6yGYz/NPf/H8kEjHW
      b7yRj33qM9x0y3Z++J1/4dfPPY3X6+Nzj38VLZeju6ON6OQkDqeL9rZj2Gx2nv/lk1itdu66
      9z5Uy3uPYrPZeOChz+N2u3nn7Tcw9Pc2nFNsFiI3t2Cd5ypui0na5SHtdOFMF6huqN2N/XP/
      DXXlzYW5/zxyWT4A5Bv8iaOHqKlrwF8SoP3EMY4fPojX56e/9xTjYyOEQmFKAu+FENvtDjZt
      2ca6jZvoPdnFzHSUkkCQ/t5TPPbV/8jNt27n3Xfexl8S4MSxw5RXVvLpz30Jt8dD2/Gj3LD5
      JnJajrGRIUojFTgcDrraW/n4gw/T3dFKIBjC7TnXMVRVlbqGZmw2G72nupGmmd+hfXMj7hWF
      D2++GqQQlETH8ceii35vESjH/tD/tWTH/O/nqscAQhFUVlUzOjJEdGqSVDJJbGZ69vtcLsvw
      0ACqxUK4NEKkYgUjw0MEgmGy2QzZTAany43NZsMwdMZHhnF7fLhcbnz+ANNTk5imydr1N7B+
      0xbGRoaoa2xGSomiqiiqinGBpBur1cot2z/Mxx94CIfTia+pHG9d6ZL/w0lFKcgGGqK8Acfj
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Proportion by Time Zone' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip Proportion by Week Category' width='192'>
      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
      NBEAwdH+Pz5M9as3QS7+AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trip by Location' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip by Time' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
